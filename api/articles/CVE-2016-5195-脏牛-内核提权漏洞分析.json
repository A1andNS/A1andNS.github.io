{"title":"CVE-2016-5195(脏牛)内核提权漏洞分析","uid":"6dd91781970153ec4199ae8f8830b41e","slug":"CVE-2016-5195-脏牛-内核提权漏洞分析","date":"2020-09-06T01:01:27.000Z","updated":"2020-09-06T04:10:54.000Z","comments":true,"path":"api/articles/CVE-2016-5195-脏牛-内核提权漏洞分析.json","keywords":"A1andNS","cover":[],"content":"<h2 id=\"实验目的\"><a href=\"#实验目的\" class=\"headerlink\" title=\"实验目的\"></a>实验目的</h2><ul>\n<li>了解Linux内核提权漏洞原理</li>\n<li>掌握检测修复脏牛漏洞技术</li>\n</ul>\n<h2 id=\"实验内容\"><a href=\"#实验内容\" class=\"headerlink\" title=\"实验内容\"></a>实验内容</h2><h3 id=\"为什么这个漏洞叫脏牛（Dirty-COW）漏洞？\"><a href=\"#为什么这个漏洞叫脏牛（Dirty-COW）漏洞？\" class=\"headerlink\" title=\"为什么这个漏洞叫脏牛（Dirty COW）漏洞？\"></a><strong>为什么这个漏洞叫脏牛（Dirty COW）漏洞？</strong></h3><p>Linux内核的内存子系统在处理写时拷贝（Copy-on-Write)时存在条件竞争漏洞，导致可以破坏私有只读内存映射。</p>\n<p>一个低权限的本地用户能够利用此漏洞获取其他只读内存映射的写权限，有可能进一步导致提权漏洞</p>\n<p><strong>漏洞危害：</strong>低权限用户利用该漏洞技术可以在全版本Linux系统上实现本地提权</p>\n<p><strong>影响范围：</strong>Linux内核&gt;=2.6.22（2007年发行）开始就受影响了，直到2016年10月18日才修复。</p>\n<p><strong>360 Vulpecker Team：</strong>Android 7.0最新的2016年10月补丁安全级别的系统上测试过漏洞POC，确认Android受影响</p>\n<h2 id=\"实验环境\"><a href=\"#实验环境\" class=\"headerlink\" title=\"实验环境\"></a>实验环境</h2><ul>\n<li><p><strong>实验平台</strong>：<code>i春秋平台</code></p>\n</li>\n<li><p><strong>操作机</strong>：<code>Ubuntu</code></p>\n</li>\n</ul>\n<h3 id=\"实验工具\"><a href=\"#实验工具\" class=\"headerlink\" title=\"实验工具\"></a>实验工具</h3><ul>\n<li><code>gcc</code>：linux系统下的编译器,用于编译程序</li>\n<li><code>dirtyc0w.c</code>：本次实验漏洞验证的POC源码</li>\n</ul>\n<h2 id=\"实验步骤\"><a href=\"#实验步骤\" class=\"headerlink\" title=\"实验步骤\"></a>实验步骤</h2><h4 id=\"步骤1：编译POC\"><a href=\"#步骤1：编译POC\" class=\"headerlink\" title=\"步骤1：编译POC\"></a>步骤1：编译POC</h4><p>打开实验机器，输入帐号<code>ichunqiu</code>密码<code>ichunqiu</code>登录到系统；</p>\n<p>使用<code>ls</code>（查看当前目录文件）命令可以看到POC源码文件<code>dirtyc0w.c</code>。</p>\n<p>当前<code>ichunqiu</code>账户是普通用户操作权限。</p>\n<p><img src=\"https://s1.ax1x.com/2020/09/06/weC2Xq.png\" alt=\"用户权限\"></p>\n<p>可以看到当前账户为ichunqiu，属于普通账户，这里的ubuntu是14.04.1，Linux内核版本为3.19</p>\n<p><code>gcc -pthread dirtyc0w.c -o dirtyc0w</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200906120102.png\" alt=\"编译\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>说明：可见编译选项中指定<code>-pthread</code> 会附加一个宏定义 <code>-D_REENTRANT</code>该宏会导致 <code>libc</code> 头文件选择那些<code>thread-safe</code>的实现。</p></blockquote>\n<h4 id=\"步骤2：验证漏洞\"><a href=\"#步骤2：验证漏洞\" class=\"headerlink\" title=\"步骤2：验证漏洞\"></a>步骤2：验证漏洞</h4><p>执行以下命令进行将<a href=\"http://www.ichunqiu.com字符串保存到`foo`文件内./\">www.ichunqiu.com字符串保存到`foo`文件内。</a></p>\n<p><code>echo a1andns.github.io &gt; a1andns</code></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> 如果测试写入文件，没有<code>r</code>也就是读取权限，就会导致POC执行失败。因为该漏洞是利用系统处理写时拷贝（Copy-on-Write)时存在条件竞争漏洞，越权写入文件内容。</p></blockquote>\n<p>来配置文件权限，设置为 0404 （Linux八进制对权限控制的定义写法），0404代表所有用户默认情况下对改文件只有读取权限，无法修改删除。</p>\n<p><code>chmod 0404 a1andns</code></p>\n<p>接下来可以准备测试POC越权写文件效果了。</p>\n<p> <code>./dirtyc0w foo m00000000000000</code></p>\n<p>执行dirtyc0w文件 <code>foo</code> 是文件名参数 <code>m00000...</code>为利用漏洞写入的值。</p>\n<p><img src=\"https://s1.ax1x.com/2020/09/06/weCoh4.png\" alt=\"运行poc程序\"></p>\n<p>下面看看是否写入了数据</p>\n<p><img src=\"https://s1.ax1x.com/2020/09/06/weCOnx.png\" alt=\"成功写入了文本\"></p>\n<p>果然写入了进去。</p>\n<p>由此POC执行结果就可以判断该系统存在CVE-2016-5195（脏牛）内核提权漏洞。</p>\n<h4 id=\"分析与思考\"><a href=\"#分析与思考\" class=\"headerlink\" title=\"分析与思考\"></a>分析与思考</h4><ul>\n<li>Linux内核的内存子系统在处理写时拷贝（Copy-on-Write)时存在条件竞争漏洞，导致可以破坏私有只读内存映射。</li>\n<li>一个低权限的本地用户能够利用此漏洞获取其他只读内存映射的写权限，有可能进一步导致某些Linux版本提权漏洞。</li>\n<li>低权限用户可以利用该漏洞修改只读内存，进而执行任意代码获取Root权限。</li>\n<li>该漏洞影响所有目前运行Linux系统的设备，包含但不限于运行Linux系统的服务器，Docker容器/手机/路由器/智能设备等。</li>\n<li>Linux写时拷贝技术(copy-on-write)</li>\n</ul>\n<p>在Linux程序中，fork（）会产生一个和父进程完全相同的子进程，但子进程在此后多会exec系统调用，出于效率考虑，linux中引入了“写时复制“技术，也就是只有进程空间的各段的内容要发生变化时，才会将父进程的内容复制一份给子进程</p>\n<ul>\n<li><strong>竞态条件</strong></li>\n</ul>\n<p>竞态条件（race condition）是指设备或系统出现不恰当的执行时序，而得到不正确的结果。</p>\n<ul>\n<li><p>linux内存管理–缺页异常处理</p>\n<p>触发异常的线性地址处于用户空间的vma中，但还未分配物理页，如果访问权限OK的话内核就给进程分配相应的物理页。</p>\n<p>触发异常的线性地址不处于用户空间的vma中，这种情况得判断是不是因为用户进程的栈空间消耗完而触发的缺页异常。</p>\n<p>如果 是的话则在用户空间对栈区域进行扩展，并且分配相应的物理页，如果不是则作为一次非法地址访问来处理，内核将终结进程</p>\n</li>\n<li><p><strong>缺页中断</strong></p>\n<p>缺页中断就是要访问的页不在主存，需要操作系统将其调入主存后再进行访问。在这个时候，被内存映射的文件实际上成了一个分页交换文件。</p>\n</li>\n</ul>\n<h4 id=\"修复方案\"><a href=\"#修复方案\" class=\"headerlink\" title=\"修复方案\"></a>修复方案</h4><ol>\n<li>更新最新Linux Kernel源码，并重新编译，也可直接升级最新版本。</li>\n</ol>\n<ul>\n<li>修复相关代码</li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token argument-name\">https</span><span class=\"token punctuation\">:</span><span class=\"token comment\">//git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/？id=19be0eaffa3ac7d8eb6784ad9bdbc7d67ed8e619</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li><p>免重启热修补</p>\n<p>代码如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"> probe kernel.function<span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>sys_madvise<span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$behavior</span> <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token variable\">$behavior</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<p>Ubuntu系统修复安装SystemTap相关步骤：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> gcc systemtap\n\n<span class=\"token assign-left variable\">ddeb_filename</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>dpkg-query --show --showformat<span class=\"token operator\">=</span><span class=\"token string\">'<span class=\"token variable\">$&#123;Package&#125;</span>-dbgsym_<span class=\"token variable\">$&#123;Version&#125;</span>_<span class=\"token variable\">$&#123;Architecture&#125;</span>.ddeb'</span> linux-image-<span class=\"token punctuation\">$(</span>uname -r<span class=\"token punctuation\">)</span><span class=\"token variable\">)</span></span>\n\n<span class=\"token function\">wget</span> http://ddebs.ubuntu.com/pool/main/l/linux/<span class=\"token variable\">$&#123;ddeb_filename&#125;</span>\n\ndpkg -i <span class=\"token variable\">$&#123;ddeb_filename&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>测试SystemTap安装成功：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">stap -e <span class=\"token string\">'probe begin &#123; print(&amp;quot;hello world<span class=\"token entity\" title=\"\\n\">\\n</span>&amp;quot;); exit(); &#125;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>执行热修补</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">stap -Fge <span class=\"token string\">'probe kernel.function(&amp;quot;sys_madvise&amp;quot;) &#123; if (<span class=\"token variable\">$behavior</span> == 4) &#123; <span class=\"token variable\">$behavior</span> = 0 &#125;&#125;'</span>\n\nDisconnecting from systemtap module.\nTo reconnect, <span class=\"token builtin class-name\">type</span> <span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>staprun -A stap_9f8ce8307eb418da7c981b3223eec678_12644<span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>修补完成</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lsmod <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> stap\nstap_9f8ce8307eb418da7c981b3223eec678_12644    <span class=\"token number\">81920</span>  <span class=\"token number\">0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n<p>可以看到 SystemTap 编译出的内核模块已经成功加载。</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p><a href=\"https://www.ichunqiu.com/experiment/detail?id=100258&amp;source=2\">https://www.ichunqiu.com/experiment/detail?id=100258&amp;source=2</a></p>\n","text":"实验目的 了解Linux内核提权漏洞原理 掌握检测修复脏牛漏洞技术 实验内容为什么这个漏洞叫脏牛（Dirty COW）漏洞？Linux内核的内存子系统在处理写时拷贝（Copy-on-Write)时存在条件竞争漏洞，导致可以破坏私有只读内存映射。 一个低权限的本地用户能够利用此漏洞...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"权限提升","slug":"权限提升","count":2,"path":"api/categories/权限提升.json"}],"tags":[{"name":"漏洞复现","slug":"漏洞复现","count":4,"path":"api/tags/漏洞复现.json"},{"name":"权限提升","slug":"权限提升","count":2,"path":"api/tags/权限提升.json"},{"name":"漏洞分析","slug":"漏洞分析","count":3,"path":"api/tags/漏洞分析.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E7%9B%AE%E7%9A%84\"><span class=\"toc-text\">实验目的</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">实验内容</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%99%E4%B8%AA%E6%BC%8F%E6%B4%9E%E5%8F%AB%E8%84%8F%E7%89%9B%EF%BC%88Dirty-COW%EF%BC%89%E6%BC%8F%E6%B4%9E%EF%BC%9F\"><span class=\"toc-text\">为什么这个漏洞叫脏牛（Dirty COW）漏洞？</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">实验环境</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">实验工具</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">实验步骤</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A41%EF%BC%9A%E7%BC%96%E8%AF%91POC\"><span class=\"toc-text\">步骤1：编译POC</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A42%EF%BC%9A%E9%AA%8C%E8%AF%81%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">步骤2：验证漏洞</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%9E%90%E4%B8%8E%E6%80%9D%E8%80%83\"><span class=\"toc-text\">分析与思考</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">修复方案</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\"><span class=\"toc-text\">参考资料</span></a></li></ol>","author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"操作系统简介","uid":"5d0069340c1ad3e5a9c0238a6c992be8","slug":"操作系统简介","date":"2020-09-06T07:22:52.000Z","updated":"2020-09-06T12:19:38.000Z","comments":true,"path":"api/articles/操作系统简介.json","keywords":"A1andNS","cover":null,"text":"学校操作系统教的好像比较迟，我先跑了。 什么是操作系统操作系统就是一类负责让程序运行变容易，允许程序共享内存，让程序能够与设备交互，以及其他类型的又去工作的软件。因为操作系统主要利用一种通用的虚拟化技术，所以我们也经常称操作系统为虚拟机，操作系统也经常实现多程序运行和通知访问自己...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"操作系统","slug":"操作系统","count":3,"path":"api/categories/操作系统.json"}],"tags":[{"name":"操作系统","slug":"操作系统","count":3,"path":"api/tags/操作系统.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"PHP学习(七)","uid":"b2b1874642f5ccef369c939a5b309ee0","slug":"PHP学习-七","date":"2020-09-03T02:54:29.000Z","updated":"2020-09-03T15:33:42.000Z","comments":true,"path":"api/articles/PHP学习-七.json","keywords":"A1andNS","cover":null,"text":"PHP命名空间PHP 命名空间可以解决以下两类问题： 用户编写的代码与PHP内部的类/函数/常量或第三方类/函数/常量之间的名字冲突。 为很长的标识符名称(通常是为了缓解第一类问题而定义的)创建一个别名（或简短）的名称，提高源代码的可读性。 定义命名空间命名空间通过关键字name...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"PHP","slug":"PHP","count":7,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":8,"path":"api/tags/PHP.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}