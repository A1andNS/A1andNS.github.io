{"title":"hackergame 2019 WP（只是一些我会的）","uid":"9dd1d2d0ce0a5405e3a49858d2b61335","slug":"hackergame-2019-WP（只是一些我会的）","date":"2020-03-09T07:34:20.000Z","updated":"2020-04-13T00:46:58.000Z","comments":true,"path":"api/articles/hackergame-2019-WP（只是一些我会的）.json","keywords":"A1andNS","cover":[],"content":"<h1 id=\"hackergame-2019\"><a href=\"#hackergame-2019\" class=\"headerlink\" title=\"hackergame 2019\"></a>hackergame 2019</h1><h2 id=\"签到题\"><a href=\"#签到题\" class=\"headerlink\" title=\"签到题\"></a>签到题</h2><p>首先打开网页看到叫我提交token，发现提交button是不可用的，所以查看前端代码，修改button模块的属性把disable改为able然后输入token即可得到flag： flag{Welcome_to_Hackergame_2019_ef71c55f9a} </p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020022523221070.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2MTM5MDQ1,size_16,color_FFFFFF,t_70\" alt=\"1\"></p>\n<h2 id=\"白与夜\"><a href=\"#白与夜\" class=\"headerlink\" title=\"白与夜\"></a>白与夜</h2><p>打开网页得到一段对话和图片，根据提示flag就在图片里，所以就是图片隐写题目，把图片保存到本地，结合“人家明明是白猫”使用stegsolve打开，通过通道分离，得到一个flag：flag{4_B14CK_C4T}</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200225232234871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2MTM5MDQ1,size_16,color_FFFFFF,t_70\" alt=\"2\"></p>\n<h2 id=\"信息安全2077\"><a href=\"#信息安全2077\" class=\"headerlink\" title=\"信息安全2077\"></a>信息安全2077</h2><p>打开后居然是一个倒计时，题目很明确要我去读flag.txt文件，我一开始想要直接访问flag.txt可惜没有成功，所以我用burpsuit抓了个包，发现有个定义时间的文件头，既然时间没到就把它改到了吧，我直接对文件头进行更改，把2019年改为了2077年，重发，得到了flag：flag{Welc0me_to_competit1on_in_2077}</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200225232302338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2MTM5MDQ1,size_16,color_FFFFFF,t_70\" alt=\"3\"></p>\n<h2 id=\"宇宙终极问题\"><a href=\"#宇宙终极问题\" class=\"headerlink\" title=\"宇宙终极问题\"></a>宇宙终极问题</h2><p>问题是x^3+y^2+z^3=42</p>\n<p>所以我们需要构造一个合理的x、y、z</p>\n<p>实在是构造不了，所以Google了一下</p>\n<p> 三立方数之和的维基百科里有这样的内容</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020022523242971.png\" alt=\"4\"></p>\n<p>输入x、y、z的值，得到flag：</p>\n<p>x:-80538738812075974</p>\n<p>y:80435758145817515</p>\n<p>z:12602123297335631</p>\n<p>flag{W0W_you_kn0w_the_Answer_t0_l1f3_Un1v3r5e_&amp;_Everyth1ng_e4209f4543}</p>\n<p>接下来有好多未知数了，random prime(2^256)生成2-256之间的伪随机数。后面我就真的不会了。。。。。</p>\n<h2 id=\"网页读取器\"><a href=\"#网页读取器\" class=\"headerlink\" title=\"网页读取器\"></a>网页读取器</h2><p>打开网站根据提示，我尝试了一下输入url，他告知我不在白名单，果然是开不了，下载他的源码文件查看。</p>\n<p>发现白名单和一些要求：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020022523260698.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2MTM5MDQ1,size_16,color_FFFFFF,t_70\" alt=\"5\"></p>\n<p>例如：<code>http://</code>开头，主机名必须为<code>example.com</code> or <code>www.example.com</code></p>\n<p>接着往下看</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200225232644634.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2MTM5MDQ1,size_16,color_FFFFFF,t_70\" alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-ueEBlXGd-1582644025890)(C:\\Users\\lilon\\AppData\\Roaming\\Typora\\typora-user-images\\1571323158262.png)]\"></p>\n<p>我们得知他会在最后一位不是<code>/</code>和最后一位不是<code>:</code>时，把@后的内容当作hostname，加上我们知道了whitelist是<code>&quot;example.com&quot;</code>和 <code>&quot;www.example.com&quot;</code></p>\n<p>所以我们可以构造一个@example.com的payload</p>\n<p>加上题目上有有提示我们答案在<a href=\"http://web/flag%E9%87%8C%E6%89%80%E4%BB%A5%E6%9E%84%E9%80%A0\">http://web/flag里所以构造</a></p>\n<p><a href=\"http://web/flag@example.com\">http://web/flag@example.com</a></p>\n<p>提交后主机名没有问题，状态404</p>\n<p>所以注释后文既<a href=\"http://web/flag#@example.com\">http://web/flag#@example.com</a></p>\n<p>提交得到flag： flag{UrL_1S_n0t_SO_easy} </p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200225232711477.png\" alt=\"6\"></p>\n<h2 id=\"Happy-LUG\"><a href=\"#Happy-LUG\" class=\"headerlink\" title=\"Happy LUG\"></a>Happy LUG</h2><p>这题让我实在是摸不着头脑</p>\n<h2 id=\"正则验证器\"><a href=\"#正则验证器\" class=\"headerlink\" title=\"正则验证器\"></a>正则验证器</h2><p>下载源文件，进行代码分析，见我做的注释：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200225232732595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2MTM5MDQ1,size_16,color_FFFFFF,t_70\" alt=\"7\"></p>\n<p>接下来有一个re.compile()函数，将一个字符串编译成 pattern object，用于匹配或搜索。</p>\n<p>用r的规则去s中做匹配，成功就输出匹配成功（英语），失败就是匹配失败了</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200225232750765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2MTM5MDQ1,size_16,color_FFFFFF,t_70\" alt=\"8\"></p>\n<p>还有是使用signal.signal()函数来预设(register)信号处理函数，</p>\n<p>只要SIGALRM信号出现，就执行flag函数</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200225232811678.png\" alt=\"9\"></p>\n<p>看到signal.alarm(30)应该是要我构造一个需要执行很多次，非常耗费时间的payload。</p>\n<p>RegEx: (a+)+p </p>\n<p>-womGgjr1-1582644025893)]</p>\n<p>看到signal.alarm(30)应该是要我构造一个需要执行很多次，非常耗费时间的payload。</p>\n<p>RegEx: (a+)+p </p>\n<p>String:aaaaaaaaaaaaaaaaaaaaaaax</p>\n","text":"hackergame 2019签到题首先打开网页看到叫我提交token，发现提交button是不可用的，所以查看前端代码，修改button模块的属性把disable改为able然后输入token即可得到flag： flag{Welcome_to_Hackergame_2019_e...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"CTF","slug":"CTF","count":42,"path":"api/categories/CTF.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#hackergame-2019\"><span class=\"toc-text\">hackergame 2019</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%BE%E5%88%B0%E9%A2%98\"><span class=\"toc-text\">签到题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%99%BD%E4%B8%8E%E5%A4%9C\"><span class=\"toc-text\">白与夜</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A82077\"><span class=\"toc-text\">信息安全2077</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%87%E5%AE%99%E7%BB%88%E6%9E%81%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">宇宙终极问题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BD%91%E9%A1%B5%E8%AF%BB%E5%8F%96%E5%99%A8\"><span class=\"toc-text\">网页读取器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Happy-LUG\"><span class=\"toc-text\">Happy LUG</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E5%88%99%E9%AA%8C%E8%AF%81%E5%99%A8\"><span class=\"toc-text\">正则验证器</span></a></li></ol></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Python之pip使用","uid":"54c75574745375be4c44850b85f0e669","slug":"Python之pip使用","date":"2020-03-09T07:38:05.000Z","updated":"2020-04-13T00:46:56.000Z","comments":true,"path":"api/articles/Python之pip使用.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200323233608.png","text":"pip安装Python拥有很多的第三方库，这也是Python优秀的计算生态的组成部分，也是Python的一大特点。这些第三方库可以说解决了不少开发者的问题，也极大的方便了开发者和初学者。 说到安装第三方库，就必须用一些办法来安装这些库，其中官方给的就是pip方法，首先要想安装pi...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"资源教程","slug":"资源教程","count":7,"path":"api/categories/资源教程.json"}],"tags":[{"name":"Python","slug":"Python","count":23,"path":"api/tags/Python.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"2020年新春战疫网络安全公益赛解题记录","uid":"6c5dc7f89d0e5d8d84f40d382a537c6b","slug":"2020年新春战疫网络安全公益赛解题记录","date":"2020-03-09T07:30:43.000Z","updated":"2020-09-30T04:23:56.000Z","comments":true,"path":"api/articles/2020年新春战疫网络安全公益赛解题记录.json","keywords":"A1andNS","cover":[],"text":"圆满落幕的比赛，可惜我就会2题web，我有点不太行啊。 简单的招聘系统在用户登录界面存在万能密码绕过漏洞，存在SQL注入漏洞。经过检验是字符型漏洞。 我还发现新注册用户会覆盖原来的用户，使用万能密码绕过时，默认登录最新注册的用户。 注册新用户后，发现不是第一用户，而是第二个。说明...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"CTF","slug":"CTF","count":42,"path":"api/categories/CTF.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"新春战疫","slug":"新春战疫","count":1,"path":"api/tags/新春战疫.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}