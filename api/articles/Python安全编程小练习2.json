{"title":"Python安全编程小练习2","uid":"04eae79709b48ea326c448f0846fb5ce","slug":"Python安全编程小练习2","date":"2021-04-14T11:32:47.000Z","updated":"2021-06-28T14:41:16.106Z","comments":true,"path":"api/articles/Python安全编程小练习2.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200323233608.png","content":"<p>今天继续，来看看子域名挖掘和邮件爬取，今天涉及的两者都是对网络爬虫的深入应用，从而实现信息搜集目的。并且因为是利用爬虫来爬取搜索引擎的信息，所以直接面临的就是百度等网站的反爬虫保护，而我们要实现工具的使用就需要绕过这些保护。</p>\n<h1 id=\"前期准备\"><a href=\"#前期准备\" class=\"headerlink\" title=\"前期准备\"></a>前期准备</h1><p>就按照书上的来，我们也来看看必应搜索(<a href=\"http://cn.bing.com),首先我们先来使用浏览器来访问看看情况./\">http://cn.bing.com)，首先我们先来使用浏览器来访问看看情况。</a></p>\n<p>在bing中利用一定的语法site:baidu.com进行搜索，在结果中就得到了很多baidu.com的子域名链接，同时我们要关注url处是如何进行构造的。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/image-20210414193956381.png\" alt=\"搜索\"></p>\n<pre class=\"line-numbers language-http\" data-language=\"http\"><code class=\"language-http\">#从首页发起搜索\n<span class=\"token header-name keyword\">https:</span>//cn.bing.com/search?q=site%3Abaidu.com&amp;qs=n&amp;form=QBLH&amp;sp=-1&amp;pq=site%3Abaidu.com&amp;sc=0-14&amp;sk=&amp;cvid=A64D46DEDA524035AA338C574E14F7B3\n#解个url方便看吧：\n<span class=\"token header-name keyword\">https:</span>//cn.bing.com/search?q=site:baidu.com&amp;qs=n&amp;form=QBLH&amp;sp=-1&amp;pq=site:baidu.com&amp;sc=0-14&amp;sk=&amp;cvid=A64D46DEDA524035AA338C574E14F7B3\n#从其他搜索结果页面也发起搜索\n<span class=\"token header-name keyword\">https:</span>//cn.bing.com/search?q=site%3Abaidu.com&amp;go=搜索&amp;qs=ds&amp;form=QBRE<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>​    可用看到我们是如何进行bing搜索的，首先参数被传到了/search路由处，参数<code>q</code>是我们输入查询的内容，其他一大堆参数经过测试都与搜索结果无关，可用删除，最后基本也会得到一个精简的类似从其他搜索结果页面发起搜索的url，所以我们主要还是来看上面的最后一个URL，其实也基本就是靠q了其他的是一些应该要有的参数和内容，我们就不多做修改了，q就是我们要替换成我们自己的目标的地方。关于这个url还有一个细节的参数，通过切换页面，我们可用发现页面的切换是使用first参数来实现的。</p>\n<p>例如我切换到第2页，结果为first=9，第三页时，结果为first=19，以此类推。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">设页数为x，则first&#x3D;(x-1)*10-1，当然first只是标记了链接序号，只要序号在相应的页数中都是会返回该页内容，first为1是第一页，为10是第二页。所以这里可用有多种表达式。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/image-20210414195529612.png\" alt=\"first\"></p>\n<p>这时候可以先去用交互式，写个简单爬虫去尝试爬一下看看回复。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210414203052.png\" alt=\"爬虫\"></p>\n<p>从结果中可用看出，每一个子域名都是处于<code>&lt;h2&gt;</code>标签中<code>&lt;a&gt;</code>的href属性值。所以这就是我们可用利用beautifulsoup库来获取子域名的地方了。现在到这里我们知道了网络爬虫目标url和一些目标url参数作用。</p>\n<p>下面也稍微伪装伪装我们的爬虫，至少让它尽量正常点。首先就是要从http header 下手了。构造一个比较正常的请求头部，这里直接用firefox去看一下http包，或者抓个包看看也可用。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210414205229.png\"></p>\n<p>这是我的firefox访问bing的http头，</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;Accept&#39;: &#39;text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8&#39;,\n&#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,\n&#39;Accept-Language&#39;: &#39;zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2&#39;,\n&#39;Referer&#39;: &#39;https:&#x2F;&#x2F;cn.bing.com&#x2F;search?q&#x3D;site%3abaidu.com&amp;go&#x3D;%E6%90%9C%E7%B4%A2&amp;qs&#x3D;ds&amp;first&#x3D;0&amp;FORM&#x3D;PERE1&#39;\n&#39;User-Agent&#39;: &#39;Mozilla&#x2F;5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko&#x2F;20100101 Firefox&#x2F;87.0&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"子域名搜集\"><a href=\"#子域名搜集\" class=\"headerlink\" title=\"子域名搜集\"></a>子域名搜集</h1><p>然后配合requests库提供的session()函数来实现cookie，就基本完成了。下面开始编写程序。</p>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#! /usr/bin/python3</span>\n<span class=\"token comment\"># _*_ coding:utf-8 _*_</span>\n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup\n<span class=\"token keyword\">from</span> urllib<span class=\"token punctuation\">.</span>parse <span class=\"token keyword\">import</span> urlparse\n<span class=\"token keyword\">import</span> sys\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">bing_search</span><span class=\"token punctuation\">(</span>site<span class=\"token punctuation\">,</span> pages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    subdomain <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'Accept'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span><span class=\"token punctuation\">,</span>\n               <span class=\"token string\">'Accept-Encoding'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gzip, deflate'</span><span class=\"token punctuation\">,</span>\n               <span class=\"token string\">'Accept-Language'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2'</span><span class=\"token punctuation\">,</span>\n               <span class=\"token string\">'Referer'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'https://cn.bing.com/search?q=site%3abaidu.com&amp;go=%E6%90%9C%E7%B4%A2&amp;qs=ds&amp;first=0&amp;FORM=PERE1'</span><span class=\"token punctuation\">,</span>\n               <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0'</span>\n               <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> pages <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://cn.bing.com/search?q=site%3A\"</span> <span class=\"token operator\">+</span> site <span class=\"token operator\">+</span> <span class=\"token string\">\"&amp;go=搜索&amp;qs=ds&amp;first=\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"&amp;form=QBRE\"</span>\n        conn <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        conn<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://cn.bing.com'</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span>\n        html <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> stream<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n        soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span> <span class=\"token string\">'html.parser'</span><span class=\"token punctuation\">)</span>\n        h2 <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">'h2'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> h2<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            \tlink <span class=\"token operator\">=</span> j<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">pass</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> link<span class=\"token punctuation\">:</span>\n                    domain <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>urlparse<span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>scheme <span class=\"token operator\">+</span> <span class=\"token string\">\"://\"</span> <span class=\"token operator\">+</span> urlparse<span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>netloc<span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">if</span> domain <span class=\"token keyword\">in</span> subdomain<span class=\"token punctuation\">:</span>\n                        <span class=\"token keyword\">pass</span>\n                    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                        subdomain<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>domain<span class=\"token punctuation\">)</span>\n                        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+]\"</span> <span class=\"token operator\">+</span> domain<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n        site <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        page <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[-]usage:&#123;&#125; baidu.com 10\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    bing_search<span class=\"token punctuation\">(</span>site<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>当然也不是一开始就得到这个最终源码的，也是要通过不断地进行调试和尝试，发现问题并且改进例如try-except-else就是为了解决某些情况下异常情况，而对link值时候存在的判断也是为了解决某些情况下link为空是的无效输出。</p>\n<h2 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h2><p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210414232216.png\" alt=\"运行结果\"></p>\n<p>当然可能还是有可能存在非预期的情况，导致出现异常或出错，这是需要大量的域名测试来优化保证的，我这里只用了几个域名就已经简单优化了两次了。这就是基于爬虫的子域名查询工具的写法，其他搜索引擎原理类似，就是要看需不需要绕过反爬虫保护了。</p>\n<h1 id=\"邮件搜集\"><a href=\"#邮件搜集\" class=\"headerlink\" title=\"邮件搜集\"></a>邮件搜集</h1><p>下面在来一个邮件地址爬取的，原理其实和上面的也差不多。用了sys+optparse的组合来处理终端命令，requests+beautifulsoup实现网络爬虫，再用re来进行匹配。</p>\n<h2 id=\"源代码-1\"><a href=\"#源代码-1\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#! /usr/bin/python3</span>\n<span class=\"token comment\"># _*_ coding:utf-8 _*_</span>\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup\n<span class=\"token keyword\">import</span> optparse\n<span class=\"token keyword\">import</span> re\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">banner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'                      _ _       \\n'</span>\n          <span class=\"token string\">'  ___ _ __ ___   __ _(_) | ___ _ __ \\n'</span>\n          <span class=\"token string\">\" / _ \\ '_ ` _ \\ / _` | | |/ _ \\ '__|\\n\"</span>\n          <span class=\"token string\">\"|  __/ | | | | | (_| | | |  __/ |   \\n\"</span>\n          <span class=\"token string\">\" \\___|_| |_| |_|\\__,_|_|_|\\___|_|       v0.1\\n\"</span>\n          <span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">center</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> pages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    emails <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    key_words <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mail'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mailbox'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'邮件'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'邮箱'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'postbox'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> page <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> pages <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> key_word <span class=\"token keyword\">in</span> key_words<span class=\"token punctuation\">:</span>\n            bing_emails <span class=\"token operator\">=</span> bing_search<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">,</span> key_word<span class=\"token punctuation\">)</span>\n            baidu_emails <span class=\"token operator\">=</span> baidu_search<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">,</span> key_word<span class=\"token punctuation\">)</span>\n            sum_emails <span class=\"token operator\">=</span> bing_emails <span class=\"token operator\">+</span> baidu_emails\n            <span class=\"token keyword\">for</span> email <span class=\"token keyword\">in</span> sum_emails<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> email <span class=\"token keyword\">in</span> emails<span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">pass</span>\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+]\"</span> <span class=\"token operator\">+</span> email<span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a+\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n                        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>email <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n                    emails<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">bing_search</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">,</span> key_word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    referer <span class=\"token operator\">=</span> <span class=\"token string\">\"https://cn.bing.com/search?q=site%3abaidu.com&amp;go=%E6%90%9C%E7%B4%A2&amp;qs=ds&amp;first=0&amp;FORM=PERE1\"</span>\n    conn <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    bing_url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://cn.bing.com/search?q=\"</span> <span class=\"token operator\">+</span> key_word <span class=\"token operator\">+</span> <span class=\"token string\">\"+site%3a\"</span> <span class=\"token operator\">+</span> url <span class=\"token operator\">+</span> <span class=\"token string\">\"&amp;qs=n&amp;sp=-1&amp;pq=\"</span> <span class=\"token operator\">+</span> key_word <span class=\"token operator\">+</span> <span class=\"token string\">\"site%3a\"</span> \\\n               <span class=\"token operator\">+</span> url <span class=\"token operator\">+</span> <span class=\"token string\">\"&amp;first=\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>page <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"&amp;FROM=PERE1\"</span>\n    conn<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://cn.bing.com\"</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">(</span>referer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    r <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>bing_url<span class=\"token punctuation\">,</span> stream<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">(</span>referer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n    emails <span class=\"token operator\">=</span> search_email<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> emails\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">baidu_search</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">,</span> key_word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    emails <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    referer <span class=\"token operator\">=</span> <span class=\"token string\">\"https://www.baidu.com/s?wd=email+site%3Abaidu.com&amp;pn=1\"</span>\n    baidu_url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://www.baidu.com/s?wd=\"</span> <span class=\"token operator\">+</span> key_word <span class=\"token operator\">+</span> <span class=\"token string\">\"+site%3A\"</span> <span class=\"token operator\">+</span> url <span class=\"token operator\">+</span> <span class=\"token string\">\"&amp;pn=\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>page <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    conn <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    conn<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://www.baidu.com\"</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">(</span>referer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    r <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>baidu_url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">(</span>referer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> <span class=\"token string\">'lxml'</span><span class=\"token punctuation\">)</span>\n    h3s <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">'h3'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> h3 <span class=\"token keyword\">in</span> h3s<span class=\"token punctuation\">:</span>\n        href <span class=\"token operator\">=</span> h3<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>href<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">(</span>referer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n            emails <span class=\"token operator\">=</span> search_email<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">pass</span>\n    <span class=\"token keyword\">return</span> emails\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">search_email</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    emails <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">r'[a-z0-9\\.\\-+_]+@[a-z0-9\\.\\-+_]+\\.[a-z]+'</span><span class=\"token punctuation\">,</span> html<span class=\"token punctuation\">,</span> re<span class=\"token punctuation\">.</span>I<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> emails\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">headers</span><span class=\"token punctuation\">(</span>referer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    header <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'Accept'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span><span class=\"token punctuation\">,</span>\n              <span class=\"token string\">'Accept-Encoding'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gzip, deflate'</span><span class=\"token punctuation\">,</span>\n              <span class=\"token string\">'Accept-Language'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2'</span><span class=\"token punctuation\">,</span>\n              <span class=\"token string\">'Referer'</span><span class=\"token punctuation\">:</span> referer<span class=\"token punctuation\">,</span>\n              <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0'</span>\n              <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> header\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    banner<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    usage <span class=\"token operator\">=</span> <span class=\"token string\">\"Usage: python3 %prog [Option] argv\"</span>\n    parser <span class=\"token operator\">=</span> optparse<span class=\"token punctuation\">.</span>OptionParser<span class=\"token punctuation\">(</span>usage<span class=\"token operator\">=</span>usage<span class=\"token punctuation\">)</span>\n    parser<span class=\"token punctuation\">.</span>add_option<span class=\"token punctuation\">(</span><span class=\"token string\">\"-u\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--url\"</span><span class=\"token punctuation\">,</span> dest<span class=\"token operator\">=</span><span class=\"token string\">\"url\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'Target URL'</span><span class=\"token punctuation\">)</span>\n    parser<span class=\"token punctuation\">.</span>add_option<span class=\"token punctuation\">(</span><span class=\"token string\">\"-p\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--page\"</span><span class=\"token punctuation\">,</span> dest<span class=\"token operator\">=</span><span class=\"token string\">'page'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'int'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'The Page Will Be Searched in Search engine'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n        parser<span class=\"token punctuation\">.</span>print_help<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    center<span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    go<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"运行结果-1\"><a href=\"#运行结果-1\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h2><p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210415220648.png\"></p>\n","text":"今天继续，来看看子域名挖掘和邮件爬取，今天涉及的两者都是对网络爬虫的深入应用，从而实现信息搜集目的。并且因为是利用爬虫来爬取搜索引擎的信息，所以直接面临的就是百度等网站的反爬虫保护，而我们要实现工具的使用就需要绕过这些保护。 前期准备就按照书上的来，我们也来看看必应搜索(http...","link":"","photos":[],"count_time":{"symbolsCount":"7.7k","symbolsTime":"7 mins."},"categories":[{"name":"Python学习","slug":"Python学习","count":19,"path":"api/categories/Python学习.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"Python","slug":"Python","count":23,"path":"api/tags/Python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87\"><span class=\"toc-text\">前期准备</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AD%90%E5%9F%9F%E5%90%8D%E6%90%9C%E9%9B%86\"><span class=\"toc-text\">子域名搜集</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BA%90%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">源代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">运行结果</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%82%AE%E4%BB%B6%E6%90%9C%E9%9B%86\"><span class=\"toc-text\">邮件搜集</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BA%90%E4%BB%A3%E7%A0%81-1\"><span class=\"toc-text\">源代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C-1\"><span class=\"toc-text\">运行结果</span></a></li></ol></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"BUUOJ练习记录210418","uid":"66a2d15b629f44e698c5d7524e5b913b","slug":"BUUOJ练习记录210418","date":"2021-04-18T09:49:16.000Z","updated":"2021-09-30T12:43:12.477Z","comments":true,"path":"api/articles/BUUOJ练习记录210418.json","keywords":"A1andNS","cover":"https://gitee.com/A1andNS/blogimage/raw/master/img/3.png","text":"[HITCON 2017]Babyfirst-Revenge考点：长度限制的命令执行 这是一个典型的限制长度为 5的命令执行题目 &lt;?php echo $_SERVER['REMOTE_ADDR'].\"\\n\"; $sandbox = '/var/www/html/sandb...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"CTF","slug":"CTF","count":43,"path":"api/categories/CTF.json"}],"tags":[{"name":"BUUOJ","slug":"BUUOJ","count":13,"path":"api/tags/BUUOJ.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Python安全编程小练习1","uid":"be2246345f6d978ee51c96274fe19c7f","slug":"Python安全编程小练习1","date":"2021-04-10T15:42:19.000Z","updated":"2021-06-28T14:41:11.625Z","comments":true,"path":"api/articles/Python安全编程小练习1.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200323233608.png","text":"最近在看MS08067实验室出的《Python安全攻防》一书，故而有此系列记录学习和练习情况。 基于Socket库的聊天程序socket库之前也有接触过，第一次接触这个库实在做一个课程设计的时候，但是为了设计一个端口扫描器使用了socket库，所以这里再次遇到就不会那么陌生了。关...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"Python学习","slug":"Python学习","count":19,"path":"api/categories/Python学习.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"Python","slug":"Python","count":23,"path":"api/tags/Python.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}