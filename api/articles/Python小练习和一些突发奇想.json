{"title":"Python小练习和一些突发奇想","uid":"5d5602ee59abc860badf926b643c5130","slug":"Python小练习和一些突发奇想","date":"2020-04-09T07:19:49.000Z","updated":"2020-04-13T00:48:06.000Z","comments":true,"path":"api/articles/Python小练习和一些突发奇想.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200323233608.png","content":"<p>今天无意接触了一题Python练习题，刚好试试手。结果确实很有效果。</p>\n<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>随机输入10个不重复的正整数，然后输出排序后的数列。</p>\n<p>具体要求：</p>\n<p>（1）每次输入一个数前，都提示“请输入第X个数字”</p>\n<p>（2）如果输入的数字有重复，提示“数字有重复”之后，继续提示“请输入第X个数字”</p>\n<p>（3）如果输入的内容不是数字，提示“必须输入数字”之后，继续提示“请输入第X个数字”</p>\n<p>（4）如果正确输入完第10个数字之后，显示从小到大排序后的10个数字的列表。</p>\n<p>（提示：while结构list列表X代表具体的第几个数）</p>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">x <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">while</span> x <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        number <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入第\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"个数字:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> number <span class=\"token keyword\">in</span> ls<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数字有重复\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">continue</span>\n        ls<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span>\n        x <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"必须输入数字\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">continue</span>\nls<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"运行效果\"><a href=\"#运行效果\" class=\"headerlink\" title=\"运行效果\"></a>运行效果</h2><p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20200409150550.png\" alt=\"运行效果\"></p>\n<h2 id=\"问题与思考\"><a href=\"#问题与思考\" class=\"headerlink\" title=\"问题与思考\"></a>问题与思考</h2><p>虽然程序很简单，但是一开始由于我在某些函数的选择上出了点问题所以还是画了点时间。在输入语句那，我起初使用了eval()来进行自动类型转换，但是由于x变量的缘故，在输入x字符时程序认为x是整型变量x，所以不会报错而是把x变量对应的数字传给了number变量。后来还好想到直接使用强制类型转换来解决问题。eval虽好用，但是也会导致一些不需要的执行产生。这在之前学习eval函数的时候就已经谈到过了。但是有给我一个想法了，eval和system函数结合起来执行命令。</p>\n<h3 id=\"奇思妙想\"><a href=\"#奇思妙想\" class=\"headerlink\" title=\"奇思妙想\"></a>奇思妙想</h3><p>如果把eval和system函数结合起来执行命令，那么效果就是eval函数把输入语句进行执行，到达命令执行目的。</p>\n<h3 id=\"案例代码\"><a href=\"#案例代码\" class=\"headerlink\" title=\"案例代码\"></a>案例代码</h3><p>极其简单，就是一个原理演示：</p>\n<p>产生命令执行的原因是import了一个os库，并且有一个未经过过滤的eval函数。</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">import os\na &#x3D; eval(input(&quot;&quot;))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"输入效果\"><a href=\"#输入效果\" class=\"headerlink\" title=\"输入效果\"></a>输入效果</h3><p>我首先试一下输入<code>os.system(&quot;ping www.baidu.com&quot;)</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20200409155038.png\" alt=\"ping命令成功执行\"></p>\n<p>再来一个ifconfig</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20200409155448.png\" alt=\"ifconfig查询成功\"></p>\n<p>这样也是可以成功执行的，编程的好习惯很重要，不要随便引入没有用到的函数库，这对安全可能会造成一定的威胁。例如os库的任意引用，加上过度信任用户输入，就会导致一些不利的后果。</p>\n","text":"今天无意接触了一题Python练习题，刚好试试手。结果确实很有效果。 题目随机输入10个不重复的正整数，然后输出排序后的数列。 具体要求： （1）每次输入一个数前，都提示“请输入第X个数字” （2）如果输入的数字有重复，提示“数字有重复”之后，继续提示“请输入第X个数字” （3）...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"Python学习","slug":"Python学习","count":19,"path":"api/categories/Python学习.json"}],"tags":[{"name":"Python","slug":"Python","count":23,"path":"api/tags/Python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE\"><span class=\"toc-text\">题目</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BA%90%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">源代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">运行效果</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98%E4%B8%8E%E6%80%9D%E8%80%83\"><span class=\"toc-text\">问题与思考</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3\"><span class=\"toc-text\">奇思妙想</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A1%88%E4%BE%8B%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">案例代码</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">输入效果</span></a></li></ol></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"常用网络安全设备默认口令","uid":"b2e98445dd6803f9f6409873488359c5","slug":"常用网络安全设备默认口令","date":"2020-04-10T14:47:34.000Z","updated":"2020-04-13T00:48:10.000Z","comments":true,"path":"api/articles/常用网络安全设备默认口令.json","keywords":"A1andNS","cover":null,"text":"本文转载自https://www.cnblogs.com/R3col/p/12452571.html 一个搜密码平台http://www.sopwd.com/ 产品名称 默认账号 默认密码 深信服产品 sangfor sangfor sangfor@2018 sangfor@20...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":35,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"},{"name":"密码口令","slug":"密码口令","count":1,"path":"api/tags/密码口令.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Java之继承学与练","uid":"fabd85a3186e7876568f09aa83605b1b","slug":"Java之继承学与练","date":"2020-04-08T11:27:14.000Z","updated":"2020-04-13T00:48:00.000Z","comments":true,"path":"api/articles/Java之继承学与练.json","keywords":"A1andNS","cover":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1584797250934&di=7c8cf327145401b1534a2902f687257f&imgtype=0&src=http%3A%2F%2Fs7.51cto.com%2Fwyfs02%2FM01%2F73%2F3F%2FwKioL1X4zfyRH-yTAABu41grSmY047.jpg","text":"由于清明节休息了几天，今天重新开工了。今天学习了java继承相关的知识，然后做做练习。 继承的概念继承是java面向对象编程技术的一块基石，因为它允许创建分等级层次的类。 继承就是子类继承父类的特征和行为，使得子类对象（实例）具有父类的实例域和方法，或子类从父类继承方法，使得子类...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"Java学习","slug":"Java学习","count":6,"path":"api/categories/Java学习.json"}],"tags":[{"name":"Java","slug":"Java","count":6,"path":"api/tags/Java.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}