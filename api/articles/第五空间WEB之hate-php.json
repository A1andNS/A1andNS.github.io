{"title":"第五空间WEB之hate-php","uid":"64631c5ddb0aa3cce868e64df4ac6772","slug":"第五空间WEB之hate-php","date":"2020-06-28T04:15:47.000Z","updated":"2020-06-28T06:26:04.000Z","comments":true,"path":"api/articles/第五空间WEB之hate-php.json","keywords":"A1andNS","cover":[],"content":"<h2 id=\"hate-php\"><a href=\"#hate-php\" class=\"headerlink\" title=\"hate-php\"></a>hate-php</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>复现平台：CTFHUB</p>\n<p>题目来源：“第五空间”智能安全大赛WEB题</p></blockquote>\n<p>题目上来直接给源码：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/(f|l|a|g|\\.|p|h|\\/|;|\\\"|\\'|\\`|\\||\\[|\\]|\\_|=)/i'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> \n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'You are too good for me'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token variable\">$blacklist</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_defined_functions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'internal'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$blacklist</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$blackitem</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> \n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match </span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$blackitem</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'/im'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> \n            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'You deserve better'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n        <span class=\"token punctuation\">&#125;</span> \n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里可以看到题目对_GET内容进行了过滤，flag、php、[]、”” 、’’之类的都被过滤了，但是发现没有过滤<code>()</code>和<code>~</code>，所以可以用取反的方式来绕过过滤。</p>\n<p><img src=\"C:\\Users\\lilon\\AppData\\Roaming\\Typora\\typora-user-images\\image-20200628125053156.png\" alt=\"image-20200628125053156\"></p>\n<p>而且注意到PHP版本为7.4.5，PHP&gt;7.1 时assert被定义为一种语言构造器。所以可以使用(phpinfo)()来执行phpinfo()函数。</p>\n<p>试一下看看phpinfo能不能成功，写一个小脚本，拿到一个取反的url编码的phpinfo，然后构造payload。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"phpinfo\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span>\n<span class=\"token comment\">//payload:?code=(~%8F%97%8F%96%91%99%90)()</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"C:\\Users\\lilon\\AppData\\Roaming\\Typora\\typora-user-images\\image-20200628130025853.png\" alt=\"image-20200628130025853\"></p>\n<p>居然没有回显，这个有点晕了。试试别的。</p>\n<p>好像都没有回显，不知道是不是环境问题。。</p>\n<p>没有复现成功。</p>\n","text":"hate-php 复现平台：CTFHUB 题目来源：“第五空间”智能安全大赛WEB题 题目上来直接给源码： &lt;?php error_reporting(0); if(!isset($_GET['code']))&#123; highlight_file(__FILE__);...","link":"","photos":[],"count_time":{"symbolsCount":955,"symbolsTime":"1 mins."},"categories":[{"name":"CTF","slug":"CTF","count":43,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":15,"path":"api/tags/CTF.json"},{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#hate-php\"><span class=\"toc-text\">hate-php</span></a></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"恶意DLL生成器","uid":"2c85fb612c2f99edec9ccbb865c80b1b","slug":"恶意DLL生成器","date":"2020-08-02T14:48:26.000Z","updated":"2020-08-04T15:46:22.000Z","comments":true,"path":"api/articles/恶意DLL生成器.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200802224948.jpg","text":"今天在Freebuf上看到了关于一个恶意DLL文件生成器的介绍，就跟着文章了解了一下。记录一下内容。文章链接：https://mp.weixin.qq.com/s/CCKA4jZ6Wk1qcK9500D5mA 首先就是今天看到的这个工具叫做EvilDLL，根据Freebuf上的介...","link":"","photos":[],"count_time":{"symbolsCount":894,"symbolsTime":"1 mins."},"categories":[{"name":"网络安全","slug":"网络安全","count":3,"path":"api/categories/网络安全.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"CTFHub技能树web完结","uid":"95413dc0d7a5fa9cf97869672d0df757","slug":"CTFHub技能树web完结","date":"2020-06-27T08:03:19.000Z","updated":"2020-09-21T09:18:52.000Z","comments":true,"path":"api/articles/CTFHub技能树web完结.json","keywords":"A1andNS","cover":[],"text":"XSS之反射性用了一个XSS平台叫xss8.cc cookie : flag=ctfhub{c6deb9f1323dc3d8ed565bcd6e5382e91aee9c5b} SQL-过滤空格这个最近新更新的技能树内容，空格被过滤了，要想办法来绕过啊。 出现空格就是hack +是...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[{"name":"CTF","slug":"CTF","count":43,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":15,"path":"api/tags/CTF.json"},{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}