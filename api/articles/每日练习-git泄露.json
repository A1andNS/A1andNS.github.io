{"title":"每日练习-git泄露","uid":"484224831f5c00a6a576cf9c15449d62","slug":"每日练习-git泄露","date":"2020-04-01T03:04:46.000Z","updated":"2020-04-13T00:47:42.000Z","comments":true,"path":"api/articles/每日练习-git泄露.json","keywords":"A1andNS","cover":[],"content":"<p>继续昨天的信息泄露,ctfhub技能树的git泄露，go！go！go！</p>\n<h2 id=\"0x0001-log\"><a href=\"#0x0001-log\" class=\"headerlink\" title=\"0x0001 log\"></a>0x0001 log</h2><p>根据提示这就是一题典型的git泄露题目。直接使用githacker工具。</p>\n<p>不然的话，一般都是先做目录扫描，存在.git时就可以使用工具恢复了。</p>\n<p>第一步就是使用工具恢复git，clone目标源代码到本地去</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_20200401114334.png\" alt=\"githacker\"></p>\n<p>然后到dist目录里找到新clone的文件夹，根据题目log，到里面去使用终端<code>git log</code>查看一下历史。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_20200401114351.png\" alt=\"log\"></p>\n<p>可以看到初始化后，添加了一个flag，然后有删除了一个flag。所以我们要去看看add flag的记录。使用<code>git diff a782</code>，这里的a782是commit的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_20200401114401.png\" alt=\"get flag\"></p>\n<p>在里面寻找，果然找到了flag。</p>\n<h2 id=\"0x0002-Stash\"><a href=\"#0x0002-Stash\" class=\"headerlink\" title=\"0x0002 Stash\"></a>0x0002 Stash</h2><p>一开始还是利用githacker工具clone目录到本机，考察git stash命令。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_20200401222906.png\" alt=\"clone目录\"></p>\n<p>可以先使用<code>git stash list</code>看看stash了那些储存。然后使用<code>git stash show stash@&#123;1&#125; -p</code>查看存储的改动。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20200401224037.png\" alt=\"查看stash存储\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20200401223915.png\" alt=\"读取文档\"></p>\n<h2 id=\"0x0003-index\"><a href=\"#0x0003-index\" class=\"headerlink\" title=\"0x0003 index\"></a>0x0003 index</h2><p>既然是index找答案。我就先去试着看了一下index文件结果他居然是乱码，我无能为力，之前没搞过，不知道怎么看index区文件啊。所以就剑走偏锋去使用了git log，然后就用和第一题的一样办法，很快得到了flag。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_20200401121450.png\" alt=\"log方法\"></p>\n<p>但是毕竟index的方法还是不会，所以只能求助百度了，在网络上学习了一下，用<code>git ls-files</code>就可以查看暂存区文件，然后就会看到有一个txt文件和两个html文件，txt文件总是那么引人注意，所以就想先查看一下txt文件。先使用<code>git ls-files -s</code>查看对应的blog对象，再使用<code>git cat-file-p 97a5 </code>来访问txt。flag直接出现，nice啊。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_20200401121803.png\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>当前大量开发人员使用git进行版本控制，对站点自动部署。如果配置不当,可能会将.git文件夹直接部署到线上环境。这就引起了git泄露漏洞。</p>\n<p>1、git泄露会用到一个非常好用的工具，那就是GitHacker，他可以轻松吧泄露的.git目录clone到我们的本机上。可以查看其更新记录。</p>\n<p>2、这题考察的是git stash命令。这里我之前没有用过git的这些命令也确实是不知。学习一下他人的blog：<a href=\"https://www.cnblogs.com/zndxall/archive/2018/09/04/9586088.html\">https://www.cnblogs.com/zndxall/archive/2018/09/04/9586088.html</a></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>（1）<code>**git stash** save &quot;save message&quot; </code> : 执行存储时，添加备注，方便查找，只有git stash 也要可以的，但查找时不方便识别。</p>\n<p>（2）<code>**git stash list**</code>  ：查看stash了哪些存储</p>\n<p>（3）<code>**git stash show** </code>：显示做了哪些改动，默认show第一个存储,如果要显示其他存贮，后面加stash@{$num}，比如第二个 git stash show stash@{1}</p>\n<p>（4）<code>**git stash show -p** </code>: 显示第一个存储的改动，如果想显示其他存存储，命令：<code>git stash show  stash@&#123;$num&#125;  -p</code> ，比如第二个：<code>git stash show  stash@&#123;1&#125;  -p</code></p>\n<p>（5）<code>**git stash apply** </code>:应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即stash@{0}，如果要使用其他个，<code>git stash apply stash@&#123;$num&#125; </code>， 比如第二个：<code>git stash apply stash@&#123;1&#125; </code></p>\n<p>（6）<code>**git stash pop**</code> ：命令恢复之前缓存的工作目录，将缓存堆栈中的对应stash删除，并将对应修改应用到当前的工作目录下,默认为第一个stash,即stash@{0}，如果要应用并删除其他stash，命令：git stash pop stash@{$num} ，比如应用并删除第二个：git stash pop stash@{1}</p>\n<p>（7）<strong>git stash drop</strong> stash@{$num} ：丢弃stash@{$num}存储，从列表中删除这个存储</p>\n<p>（8）<code>**git stash clear** ：</code>删除所有缓存的stash</p></blockquote>\n<p>sctfhub{2117289cb3b37c4dcea5b6001401ec26b38fc277}</p>\n<p>3、这题本意是考察index区，我钻了空子在log里也得到了flag。</p>\n","text":"继续昨天的信息泄露,ctfhub技能树的git泄露，go！go！go！ 0x0001 log根据提示这就是一题典型的git泄露题目。直接使用githacker工具。 不然的话，一般都是先做目录扫描，存在.git时就可以使用工具恢复了。 第一步就是使用工具恢复git，clone目标...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"CTF","slug":"CTF","count":42,"path":"api/categories/CTF.json"}],"tags":[{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"},{"name":"信息泄露","slug":"信息泄露","count":4,"path":"api/tags/信息泄露.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x0001-log\"><span class=\"toc-text\">0x0001 log</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x0002-Stash\"><span class=\"toc-text\">0x0002 Stash</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x0003-index\"><span class=\"toc-text\">0x0003 index</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"常见的Web源码泄露","uid":"f1953cde70037836ff5e06b15265596d","slug":"常见的Web源码泄露","date":"2020-04-02T02:38:56.000Z","updated":"2020-10-13T01:51:54.000Z","comments":true,"path":"api/articles/常见的Web源码泄露.json","keywords":"A1andNS","cover":null,"text":"本文主要是记录一下常见的源码泄漏问题，这些经常在web渗透测试以及CTF中出现。 这几天都在CTFHub上接触信息泄露类的东西，所以就乘热打铁记录一下常见的源码泄漏问题，这些在web渗透测试和CTF也是中出现。学到了一个GitHacker工具，确实对于git泄露很有用。 源码泄漏...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":32,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"},{"name":"信息泄露","slug":"信息泄露","count":4,"path":"api/tags/信息泄露.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"每日练习（CTFHUb之信息泄露类）","date":"2020-03-31T03:12:22.000Z","updated":"2020-04-13T00:47:54.000Z","comments":true,"path":"api/articles/每日练习（CTFHUb之信息泄露类）.json","keywords":"A1andNS","cover":[],"text":"今天在CTFHub上做了一些题，把他们记录学习一下。就是之前的工具包是Windows端的，幸好一些还是跨平台的。最近要去找个Linux下的工具包了。 今天主要干技能树里面信息泄露类的内容。 0x0001 目录遍历这个因为是技能树，主要是让人知道目录遍历的危害。很直接进去很明显的目...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"CTF","slug":"CTF","count":42,"path":"api/categories/CTF.json"}],"tags":[{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"},{"name":"信息泄露","slug":"信息泄露","count":4,"path":"api/tags/信息泄露.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}