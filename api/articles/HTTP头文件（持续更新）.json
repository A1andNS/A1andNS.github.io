{"title":"HTTP头文件（持续更新）","uid":"fa89043ea17343f99a80dd6e1c6c7c73","slug":"HTTP头文件（持续更新）","date":"2020-03-09T08:03:01.000Z","updated":"2020-04-13T00:46:32.000Z","comments":true,"path":"api/articles/HTTP头文件（持续更新）.json","keywords":"A1andNS","cover":[],"content":"<h1 id=\"HTTP头文件简介（持续更新）\"><a href=\"#HTTP头文件简介（持续更新）\" class=\"headerlink\" title=\"HTTP头文件简介（持续更新）\"></a>HTTP头文件简介（持续更新）</h1><p>HTTP头文件可以包含很多有用的信息，但作为初学者大多数是不清楚这些内容的含义和作用，故我在学习过程中记录下主要的头文件内容的含义和作用，以备后续考查。本文会不定期持续更新。。。。。。</p>\n<h2 id=\"请求头\"><a href=\"#请求头\" class=\"headerlink\" title=\"请求头\"></a>请求头</h2><p>下图为火狐浏览器的火狐主页<a href=\"https://home.firefoxchina.com的请求头.一个请求头中包含了很多的信息,但对于初学者而言,一脸懵逼,内心迷茫.那么开始记录了..../\">https://home.firefoxchina.com的请求头。一个请求头中包含了很多的信息，但对于初学者而言，一脸懵逼，内心迷茫。那么开始记录了。。。。</a><br><img src=\"https://img-blog.csdnimg.cn/20191012003045806.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2MTM5MDQ1,size_16,color_FFFFFF,t_70\" alt=\"1\"><br>写在最前面</p>\n<p>;q= (qvalues weighting)<br>    值代表优先顺序，用相对质量价值 表示，又称为权重。</p>\n<p>在后面的个种头中经常出现</p>\n<p>进入正题：</p>\n<h3 id=\"Accept\"><a href=\"#Accept\" class=\"headerlink\" title=\"Accept\"></a>Accept</h3><p>表示用户代理希望接受的资源类型，即MIME类型。</p>\n<p>Accept: <MIME_type>/<MIME_subtype></p>\n<p>这里举几个例子：</p>\n<p><code>.mp3</code>的格式是<code>audio/mpeg</code></p>\n<p><code>.htm</code>和<code>.html</code>是<code>text/html</code></p>\n<p><code>.jpg</code>和<code>.jpeg</code>是<code>image/jpeg</code></p>\n<p>更多内容见链接：<a href=\"https://blog.csdn.net/qq_26139045/article/details/102508082\">https://blog.csdn.net/qq_26139045/article/details/102508082</a></p>\n<h3 id=\"Accept-Encoding\"><a href=\"#Accept-Encoding\" class=\"headerlink\" title=\"Accept-Encoding\"></a>Accept-Encoding</h3><p>将客户端能够理解的内容编码方式——通常是某种压缩算法——进行通知（给服务端）。通过内容协商的方式，服务端会选择一个客户端提议的方式，使用并在响应头 <code>Content-Encoding</code> 中通知客户端该选择</p>\n<p>gzip:表示采用LZ77压缩算法，以及32位CRC校验的编码方式</p>\n<p>compress：采用LZW压缩算法</p>\n<p>deflate：采用zlib结构和deflate压缩算法</p>\n<p>br：表示采用Brotil算法的编码方式</p>\n<p>identity：用于指代自身（例如：未经过压缩和修改）。除非特别指明，这个标记始终可以被接受。</p>\n<h3 id=\"Accept-language\"><a href=\"#Accept-language\" class=\"headerlink\" title=\"Accept-language\"></a>Accept-language</h3><p>告知服务端客户端可以理解的自然语言，用来说明用户希望使用的语言和语言组，实现用户语言定制化。</p>\n<p>有一些网站会通过读取语言内容来限制指定语言用户访问，例如，笔者在之前遇到过一个钓鱼网站，在笔者浏览器设置的语言为EN时，钓鱼网站禁止了我的访问，将语言设置回汉字就会发现网站又可以访问了。这是一种简单的过滤指定用户的根据。</p>\n<h3 id=\"Cache-Control\"><a href=\"#Cache-Control\" class=\"headerlink\" title=\"Cache-Control\"></a>Cache-Control</h3><p>通用消息头字段，通过指定指令控制来实现缓存机制</p>\n<p>Cache-Control: max-age=<seconds><br>Cache-Control: max-stale[=<seconds>]<br>Cache-Control: min-fresh=<seconds><br>Cache-control: no-cache<br>Cache-control: no-store<br>Cache-control: no-transform<br>Cache-control: only-if-cached</p>\n<h3 id=\"Connection\"><a href=\"#Connection\" class=\"headerlink\" title=\"Connection\"></a>Connection</h3><p>用于决定当前的事务完成后，是否会关闭网络连接。如果该值是“keep-alive”，网络连接就是持久的，不会关闭，使得对同一个服务器的请求可以继续在该连接上完成。</p>\n<p>如果是close，表明客户端或服务器想要关闭该网络连接</p>\n<h3 id=\"Cookie\"><a href=\"#Cookie\" class=\"headerlink\" title=\"Cookie\"></a>Cookie</h3><p>其中含有先前由服务器通过 Set-Cookie  首部投放并存储到客户端的 HTTP cookies。这个首部可能会被完全移除，例如在浏览器的隐私设置里面设置为禁用cookie，服务器将不会在你的计算机里 存放cookie。</p>\n<h3 id=\"Host\"><a href=\"#Host\" class=\"headerlink\" title=\"Host\"></a>Host</h3><p>指明了服务器的域名（对于虚拟主机来说），以及（可选的）服务器监听的TCP端口号。</p>\n<p>语法：Host:<host>:<port></p>\n<h3 id=\"Upgrade-Insecure-Requests\"><a href=\"#Upgrade-Insecure-Requests\" class=\"headerlink\" title=\"Upgrade-Insecure-Requests\"></a>Upgrade-Insecure-Requests</h3><p>用来向服务器端发送信号，表明自己支持升级机制，客户端优先选择加密及带有身份验证的响应。</p>\n<h3 id=\"User-agent\"><a href=\"#User-agent\" class=\"headerlink\" title=\"User-agent\"></a>User-agent</h3><p>这个大家应该会比较熟悉，这个就是用户代理，也经常被写作UA。它用来告知服务端发起请求的用户代理软件的应用类型、操作系统、软件开发商以及版本号。</p>\n<p>通过修改UA信息可以欺骗服务端你的系统和浏览器产品，通过UA来判断操作系统和浏览器内核以提供更好的浏览体验是一个简单应用。</p>\n<h3 id=\"Referer\"><a href=\"#Referer\" class=\"headerlink\" title=\"Referer\"></a>Referer</h3><p> 请求头包含了当前请求页面的来源页面的地址，即表示当前页面是通过此来源页面里的链接进入的。服务端一般使用 Referer 请求头识别访问来源，可能会以此进行统计分析、日志记录以及缓存优化等。</p>\n<p>故可以通过添加或修改referer头来实现欺骗服务端，伪造我们的来源页面。以此越过一些网页的这种跳转访问要求。</p>\n<h3 id=\"X-Forwarded-For\"><a href=\"#X-Forwarded-For\" class=\"headerlink\" title=\"X-Forwarded-For\"></a>X-Forwarded-For</h3><p>可以被用来获取最初发起请求的客户端的IP地址，网站通过它来检查最初IP，故我们利用它来使用伪造客户端IP地址， 这样就可以欺骗服务端了。</p>\n<p>语法：X-forwarded-For: 127.0.0.1,70.41.3.18, 150.172.238.178</p>\n<p>格式为IP地址，代理，最近代理</p>\n<h2 id=\"响应头\"><a href=\"#响应头\" class=\"headerlink\" title=\"响应头\"></a>响应头</h2><p>下图为火狐浏览器的火狐主页<a href=\"https://home.firefoxchina.com的响应头.与请求头相同内容不在解释了./\">https://home.firefoxchina.com的响应头。与请求头相同内容不在解释了。</a></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191012003104110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2MTM5MDQ1,size_16,color_FFFFFF,t_70\" alt=\"2\"></p>\n<h3 id=\"Content-encoding\"><a href=\"#Content-encoding\" class=\"headerlink\" title=\"Content-encoding\"></a>Content-encoding</h3><p>它和accept-encoding是一对，告知客户端内容使用何种编码方式</p>\n<p>详细可见请求头的Accept-encoding</p>\n<h3 id=\"Age\"><a href=\"#Age\" class=\"headerlink\" title=\"Age\"></a>Age</h3><p> 消息头里包含消息对象在缓存代理中存贮的时长，以秒为单位。</p>\n<h3 id=\"Content-Security-Policy\"><a href=\"#Content-Security-Policy\" class=\"headerlink\" title=\"Content-Security-Policy\"></a><strong>Content-Security-Policy</strong></h3><p>允许站点管理者控制用户代理能够为指定的页面加载哪些资源。除了少数例外情况，设置的政策主要涉及指定服务器的源和脚本结束点。这将帮助防止跨站脚本攻击XSS，对网站的资源进行限制。</p>\n<h3 id=\"Content-type\"><a href=\"#Content-type\" class=\"headerlink\" title=\"Content-type\"></a>Content-type</h3><p>告知客户端响应资源的类型属于哪一种，也是MIME格式，具体可以参考请求头的Accept</p>\n<h3 id=\"Date\"><a href=\"#Date\" class=\"headerlink\" title=\"Date\"></a>Date</h3><p>显示数据报文建立的日期和时间</p>\n<h3 id=\"Server\"><a href=\"#Server\" class=\"headerlink\" title=\"Server\"></a>Server</h3><p>包含了处理请求的源头服务器所用到的软件相关信息</p>\n<p>通过查看server内容我们可以知道服务端的相关信息</p>\n<p>例如：使用nginx或apache，操作系统类型是Unix、Linux、windows等</p>\n<h3 id=\"Transfer-Encoding\"><a href=\"#Transfer-Encoding\" class=\"headerlink\" title=\"Transfer-Encoding\"></a><strong>Transfer-Encoding</strong></h3><p> 消息首部指明了将 entity安全传递给用户所采用的编码形式。</p>\n<h3 id=\"Via-x-Via\"><a href=\"#Via-x-Via\" class=\"headerlink\" title=\"Via  /x-Via\"></a>Via  /x-Via</h3><p>是一个通用首部，是由代理服务器添加的，适用于正向和反向代理，在请求和响应首部中均可出现。这个消息首部可以用来追踪消息转发情况，防止循环请求，以及识别在请求或响应传递链中消息发送者对于协议的支持能力。</p>\n<p>通过via我们可以知道使用的协议、协议版本、公共代理URL及端口号、内部代理名称或别名。</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><p>[1]<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers\">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers</a></p>\n","text":"HTTP头文件简介（持续更新）HTTP头文件可以包含很多有用的信息，但作为初学者大多数是不清楚这些内容的含义和作用，故我在学习过程中记录下主要的头文件内容的含义和作用，以备后续考查。本文会不定期持续更新。。。。。。 请求头下图为火狐浏览器的火狐主页https://home.fir...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":30,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#HTTP%E5%A4%B4%E6%96%87%E4%BB%B6%E7%AE%80%E4%BB%8B%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89\"><span class=\"toc-text\">HTTP头文件简介（持续更新）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%B7%E6%B1%82%E5%A4%B4\"><span class=\"toc-text\">请求头</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Accept\"><span class=\"toc-text\">Accept</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Accept-Encoding\"><span class=\"toc-text\">Accept-Encoding</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Accept-language\"><span class=\"toc-text\">Accept-language</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Cache-Control\"><span class=\"toc-text\">Cache-Control</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Connection\"><span class=\"toc-text\">Connection</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Cookie\"><span class=\"toc-text\">Cookie</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Host\"><span class=\"toc-text\">Host</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Upgrade-Insecure-Requests\"><span class=\"toc-text\">Upgrade-Insecure-Requests</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#User-agent\"><span class=\"toc-text\">User-agent</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Referer\"><span class=\"toc-text\">Referer</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#X-Forwarded-For\"><span class=\"toc-text\">X-Forwarded-For</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%93%8D%E5%BA%94%E5%A4%B4\"><span class=\"toc-text\">响应头</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Content-encoding\"><span class=\"toc-text\">Content-encoding</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Age\"><span class=\"toc-text\">Age</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Content-Security-Policy\"><span class=\"toc-text\">Content-Security-Policy</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Content-type\"><span class=\"toc-text\">Content-type</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Date\"><span class=\"toc-text\">Date</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Server\"><span class=\"toc-text\">Server</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Transfer-Encoding\"><span class=\"toc-text\">Transfer-Encoding</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Via-x-Via\"><span class=\"toc-text\">Via  &#x2F;x-Via</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\"><span class=\"toc-text\">参考文献</span></a></li></ol></li></ol>","author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"MIME类型","uid":"7608810a314c552a7d790b7ee545ec15","slug":"MIME类型","date":"2020-03-09T08:03:50.000Z","updated":"2020-04-13T00:46:30.000Z","comments":true,"path":"api/articles/MIME类型.json","keywords":"A1andNS","cover":null,"text":"媒体类型（通常称为 Multipurpose Internet Mail Extensions 或 MIME 类型 ）是一种标准，用来表示文档、文件或字节流的性质和格式。本文只为方便查询相应格式文件的MIME类型 扩展名 文档类型 MIME 类型 .aac AAC audio a...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":30,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Metasploit入门上手","uid":"da0bd7cce36ba07293df734f9332fbf1","slug":"Metasploit入门上手","date":"2020-03-09T08:02:10.000Z","updated":"2020-04-13T00:47:32.000Z","comments":true,"path":"api/articles/Metasploit入门上手.json","keywords":"A1andNS","cover":[],"text":"Metasploit入门上手今天是2019年10月24日打卡嘀嘀嘀！！！菜鸟卡！！一起学习进步！！！ 基本介绍发展历史开源软件metasploit是由HD Moore在2003年创立的，并在2003年10月发布了第一个版本。它集成了11个渗透攻击模块。 版本metasploit分...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":30,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}