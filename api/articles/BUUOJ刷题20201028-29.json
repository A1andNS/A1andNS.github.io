{"title":"BUUOJ刷题20201028-29","uid":"999661aa590b0d9c1b6b86c3a8e07f94","slug":"BUUOJ刷题20201028-29","date":"2020-11-30T12:13:59.000Z","updated":"2021-06-28T14:58:16.000Z","comments":true,"path":"api/articles/BUUOJ刷题20201028-29.json","keywords":"A1andNS","cover":"https://gitee.com/A1andNS/blogimage/raw/master/img/3.png","content":"<h2 id=\"ASIS-2019-Unicorn-shop\"><a href=\"#ASIS-2019-Unicorn-shop\" class=\"headerlink\" title=\"[ASIS 2019]Unicorn shop\"></a>[ASIS 2019]Unicorn shop</h2><p><strong>考点：Python、UTF-8、Unicode</strong></p>\n<p>直接提交信息，无法成功，前端源码提示</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!--Ah,really important,seriously. --></span>\n\n<span class=\"token comment\">&lt;!--We still have some surprise for admin.password--></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>一个是管理员密码的点，还有一个是utf-8编码，bp抓包看看</p>\n<p>操作失败有多种：no commodity found！、wrong commodity、only one char(?) allowded！、Error parsing money!</p>\n<p>这前三个id有点迷，提示商品错误，当时id=4是money不够，当是字符又限制，所以我们可能需要找一个uft-8编码的对应value较大的值，至少大于1337，这样他就可以被解析为一个很大的值，从而购买。</p>\n<p>Unicode字符可以查找：<a href=\"https://www.compart.com/en/unicode/\">Unicode - Compart</a></p>\n<p><code>ↈ</code>这个就是我选择的符号了</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">UTF-8 Encoding:\t0xE2 0x86 0x88<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>把他作为price传入，就可以得到flag了，这个感觉和ssrf时用字符串来替代数字IP原理类似</p>\n<h2 id=\"0CTF-2016-piapiapia\"><a href=\"#0CTF-2016-piapiapia\" class=\"headerlink\" title=\"[0CTF 2016]piapiapia\"></a>[0CTF 2016]piapiapia</h2><p><strong>考点：反序列化字符串逃逸</strong></p>\n<p>后台扫描，可以得到很多信息，先去注册一下。然后可以登录一下注册的账号。</p>\n<p><img src=\"https://i.loli.net/2020/11/28/l6s7u3PwLqDSf5k.png\" alt=\"image-20201128214623965\"></p>\n<p>会到达一个信息更新界面，有一个上传点，我可以先审计一下源码。通过代码审计可以知道再profile.php中存在一个unserialize()点。$profile参数是来自user对象的show_profile函数，跟进到class.php里看看user类。在update.php中则是与之对应的一个序列化点。跟进去看一下，他对我们的输入会做过滤，然后调用update_profile,并且对我输入信息进行序列化，跟进到update_profile函数，在class.php文件中，然后它调用了filter函数，继续跟进，是过滤，另一个是update函数，跟进是更新数据库。</p>\n<p>大概就是先正则表达式对参数做过滤，然后序列化，再对非法值做替换，然后写入数据库。</p>\n<p>php反序列化字符串逃逸，利用数组来绕过nikename的字符长度限制。我们的目标就是在photo设置config.php，因为flag就在其中。config.php字符串长度的10，我们需要溢出的内容应该为</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&quot;;&#125;s:5:&quot;photo&quot;;s:39:&quot;config.php&quot;;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>长度为34，所以我们需要利用where的替换hacker，来挤占空间，每一个where只能挤出一个空间，所以需要34个where才行。</p>\n<p>payload:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201128233550367.png\" alt=\"image-20201128233550367\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201128233534283.png\" alt=\"image-20201128233534283\"></p>\n<h2 id=\"CISCN-2019-初赛-Love-Math\"><a href=\"#CISCN-2019-初赛-Love-Math\" class=\"headerlink\" title=\"[CISCN 2019 初赛]Love Math\"></a>[CISCN 2019 初赛]Love Math</h2><p><strong>考点：代码审计</strong></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//例子 c=20-1</span>\n    <span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"太长了不会算\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token variable\">$blacklist</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'\\t'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'\\r'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'\\''</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'\"'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'\\['</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'\\]'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$blacklist</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$blackitem</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$blackitem</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'/m'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"请不要输入奇奇怪怪的字符\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//常用数学函数 </span>\n    <span class=\"token variable\">$whitelist</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'abs'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'acos'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'acosh'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'asin'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'asinh'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'atan2'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'atan'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'atanh'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'base_convert'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'bindec'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'ceil'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'cos'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'cosh'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'decbin'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'dechex'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'decoct'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'deg2rad'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'exp'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'expm1'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'floor'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'fmod'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'getrandmax'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'hexdec'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'hypot'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'is_finite'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'is_infinite'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'is_nan'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'lcg_value'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'log10'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'log1p'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'log'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'max'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'min'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'mt_getrandmax'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'mt_rand'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'mt_srand'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'octdec'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'pi'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'pow'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'rad2deg'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'rand'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'round'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'sin'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'sinh'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'sqrt'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'srand'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'tan'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'tanh'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[a-zA-Z_\\x7f-\\xff][a-zA-Z_0-9\\x7f-\\xff]*/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$used_funcs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$used_funcs</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$func</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$whitelist</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"请不要输入奇奇怪怪的函数\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//帮你算出答案</span>\n    <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'echo '</span><span class=\"token operator\">.</span><span class=\"token variable\">$content</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">';'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>通过代码审计可以发现payload长度不能超过80，payload中不能出现’ ‘, ‘\\t’, ‘\\r’, ‘\\n’,’&#39;‘, ‘“‘, ‘`’, ‘[‘, ‘]‘,并且还有一个限制就是payload中不能有不是$whitelist白名单里面的单词。</p>\n<p>可以发现这里面有进制转换函数，进制转换只要进制够大，我们就可以从十进制转换成我们想要的字符，并且php中函数名都是默认使用字符串储存，也就是说一个和函数名一样的字符串，可以用来执行函数，例如：$a=system;$a(‘ls’);</p>\n<p>注意到这里的进制转换函数中有一个比较好用的函数，那就是base_convert函数,它可以实现2-36进制之间的转换。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">?c&#x3D;base_convert(1751504350,10,36)(base_convert(784,10,36))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这样我传入后，实际执行了system(ls)</p>\n<p>payload:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">?c&#x3D;base_convert(1751504350,10,36)(base_convert(8768397090111664438,10,30)()&#123;1&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>flag一闪而过，看来是有重定向，那就用bp来抓个包试一下。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@master/img/image-20201130100917671.png\" alt=\"image-20201130100917671\"></p>\n<p>总结：这里首先考察了代码审计，了解改页面的整体情况。白名单和黑名单的waf需要绕过，数学函数中的进制转换函数被利用，来实现用十进制数进制转换为其他函数字符，以实现RCE。之所以可以实现这一点还是PHP的函数名以字符串格式保存，所以可以使用字符串()来实现函数执行，这就是为什么我们通过进制转换还原函数名结合()没被过滤，就可以实现eval来函数执行。这里是用了getallheads，因为这里很明显通过这种方式传入执行命令时最舒服的。hex2bin()函数也是可以使用的，它可以将16进制转换为ascii码，也是一大利器，转换出_GET然后使用{}来代替[]，就可以创造一个新的get参数。</p>\n","text":"[ASIS 2019]Unicorn shop考点：Python、UTF-8、Unicode 直接提交信息，无法成功，前端源码提示 &lt;meta charset=\"utf-8\">&lt;!--Ah,really important,seriously. --> &lt;!--...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"CTF","slug":"CTF","count":44,"path":"api/categories/CTF.json"}],"tags":[{"name":"BUUOJ","slug":"BUUOJ","count":13,"path":"api/tags/BUUOJ.json"},{"name":"ASIS2019","slug":"ASIS2019","count":1,"path":"api/tags/ASIS2019.json"},{"name":"OCTF2016","slug":"OCTF2016","count":1,"path":"api/tags/OCTF2016.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ASIS-2019-Unicorn-shop\"><span class=\"toc-text\">[ASIS 2019]Unicorn shop</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0CTF-2016-piapiapia\"><span class=\"toc-text\">[0CTF 2016]piapiapia</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CISCN-2019-%E5%88%9D%E8%B5%9B-Love-Math\"><span class=\"toc-text\">[CISCN 2019 初赛]Love Math</span></a></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"SWPUCTF杂项","uid":"8a47ad09cc35b02d6729e585b457dd31","slug":"SWPUCTF杂项","date":"2020-12-06T05:19:56.000Z","updated":"2020-12-17T05:21:48.000Z","comments":true,"path":"api/articles/SWPUCTF杂项.json","keywords":"A1andNS","cover":[],"text":"考前的死亡浪，摸了一题就溜去复习了。 耗子为汁下载gif文件，先做gif分帧，发现没有东西。所以使用binwalk分析文件，发现有隐藏文件，所以binwalk分离，这里foremost有问题，得不到后面关键的视频文件。 binwalk后会有一个flag.txt可惜是假flag，然...","link":"","photos":[],"count_time":{"symbolsCount":979,"symbolsTime":"1 mins."},"categories":[{"name":"CTF","slug":"CTF","count":44,"path":"api/categories/CTF.json"}],"tags":[{"name":"SWPUCTF2020","slug":"SWPUCTF2020","count":1,"path":"api/tags/SWPUCTF2020.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"RedHat学习(四)","uid":"fd1d8d0cd37eabf9d916bbc0522132cf","slug":"RedHat学习-四","date":"2020-11-16T05:37:25.000Z","updated":"2020-12-26T14:20:10.000Z","comments":true,"path":"api/articles/RedHat学习-四.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200601211235.jpg","text":"前言Redhat系列继续，Linux冲鸭！ 用户身份与文件权限前面说过了Linux是一个多用户、多任务的操作系统，具有很好的稳定性和安全性。而不用用户之间的文件，就有一个ACL问题了，也就是访问控制，那么就涉及到文件属性中的权限，谁有权力去读取和修改它。在Linux系统中UID就...","link":"","photos":[],"count_time":{"symbolsCount":759,"symbolsTime":"1 mins."},"categories":[{"name":"Linux学习","slug":"Linux学习","count":7,"path":"api/categories/Linux学习.json"}],"tags":[{"name":"Linux","slug":"Linux","count":11,"path":"api/tags/Linux.json"},{"name":"Redhat","slug":"Redhat","count":5,"path":"api/tags/Redhat.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}