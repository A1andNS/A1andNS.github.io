{"title":"Python学习之OS库的system()函数","uid":"8bd60d49b3a0e56768342dfdd30f94ad","slug":"Python学习之OS库的system-函数","date":"2020-03-09T07:25:27.000Z","updated":"2020-04-13T00:47:24.000Z","comments":true,"path":"api/articles/Python学习之OS库的system-函数.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200323233608.png","content":"<h2 id=\"引入\"><a href=\"#引入\" class=\"headerlink\" title=\"引入\"></a>引入</h2><p>今天学到了一个十分好用的函数，那就是system()函数，这是一个包含再OS库中的一个函数，用于系统命令执行，方便确实是方便但是也有安全风险，如果对输入没有做好过滤，就是出现命令执行（命令注入）漏洞，如果是在服务器对外web页面犯了这样的错误，这样就会威胁到服务器安全。    </p>\n<h2 id=\"system-使用实例\"><a href=\"#system-使用实例\" class=\"headerlink\" title=\"system()使用实例\"></a>system()使用实例</h2><p>system(需要执行的cmd命令)，这个是system函数的用法。下面通过一个实例来说明：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\nlibs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"numpy\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"matplotlib\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"pillow\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"sklearn\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"requests\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"jieba\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"beautifulsoup4\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"wheel\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"networkx\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"sympy\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"pyinstaller\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"django\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"flask\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"werbot\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"pyQt5\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"pandas\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"pyopengl\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"pypdf2\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"docopt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"pygame\"</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> lib <span class=\"token keyword\">in</span> libs<span class=\"token punctuation\">:</span>\n        os<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">\"pip install \"</span><span class=\"token operator\">+</span>lib<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Successful\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed Somehow\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这个实例用于命令批量安装python第三方库，大大提升了安装效率，自动化安装，避免了多次命令输入，重复低效。运行结果如下，真的是太爽了。<br><img src=\"https://img-blog.csdnimg.cn/20200229220105759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2MTM5MDQ1,size_16,color_FFFFFF,t_70\" alt=\"1\"></p>\n<h2 id=\"Python使用不当的后果\"><a href=\"#Python使用不当的后果\" class=\"headerlink\" title=\"Python使用不当的后果\"></a>Python使用不当的后果</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\npost <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个IP：\"</span><span class=\"token punctuation\">)</span>\nos<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">\"ping \"</span> <span class=\"token operator\">+</span> post<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>就这样短短的3行演示一下吧。什么过滤都不做直接来。<br>我输入<code>www.baidu.com</code>，他就执行了<code>ping www.baidu.com</code>的命令。<br><img src=\"https://img-blog.csdnimg.cn/20200229220932616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2MTM5MDQ1,size_16,color_FFFFFF,t_70\" alt=\"2\"><br>当我输入的是`127.0.0.1 &amp; net user时，可以看到它不仅执行了ping命令还执行了net user命令，这就是一个命令注入漏洞了。我还可以使用别的命令让他去执行。<br><img src=\"https://img-blog.csdnimg.cn/20200229221425740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2MTM5MDQ1,size_16,color_FFFFFF,t_70\" alt=\"3\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>这是一个十分好用的函数，可以很大程度帮助我们提高命令执行的效率，特别是要进行一些重复性的命令执行时，但是当它再服务器上对外接收输入，又未经过滤时就会时一个定时炸弹，留下了一个命令执行的漏洞，黑客完全可以通过构造命令来对服务器进行命令注入攻击，然后利用一些命令来实现远程控制或者远程操控。</p>\n","text":"引入今天学到了一个十分好用的函数，那就是system()函数，这是一个包含再OS库中的一个函数，用于系统命令执行，方便确实是方便但是也有安全风险，如果对输入没有做好过滤，就是出现命令执行（命令注入）漏洞，如果是在服务器对外web页面犯了这样的错误，这样就会威胁到服务器安全。 sy...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"Python学习","slug":"Python学习","count":19,"path":"api/categories/Python学习.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"Python","slug":"Python","count":23,"path":"api/tags/Python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">引入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#system-%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BE%8B\"><span class=\"toc-text\">system()使用实例</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Python%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%BD%93%E7%9A%84%E5%90%8E%E6%9E%9C\"><span class=\"toc-text\">Python使用不当的后果</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"2020年新春战疫网络安全公益赛解题记录","uid":"6c5dc7f89d0e5d8d84f40d382a537c6b","slug":"2020年新春战疫网络安全公益赛解题记录","date":"2020-03-09T07:30:43.000Z","updated":"2020-09-30T04:23:56.000Z","comments":true,"path":"api/articles/2020年新春战疫网络安全公益赛解题记录.json","keywords":"A1andNS","cover":[],"text":"圆满落幕的比赛，可惜我就会2题web，我有点不太行啊。 简单的招聘系统在用户登录界面存在万能密码绕过漏洞，存在SQL注入漏洞。经过检验是字符型漏洞。 我还发现新注册用户会覆盖原来的用户，使用万能密码绕过时，默认登录最新注册的用户。 注册新用户后，发现不是第一用户，而是第二个。说明...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"CTF","slug":"CTF","count":43,"path":"api/categories/CTF.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"新春战疫","slug":"新春战疫","count":1,"path":"api/tags/新春战疫.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}