{"title":"Linux学习(一）","uid":"792f8acb0007434600568d85ccdd061c","slug":"Linux学习-一）","date":"2020-06-01T13:10:48.000Z","updated":"2020-10-16T09:54:22.000Z","comments":true,"path":"api/articles/Linux学习-一）.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200601211235.jpg","content":"<h2 id=\"Linux常识\"><a href=\"#Linux常识\" class=\"headerlink\" title=\"Linux常识\"></a>Linux常识</h2><p>Linux 内核最初只是由芬兰人林纳斯·托瓦兹（Linus Torvalds）在赫尔辛基大学上学时出于个人爱好而编写的。Linux 是一套免费使用和自由传播的类 Unix 操作系统，是一个基于 POSIX 和 UNIX 的多用户、多任务、支持多线程和多 CPU 的操作系统。Linux 能运行主要的 UNIX 工具软件、应用程序和网络协议。它支持 32 位和 64 位硬件。Linux 继承了 Unix 以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。</p>\n<p>我之前也接触过Linux，像deepin、kali Linux等等。</p>\n<h3 id=\"Linux发行版\"><a href=\"#Linux发行版\" class=\"headerlink\" title=\"Linux发行版\"></a>Linux发行版</h3><p>Linux的发行版可以说是把Linux内核和软件做打包。</p>\n<p>如下图，发行家族中常见的就是Debian、Fedora、SUSE，当然还有其他的一些。</p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2014/06/1511849829609658.jpg\" alt=\"img\"></p>\n<h3 id=\"Linux应用\"><a href=\"#Linux应用\" class=\"headerlink\" title=\"Linux应用\"></a>Linux应用</h3><p>Linux发行版现在已经大量应用于各个方面，从嵌入式到超算都有Linux的身影。特别是在服务器上都快一统江湖了，大多数服务器运行Linux系统，使用LAMP或LNMP。A是apache，N是Nginx。</p>\n<p>除了服务器，Linux还是国防、政府的选择项。</p>\n<h2 id=\"Linux系统启动过程\"><a href=\"#Linux系统启动过程\" class=\"headerlink\" title=\"Linux系统启动过程\"></a>Linux系统启动过程</h2><p>Linux启动时会在屏幕上回显很多信息。这个启动过程分为5个阶段。</p>\n<ul>\n<li>内核引导</li>\n<li>运行init</li>\n<li>系统初始化</li>\n<li>建立终端</li>\n<li>用户登录系统</li>\n</ul>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2014/06/bg2013081707.png\" alt=\"img\"></p>\n<h3 id=\"内核引导\"><a href=\"#内核引导\" class=\"headerlink\" title=\"内核引导\"></a>内核引导</h3><p>当计算机打开电源，就会做BIOS开机自检，按照BIOS的启动优先级来启动，一般都是硬盘启动，然后操作系统接管硬件，先读入/boot目录下的内核文件。</p>\n<h3 id=\"运行init\"><a href=\"#运行init\" class=\"headerlink\" title=\"运行init\"></a>运行init</h3><p>init 进程是系统所有进程的起点，没有这个进程，系统中任何进程都不会启动。init 程序首先是需要读取配置文件 /etc/inittab。</p>\n<h3 id=\"运行级别\"><a href=\"#运行级别\" class=\"headerlink\" title=\"运行级别\"></a>运行级别</h3><p>许多程序需要开机启动。它们在Windows叫做”服务”（service），在Linux就叫做”守护进程”（daemon）。init进程的一大任务，就是去运行这些开机启动的程序。</p>\n<p>不同的场合需要启动不同的程序，比如用作服务器时，需要启动Apache，用作桌面就不需要。Linux允许为不同的场合，分配不同的开机启动程序，这就叫做”运行级别”（runlevel）。运行级别就相当于时设置了场景，根据场景（运行级别）就可以启动相对应的所需程序。</p>\n<p><strong>Linux的7运行级别</strong></p>\n<ul>\n<li>运行级别0：系统停机状态，系统默认运行级别不能设为0，否则不能正常启动</li>\n<li>运行级别1：单用户工作状态，root权限，用于系统维护，禁止远程登陆</li>\n<li>运行级别2：多用户状态(没有NFS)</li>\n<li>运行级别3：完全的多用户状态(有NFS)，登陆后进入控制台命令行模式</li>\n<li>运行级别4：系统未使用，保留</li>\n<li>运行级别5：X11控制台，登陆后进入图形GUI模式</li>\n<li>运行级别6：系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动</li>\n</ul>\n<h3 id=\"系统初始化\"><a href=\"#系统初始化\" class=\"headerlink\" title=\"系统初始化\"></a>系统初始化</h3><p>在init的配置文件中有这么一行： si::sysinit:/etc/rc.d/rc.sysinit　它调用执行了/etc/rc.d/rc.sysinit，而rc.sysinit是一个bash shell的脚本，它主要是完成一些系统初始化的工作，rc.sysinit是<code>每一个</code>运行级别都要首先运行的重要脚本。这是初始化必备脚本。它要激活交换分区，检查磁盘，加载硬件模块以及其他一些需要的优先执行任务。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">15</span>:5:wait:/etc/rc.d/ec <span class=\"token number\">5</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这一行表示以5为参数运行/etc/rc.d/rc，/etc/rc.d/rc是一个Shell脚本，它接受5作为参数，去执行/etc/rc.d/rc5.d/目录下的所有的rc启动脚本，/etc/rc.d/rc5.d/目录中的这些启动脚本实际上都是一些连接文件，而不是真正的rc启动脚本，真正的rc启动脚本实际上都是放在<code>/etc/rc.d/init.d/</code>目录下。</p>\n<h3 id=\"建立终端\"><a href=\"#建立终端\" class=\"headerlink\" title=\"建立终端\"></a>建立终端</h3><p>rc执行完毕后，返回init。这时基本系统环境已经设置好了，各种守护进程也已经启动了。init接下来会打开6个终端，以便用户登录系统。这6个终端在inittab里被定义。</p>\n<p>通过运行特定程序，就可以在屏幕上显示一个文本登录界面就是我们常见的用户登录界面了。</p>\n<h3 id=\"用户登录系统\"><a href=\"#用户登录系统\" class=\"headerlink\" title=\"用户登录系统\"></a>用户登录系统</h3><p>用户的登录方式有三种：</p>\n<ul>\n<li>命令行登录</li>\n<li>ssh登录</li>\n<li>图形界面登录</li>\n</ul>\n<p>通过GUI登录界面登录成功后可以直接进入KDE、Gnome等窗口管理器。</p>\n<p>命令行登录就是命令行的形式，输入用户密码等进行登录，注意一点一般密码处是没有回显的。</p>\n<h3 id=\"Linux关机\"><a href=\"#Linux关机\" class=\"headerlink\" title=\"Linux关机\"></a>Linux关机</h3><p>服务器正确的关机流程为：sync &gt; shutdown &gt; reboot &gt; halt</p>\n<p>关机使用指令：<code>shutdown</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sync 将数据由内存同步到硬盘中。\n\nshutdown 关机指令\n\n关机\nshutdown –h 10 ‘This server will shutdown after 10 mins’ 这个命令告诉大家，计算机将在10分钟后关机，并且会显示在登陆用户的当前屏幕中。\n\nshutdown –h now 立马关机\n\nshutdown –h 20:25 系统会在今天20:25关机\n\nshutdown –h +10 十分钟后关机\n\n重启\nshutdown –r now 系统立马重启\n\nshutdown –r +10 系统十分钟后重启\n\n其他写法\nreboot 就是重启，等同于 shutdown –r now\n\nhalt 关闭系统，等同于shutdown –h now 和 poweroff<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Linux-系统目录结构\"><a href=\"#Linux-系统目录结构\" class=\"headerlink\" title=\"Linux 系统目录结构\"></a>Linux 系统目录结构</h2><p>树状结构图：</p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2014/06/003vPl7Rty6E8kZRlAEdc690.jpg\" alt=\"img\"></p>\n<h3 id=\"目录解释和用处\"><a href=\"#目录解释和用处\" class=\"headerlink\" title=\"目录解释和用处\"></a>目录解释和用处</h3><ul>\n<li><p><strong>/bin</strong>：<br>bin是Birnary的缩写, 这个目录存放着最经常使用的命令。</p>\n</li>\n<li><p><strong>/boot：</strong><br>这里存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件。这是个很重要的地方，随便乱搞就会启动不了。</p>\n</li>\n<li><p><strong>/dev ：</strong><br>dev是Device(设备)的缩写, 该目录下存放的是Linux的外部设备，在Linux中访问设备的方式和访问文件的方式是相同的。像我之前插入了一个U盘，<code>/dev/sda</code>就表示了U盘的整个磁盘。</p>\n</li>\n<li><p><strong>/etc：</strong><br>这个目录用来存放所有的系统管理所需要的配置文件和子目录。</p>\n</li>\n<li><p><strong>/home</strong>：<br>用户的主目录，在Linux中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。</p>\n</li>\n<li><p><strong>/lib</strong>：<br>这个目录里存放着系统最基本的动态连接共享库，其作用类似于Windows里的DLL文件。几乎所有的应用程序都需要用到这些共享库。</p>\n</li>\n<li><p><strong>/lost+found</strong>：<br>这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</p>\n</li>\n<li><p><strong>/media</strong>：<br>linux 系统会自动识别一些设备，例如U盘、光驱等等，当识别后，linux会把识别的设备挂载到这个目录下。</p>\n</li>\n<li><p><strong>/mnt</strong>：<br>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在/mnt/上，然后进入该目录就可以查看光驱里的内容了。</p>\n</li>\n<li><p><strong>/opt</strong>：<br> 这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。</p>\n</li>\n<li><p><strong>/proc</strong>：<br>这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。<br>这个目录的内容不在硬盘上而是在内存里，我们也可以直接修改里面的某些文件，比如可以通过下面的命令来屏蔽主机的ping命令，使别人无法ping你的机器：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">echo 1 &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;icmp_echo_ignore_all<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p><strong>/root</strong>：<br>该目录为系统管理员，也称作超级权限者的用户主目录。</p>\n</li>\n<li><p><strong>/sbin</strong>：<br>s就是Super User的意思，这里存放的是系统管理员使用的系统管理程序。</p>\n</li>\n<li><p><strong>/selinux</strong>：<br> 这个目录是Redhat/CentOS所特有的目录，Selinux是一个安全机制，类似于windows的防火墙，但是这套机制比较复杂，这个目录就是存放selinux相关的文件的。</p>\n</li>\n<li><p><strong>/srv</strong>：<br> 该目录存放一些服务启动之后需要提取的数据。</p>\n</li>\n<li><p><strong>/sys</strong>：</p>\n<p> 这是linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统 sysfs 。</p>\n<p>sysfs文件系统集成了下面3种文件系统的信息：针对进程信息的proc文件系统、针对设备的devfs文件系统以及针对伪终端的devpts文件系统。</p>\n<p>该文件系统是内核设备树的一个直观反映。</p>\n<p>当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中被创建。</p>\n</li>\n<li><p><strong>/tmp</strong>：<br>这个目录是用来存放一些临时文件的。</p>\n</li>\n<li><p><strong>/usr</strong>：<br> 这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于windows下的program files目录。</p>\n</li>\n<li><p><strong>/usr/bin：</strong><br>系统用户使用的应用程序。</p>\n</li>\n<li><p><strong>/usr/sbin：</strong><br>超级用户使用的比较高级的管理程序和系统守护程序。</p>\n</li>\n<li><p><strong>/usr/src：</strong><br>内核源代码默认的放置目录。</p>\n</li>\n<li><p><strong>/var</strong>：<br>这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</p>\n</li>\n<li><p><strong>/run</strong>：<br>是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。如果你的系统上有 /var/run 目录，应该让它指向 run。</p>\n</li>\n</ul>\n<p>/bin和/usr/bin是给系统用户使用的命令，而sbin和/usr/sbin是给root用户使用的命令，用的时候要用到sudo来提供root权限。</p>\n<h2 id=\"deepin-wine使用小技巧\"><a href=\"#deepin-wine使用小技巧\" class=\"headerlink\" title=\"deepin-wine使用小技巧\"></a>deepin-wine使用小技巧</h2><h3 id=\"修改dpi\"><a href=\"#修改dpi\" class=\"headerlink\" title=\"修改dpi\"></a>修改dpi</h3><h4 id=\"方法一：\"><a href=\"#方法一：\" class=\"headerlink\" title=\"方法一：\"></a>方法一：</h4><p>这几天在用Ubuntu20.04，装了一个deepin-wine和wine应用让dpi给搞糊涂了，刚刚发现在/opt/deepinwine/中有一个Setdpi.sh的脚本可以设置应用dpi，只要选好dpi用起来舒服啊，我是设置120,我是1080P屏。但是这样只能用一次，每次启动都要这样才行。</p>\n<h4 id=\"方法二：\"><a href=\"#方法二：\" class=\"headerlink\" title=\"方法二：\"></a>方法二：</h4><p>使用命令打开相应应用的wine配置，修改dpi到适合的值就可以了，而且一次修改永久有效。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">env</span> <span class=\"token assign-left variable\">WINEPREFIX</span><span class=\"token operator\">=</span><span class=\"token string\">\"/home/a1andns/.deepinwine/Deepin-QQ\"</span> /usr/bin/deepin-wine winecfg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>微信啊什么的也都可以改一下了，没有合适的dpi真的搞瞎了眼。</p>\n<p>记录一下，以备以后查用。</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p>【1】菜鸟教程</p>\n","text":"Linux常识Linux 内核最初只是由芬兰人林纳斯·托瓦兹（Linus Torvalds）在赫尔辛基大学上学时出于个人爱好而编写的。Linux 是一套免费使用和自由传播的类 Unix 操作系统，是一个基于 POSIX 和 UNIX 的多用户、多任务、支持多线程和多 CPU 的操...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"Linux学习","slug":"Linux学习","count":7,"path":"api/categories/Linux学习.json"}],"tags":[{"name":"Linux","slug":"Linux","count":11,"path":"api/tags/Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Linux%E5%B8%B8%E8%AF%86\"><span class=\"toc-text\">Linux常识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux%E5%8F%91%E8%A1%8C%E7%89%88\"><span class=\"toc-text\">Linux发行版</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">Linux应用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Linux%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">Linux系统启动过程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%85%E6%A0%B8%E5%BC%95%E5%AF%BC\"><span class=\"toc-text\">内核引导</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8Cinit\"><span class=\"toc-text\">运行init</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E7%BA%A7%E5%88%AB\"><span class=\"toc-text\">运行级别</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B3%BB%E7%BB%9F%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">系统初始化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BB%BA%E7%AB%8B%E7%BB%88%E7%AB%AF\"><span class=\"toc-text\">建立终端</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">用户登录系统</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux%E5%85%B3%E6%9C%BA\"><span class=\"toc-text\">Linux关机</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Linux-%E7%B3%BB%E7%BB%9F%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">Linux 系统目录结构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E5%BD%95%E8%A7%A3%E9%87%8A%E5%92%8C%E7%94%A8%E5%A4%84\"><span class=\"toc-text\">目录解释和用处</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#deepin-wine%E4%BD%BF%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7\"><span class=\"toc-text\">deepin-wine使用小技巧</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9dpi\"><span class=\"toc-text\">修改dpi</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%B8%80%EF%BC%9A\"><span class=\"toc-text\">方法一：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%BA%8C%EF%BC%9A\"><span class=\"toc-text\">方法二：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\"><span class=\"toc-text\">参考资料</span></a></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"CTFHub技能树web完结","uid":"95413dc0d7a5fa9cf97869672d0df757","slug":"CTFHub技能树web完结","date":"2020-06-27T08:03:19.000Z","updated":"2020-09-21T09:18:52.000Z","comments":true,"path":"api/articles/CTFHub技能树web完结.json","keywords":"A1andNS","cover":[],"text":"XSS之反射性用了一个XSS平台叫xss8.cc cookie : flag=ctfhub{c6deb9f1323dc3d8ed565bcd6e5382e91aee9c5b} SQL-过滤空格这个最近新更新的技能树内容，空格被过滤了，要想办法来绕过啊。 出现空格就是hack +是...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[{"name":"CTF","slug":"CTF","count":43,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":15,"path":"api/tags/CTF.json"},{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"HTML基础学习(五)","uid":"a285b323cdcf629d2df823fa07ff6e28","slug":"HTML基础学习-五","date":"2020-05-31T13:59:34.000Z","updated":"2020-05-31T16:28:00.000Z","comments":true,"path":"api/articles/HTML基础学习-五.json","keywords":"A1andNS","cover":"https://s1.ax1x.com/2020/05/27/tEIsl6.jpg","text":"HTML框架想要再同一个浏览器窗口中显示不止一个页面，就要用框架。 框架也就是iframe，它的语法 &lt;iframe src=\"URL\">&lt;/iframe> 这里的URL为想要显示的其他网页的URL。 高度和宽度height和width属性用来定义iframe标签的高...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"HTML学习","slug":"HTML学习","count":5,"path":"api/categories/HTML学习.json"}],"tags":[{"name":"HTML","slug":"HTML","count":5,"path":"api/tags/HTML.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}