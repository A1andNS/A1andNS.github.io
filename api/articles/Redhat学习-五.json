{"title":"Redhat学习(五)","uid":"c993bcceaa8ff4a9e60b7e8c86bd0c0e","slug":"Redhat学习-五","date":"2020-12-15T08:12:52.000Z","updated":"2020-12-16T13:47:08.000Z","comments":true,"path":"api/articles/Redhat学习-五.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200601211235.jpg","content":"<p>来看看redhat的防火墙管理工具，基本的Linux都会使用的防火墙。这里Redhat 7 中新增了firewalld防火墙，之前版本中都是iptables，现在很多Linux也开始使用firewalld了。</p>\n<h2 id=\"防火墙管理工具\"><a href=\"#防火墙管理工具\" class=\"headerlink\" title=\"防火墙管理工具\"></a>防火墙管理工具</h2><p>所谓防火墙，就是用来隔绝内网和外网的，部署在内网和公网之间来充当保护屏障的工具，不论是硬件防火墙或者软件防火墙，主要功能都是差不多的，主要就是依据策略对穿越防火墙的流量来进行过滤。防火墙策略可以基于流量的源地址和目的地址、端口号、协议、应用等信息来制定。然后防火墙就会按照我们设置的策略去监控出入流量，如果流量特征符合我们设置的过滤策略，就会执行相应处理，以此来判断放行什么流量，过滤哪些流量。</p>\n<p>从真正意义上来说其实iptables和firewalld都不算真正的防火墙，它们只是用来定义防火墙策略的防火墙管理工具，它们就是一种服务。其中iptables服务会把配置好的防火墙策略交给内核层的netfilter网络过滤器来处理，而firewalld服务则是把配置好的防火墙策略交给内核层的nftables包过滤框架来处理。其实Redhat 7系统并不是只有一个firewalld，只是默认的改为这个，netfilter他也还是存在的，实际上Linux上有好几个防火墙管理工具，平时用一个也就好了。</p>\n<h2 id=\"iptables\"><a href=\"#iptables\" class=\"headerlink\" title=\"iptables\"></a>iptables</h2><p>虽然firewalld推出也很久了，但是iiptbales还是比较流行，被广泛使用，毕竟大量运维人员习惯了iptables的使用，</p>\n<h3 id=\"策略与规则链\"><a href=\"#策略与规则链\" class=\"headerlink\" title=\"策略与规则链\"></a>策略与规则链</h3><p>防火墙回从上到下的顺序来读取配置的策略规则，在找到匹配项后就立即结束匹配工作，然后去执行匹配项目中定义的行为。如果所有策略中都没有匹配的就去执行默认策略。一般防火墙策略规则的设置有两种：一种是放行，一种是阻止。默认策略值得关注根据实际需求来判断是使用默认拒绝还是默认允许。</p>\n<p>规则就是处理或过滤流量的策略条目，多条规则就构成了一个规则链，而规则链依据数据包处理位置的不同又可以分成几类。</p>\n<ol>\n<li>在进行路由选择前处理数据包（PREROUTING）</li>\n<li>处理流入的数据包（INPUT）</li>\n<li>处理流出的数据包（OUTPUT）</li>\n<li>处理转发的数据包（FORWARD）</li>\n<li>在进行路由选择后处理数据包（POSTROUTING）</li>\n</ol>\n<p>一般我们配置INPUT比较多。</p>\n<p>iptables的策略中的术语有ACCEPT、REJECT、LOG、DROP，其中REJECT是拒绝流量并且回复消息告知发送者信息被丢弃，而DROP则是不回复的拒绝流量。最明显的就是，如果是rejuect的，在ping命令中会看到一个端口不可达的提示，而DROP的则是显示响应超时，所以这就让人无法判断他是主机不在线还是流量被拒绝。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-P</td>\n<td>设置默认策略</td>\n</tr>\n<tr>\n<td>-F</td>\n<td>清空规则链</td>\n</tr>\n<tr>\n<td>-L</td>\n<td>查看规则链</td>\n</tr>\n<tr>\n<td>-A</td>\n<td>在规则链的末尾加入新规则</td>\n</tr>\n<tr>\n<td>-I num</td>\n<td>在规则链的头部加入新规则</td>\n</tr>\n<tr>\n<td>-D num</td>\n<td>删除某一条规则</td>\n</tr>\n<tr>\n<td>-s</td>\n<td>匹配来源地址IP/MASK，加叹号“!”表示除这个IP外</td>\n</tr>\n<tr>\n<td>-d</td>\n<td>匹配目标地址</td>\n</tr>\n<tr>\n<td>-i 网卡名称</td>\n<td>匹配从这块网卡流入的数据</td>\n</tr>\n<tr>\n<td>-o 网卡名称</td>\n<td>匹配从这块网卡流出的数据</td>\n</tr>\n<tr>\n<td>-p</td>\n<td>匹配协议，如TCP、UDP、ICMP</td>\n</tr>\n<tr>\n<td>–dport num</td>\n<td>匹配目标端口号</td>\n</tr>\n<tr>\n<td>–sport num</td>\n<td>匹配来源端口号</td>\n</tr>\n</tbody></table>\n<p>上手试一试：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#查看已有的防火墙规则链</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -L</span>\nChain INPUT <span class=\"token punctuation\">(</span>policy ACCEPT<span class=\"token punctuation\">)</span>\ntarget     prot opt <span class=\"token builtin class-name\">source</span>               destination         \nACCEPT     udp  --  anywhere             anywhere             udp dpt:domain\nACCEPT     tcp  --  anywhere             anywhere             tcp dpt:domain\nACCEPT     udp  --  anywhere             anywhere             udp dpt:bootps\nACCEPT     tcp  --  anywhere             anywhere             tcp dpt:bootps\n                      <span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>\n<span class=\"token comment\">#清空已有的防火墙规则链</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -F</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -L</span>\nChain INPUT <span class=\"token punctuation\">(</span>policy ACCEPT<span class=\"token punctuation\">)</span>\ntarget     prot opt <span class=\"token builtin class-name\">source</span>               destination         \n\nChain FORWARD <span class=\"token punctuation\">(</span>policy ACCEPT<span class=\"token punctuation\">)</span>\ntarget     prot opt <span class=\"token builtin class-name\">source</span>               destination         \n\nChain OUTPUT <span class=\"token punctuation\">(</span>policy ACCEPT<span class=\"token punctuation\">)</span>\ntarget     prot opt <span class=\"token builtin class-name\">source</span>               destination         \n\nChain FORWARD_IN_ZONES <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> references<span class=\"token punctuation\">)</span>\ntarget     prot opt <span class=\"token builtin class-name\">source</span>               destination                   <span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>\n<span class=\"token comment\">#设置INPUT的默认策略是DROP</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -P INPUT DROP</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -L</span>\nChain INPUT <span class=\"token punctuation\">(</span>policy DROP<span class=\"token punctuation\">)</span>\ntarget     prot opt <span class=\"token builtin class-name\">source</span>               destination         \n\nChain FORWARD <span class=\"token punctuation\">(</span>policy ACCEPT<span class=\"token punctuation\">)</span>\ntarget     prot opt <span class=\"token builtin class-name\">source</span>               destination     \n<span class=\"token comment\">#注意：默认链的拒绝只能使用DROP，不能使用REJECT，注意如果我们吧默认设置为拒绝，那我们就需要添加一些策略来匹配合法流量，让其可以通过，都这所有流量都被干掉了。</span>\n<span class=\"token comment\">#向INPUT链中添加允许ICMP流量进入的策略</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -I INPUT -p ICMP -j ACCEPT</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -L</span>\nChain INPUT <span class=\"token punctuation\">(</span>policy DROP<span class=\"token punctuation\">)</span>\ntarget     prot opt <span class=\"token builtin class-name\">source</span>               destination         \nACCEPT     icmp --  anywhere             anywhere     \n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># ping -c 4 192.168.184.128</span>\nPING <span class=\"token number\">192.168</span>.184.128 <span class=\"token punctuation\">(</span><span class=\"token number\">192.168</span>.184.128<span class=\"token punctuation\">)</span> <span class=\"token number\">56</span><span class=\"token punctuation\">(</span><span class=\"token number\">84</span><span class=\"token punctuation\">)</span> bytes of data.\n<span class=\"token number\">64</span> bytes from <span class=\"token number\">192.168</span>.184.128: <span class=\"token assign-left variable\">icmp_seq</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token assign-left variable\">ttl</span><span class=\"token operator\">=</span><span class=\"token number\">64</span> <span class=\"token assign-left variable\">time</span><span class=\"token operator\">=</span><span class=\"token number\">0.040</span> ms\n<span class=\"token number\">64</span> bytes from <span class=\"token number\">192.168</span>.184.128: <span class=\"token assign-left variable\">icmp_seq</span><span class=\"token operator\">=</span><span class=\"token number\">2</span> <span class=\"token assign-left variable\">ttl</span><span class=\"token operator\">=</span><span class=\"token number\">64</span> <span class=\"token assign-left variable\">time</span><span class=\"token operator\">=</span><span class=\"token number\">0.059</span> ms\n<span class=\"token number\">64</span> bytes from <span class=\"token number\">192.168</span>.184.128: <span class=\"token assign-left variable\">icmp_seq</span><span class=\"token operator\">=</span><span class=\"token number\">3</span> <span class=\"token assign-left variable\">ttl</span><span class=\"token operator\">=</span><span class=\"token number\">64</span> <span class=\"token assign-left variable\">time</span><span class=\"token operator\">=</span><span class=\"token number\">0.036</span> ms\n<span class=\"token number\">64</span> bytes from <span class=\"token number\">192.168</span>.184.128: <span class=\"token assign-left variable\">icmp_seq</span><span class=\"token operator\">=</span><span class=\"token number\">4</span> <span class=\"token assign-left variable\">ttl</span><span class=\"token operator\">=</span><span class=\"token number\">64</span> <span class=\"token assign-left variable\">time</span><span class=\"token operator\">=</span><span class=\"token number\">0.060</span> ms\n\n--- <span class=\"token number\">192.168</span>.184.128 <span class=\"token function\">ping</span> statistics ---\n<span class=\"token number\">4</span> packets transmitted, <span class=\"token number\">4</span> received, <span class=\"token number\">0</span>% packet loss, <span class=\"token function\">time</span> 3000ms\nrtt min/avg/max/mdev <span class=\"token operator\">=</span> <span class=\"token number\">0.036</span>/0.048/0.060/0.013 ms\n<span class=\"token comment\">#删除上面的规则，并且把默认修改为ACCEPT</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -D INPUT 1</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -P INPUT ACCEPT</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -L</span>\nChain INPUT <span class=\"token punctuation\">(</span>policy ACCEPT<span class=\"token punctuation\">)</span>\ntarget     prot opt <span class=\"token builtin class-name\">source</span>               destination   \n<span class=\"token comment\">#将INPUT规则链设置为只允许指定网段的主机访问本机的22端口，拒绝来自其他所有主机的流量</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -I INPUT -s 192.168.184.0/24 -p tcp --dport 22 -j ACCEPT</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -A INPUT -p tcp --dport 22 -j REJECT</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -L</span>\nChain INPUT <span class=\"token punctuation\">(</span>policy ACCEPT<span class=\"token punctuation\">)</span>\ntarget     prot opt <span class=\"token builtin class-name\">source</span>               destination         \nACCEPT     tcp  --  <span class=\"token number\">192.168</span>.184.0/24     anywhere             tcp dpt:ssh\nREJECT     tcp  --  anywhere             anywhere             tcp dpt:ssh reject-with icmp-port-unreachable\n<span class=\"token comment\">#向INPUT规则链中添加拒绝所有人访问本机12345端口的策略规则</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -I INPUT -p tcp --dport 12345 -j REJECT</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -I INPUT -p udp --dport 12345 -j REJECT</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -L</span>\nChain INPUT <span class=\"token punctuation\">(</span>policy ACCEPT<span class=\"token punctuation\">)</span>\ntarget     prot opt <span class=\"token builtin class-name\">source</span>               destination         \nREJECT     udp  --  anywhere             anywhere             udp dpt:italk reject-with icmp-port-unreachable\nREJECT     tcp  --  anywhere             anywhere             tcp dpt:italk reject-with icmp-port-unreachable\nACCEPT     tcp  --  <span class=\"token number\">192.168</span>.184.0/24     anywhere             tcp dpt:ssh\nREJECT     tcp  --  anywhere             anywhere             tcp dpt:ssh reject-with icmp-port-unreachable\n<span class=\"token comment\">#向INPUT规则链中添加拒绝192.168.10.5主机访问本机80端口（web服务）的策略</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -I INPUT -p tcp -s 192.168.10.5 --dport 80 -j REJECT</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -L</span>\nChain INPUT <span class=\"token punctuation\">(</span>policy ACCEPT<span class=\"token punctuation\">)</span>\ntarget     prot opt <span class=\"token builtin class-name\">source</span>               destination         \nREJECT     tcp  --  <span class=\"token number\">192.168</span>.10.5         anywhere             tcp dpt:http reject-with icmp-port-unreachable\nREJECT     udp  --  anywhere             anywhere             udp dpt:italk reject-with icmp-port-unreachable\nREJECT     tcp  --  anywhere             anywhere             tcp dpt:italk reject-with icmp-port-unreachable\nACCEPT     tcp  --  <span class=\"token number\">192.168</span>.184.0/24     anywhere             tcp dpt:ssh\nREJECT     tcp  --  anywhere             anywhere             tcp dpt:ssh reject-with icmp-port-unreachable\n\n<span class=\"token comment\">#向INPUT规则链中添加拒绝所有主机访问本机1000-1024端口的策略</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -A INPUT -p tcp --dport 1000:1024 -j REJECT</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -A INPUT -p udp --dport 1000:1024 -j REJECT</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># iptables -L</span>\nChain INPUT <span class=\"token punctuation\">(</span>policy ACCEPT<span class=\"token punctuation\">)</span>\ntarget     prot opt <span class=\"token builtin class-name\">source</span>               destination         \nREJECT     tcp  --  <span class=\"token number\">192.168</span>.10.5         anywhere             tcp dpt:http reject-with icmp-port-unreachable\nREJECT     udp  --  anywhere             anywhere             udp dpt:italk reject-with icmp-port-unreachable\nREJECT     tcp  --  anywhere             anywhere             tcp dpt:italk reject-with icmp-port-unreachable\nACCEPT     tcp  --  <span class=\"token number\">192.168</span>.184.0/24     anywhere             tcp dpt:ssh\nREJECT     tcp  --  anywhere             anywhere             tcp dpt:ssh reject-with icmp-port-unreachable\nREJECT     tcp  --  anywhere             anywhere             tcp dpts:cadlock2:1024 reject-with icmp-port-unreachable\nREJECT     udp  --  anywhere             anywhere             udp dpts:cadlock2:1024 reject-with icmp-port-unreachable<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>需要注意的是iptables服务在重启后会失效，如果想让配置永久有效，需要执行保存命令</strong></p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> iptables save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"firewalld\"><a href=\"#firewalld\" class=\"headerlink\" title=\"firewalld\"></a>firewalld</h2><p>firewalld现在是RHEL7的默认防火墙配置管理工具，它具有cli和基于GUI的两种管理方式，相较于传统的防火墙管理工具，firewalld支持动态更新技术并且加入了区域的概念，所谓的区域就是firewalld事先准备了几套防火墙策略模板，以便于用户可以根据自己所处不同的环境来选择合适的策略。从而事先策略快切换。</p>\n<p><strong>区域以及其默认策略表：</strong></p>\n<table>\n<thead>\n<tr>\n<th>区域</th>\n<th>默认规则策略</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>trusted</td>\n<td>允许所有的数据包</td>\n</tr>\n<tr>\n<td>home</td>\n<td>拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、mdns、ipp-client、amba-client与dhcpv6-client服务相关，则允许流量</td>\n</tr>\n<tr>\n<td>internal</td>\n<td>等同于home区域</td>\n</tr>\n<tr>\n<td>work</td>\n<td>拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、ipp-client与dhcpv6-client服务相关，则允许流量</td>\n</tr>\n<tr>\n<td>public</td>\n<td>拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、dhcpv6-client服务相关，则允许流量</td>\n</tr>\n<tr>\n<td>external</td>\n<td>拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh服务相关，则允许流量</td>\n</tr>\n<tr>\n<td>dmz</td>\n<td>拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh服务相关，则允许流量</td>\n</tr>\n<tr>\n<td>block</td>\n<td>拒绝流入的流量，除非与流出的流量相关</td>\n</tr>\n<tr>\n<td>drop</td>\n<td>拒绝流入的流量，除非与流出的流量相关</td>\n</tr>\n</tbody></table>\n<h3 id=\"CLI方式\"><a href=\"#CLI方式\" class=\"headerlink\" title=\"CLI方式\"></a>CLI方式</h3><p>CLI也就是命令行方式，Linux的常用方式。firewall-cmd有很多名利参数可以使用，但是这里有一点就是，只有长格式没有短格式。好在可以tab不全参数。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>–get-default-zone</td>\n<td>查询默认的区域名称</td>\n</tr>\n<tr>\n<td>–set-default-zone=&lt;区域名称&gt;</td>\n<td>设置默认的区域，使其永久生效</td>\n</tr>\n<tr>\n<td>–get-zones</td>\n<td>显示可用的区域</td>\n</tr>\n<tr>\n<td>–get-services</td>\n<td>显示预先定义的服务</td>\n</tr>\n<tr>\n<td>–get-active-zones</td>\n<td>显示当前正在使用的区域与网卡名称</td>\n</tr>\n<tr>\n<td>–add-source=</td>\n<td>将源自此IP或子网的流量导向指定的区域</td>\n</tr>\n<tr>\n<td>–remove-source=</td>\n<td>不再将源自此IP或子网的流量导向某个指定区域</td>\n</tr>\n<tr>\n<td>–add-interface=&lt;网卡名称&gt;</td>\n<td>将源自该网卡的所有流量都导向某个指定区域</td>\n</tr>\n<tr>\n<td>–change-interface=&lt;网卡名称&gt;</td>\n<td>将某个网卡与区域进行关联</td>\n</tr>\n<tr>\n<td>–list-all</td>\n<td>显示当前区域的网卡配置参数、资源、端口以及服务等信息</td>\n</tr>\n<tr>\n<td>–list-all-zones</td>\n<td>显示所有区域的网卡配置参数、资源、端口以及服务等信息</td>\n</tr>\n<tr>\n<td>–add-service=&lt;服务名&gt;</td>\n<td>设置默认区域允许该服务的流量</td>\n</tr>\n<tr>\n<td>–add-port=&lt;端口号/协议&gt;</td>\n<td>设置默认区域允许该端口的流量</td>\n</tr>\n<tr>\n<td>–remove-service=&lt;服务名&gt;</td>\n<td>设置默认区域不再允许该服务的流量</td>\n</tr>\n<tr>\n<td>–remove-port=&lt;端口号/协议&gt;</td>\n<td>设置默认区域不再允许该端口的流量</td>\n</tr>\n<tr>\n<td>–reload</td>\n<td>让“永久生效”的配置规则立即生效，并覆盖当前的配置规则</td>\n</tr>\n<tr>\n<td>–panic-on</td>\n<td>开启应急状况模式</td>\n</tr>\n<tr>\n<td>–panic-off</td>\n<td>关闭应急状况模式</td>\n</tr>\n</tbody></table>\n<p>firewalld和前面说到的iptables一样，配置的防火墙策略会在重启系统是失效，所以如果要让配置一直有效就需要添加–permanent参数。但是这个永久模式又有点问题，它只有在重启后才会让配置生效，所以经常需要我们手动去重新加载配置，<code>firewll-cmd --reload</code>命令来进行重新加载配置。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#查看firewalld服务当前所使用的区域</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --get-default-zone </span>\npublic\n<span class=\"token comment\">#查询ens33网卡在firewall服务种区域</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --get-zone-of-interface==ens33</span>\nno zone\n<span class=\"token comment\">#把firewalld服务中ens33网卡的默认区域修改为external，并且在系统重启后生效。分别查看当前与永久模式下的区域名称</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --permanent --zone=external --change-interface=ens33</span>\nsuccess\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --get-zone-of-interface=ens33</span>\nno zone\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --permanent --get-zone-of-interface=ens33</span>\nexternal\n<span class=\"token comment\">#把firewall服务的当前默认区域设置为public</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --set-default-zone=public</span>\nsuccess\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --get-default-zone </span>\npublic\n<span class=\"token comment\">#启动或关闭firewall防火墙服务的应急状况模式，阻断一切网络连接</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --panic-on</span>\nsuccess\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --panic-off</span>\nsuccess\n<span class=\"token comment\">#查询public区域是否允许请求SSH和HTTPS协议的流量</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --zone=public --query-service=ssh</span>\n<span class=\"token function\">yes</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --zone=public --query-service=https</span>\nno\n<span class=\"token comment\">#把firewall服务中的请求HTTPS协议的流量设置为永久允许，并且立即生效</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --zone=public --add-service=https</span>\nsuccess\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --permanent --zone=public --add-service=https</span>\nsuccess\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --reload</span>\nsuccess\n<span class=\"token comment\">#把firewall服务中请求HTTP协议的流量设置为永久拒绝，并且立即生效</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --zone=public --remove-service=https</span>\nsuccess\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --permanent --zone=public --remove-service=https</span>\nsuccess\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --reload</span>\nsuccess\n<span class=\"token comment\">#把firewall服务中访问8080和8081端口的流量策略设置为i允许，仅限当前生效</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --zone=public --add-port=8080-8081/tcp</span>\nsuccess\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --zone=public --list-all </span>\npublic\n  target: default\n  icmp-block-inversion: no\n  interfaces: \n  sources: \n  services: dhcpv6-client <span class=\"token function\">ssh</span>\n  ports: <span class=\"token number\">8080</span>-8081/tcp\n  protocols: \n  masquerade: no\n  forward-ports: \n  source-ports: \n  icmp-blocks: \n  rich rules: \n<span class=\"token comment\">#把999端口的流量转发得到22端口，并且要求当前和长期均有效</span>\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --permanent --zone=public --add-forward-port=port=999:proto=tcp:toport=22:toaddr=192.168.10.10</span>\nsuccess\n<span class=\"token punctuation\">[</span>root@localhost a1andns<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --reload</span>\nsuccess\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"GUI管理工具\"><a href=\"#GUI管理工具\" class=\"headerlink\" title=\"GUI管理工具\"></a>GUI管理工具</h3><p><img src=\"/home/a1andns/.config/Typora/typora-user-images/image-20201216203629497.png\" alt=\"image-20201216203629497\"></p>\n<p>图形化操作就省下来很多很长的、复杂的命令。中文化的GUI操作起来还是很简单的。</p>\n<h3 id=\"TCP-Wrappers\"><a href=\"#TCP-Wrappers\" class=\"headerlink\" title=\"TCP Wrappers\"></a>TCP Wrappers</h3><p>TCP Wrapper是一款流量监控程序，它服务的防火墙策略由两个控制列表文件所控制，用户可以编辑允许控制列表文件来放行流量。两个文件分别是：<code>/etc/hosts.allow,/etc/hosts.deny</code></p>\n<table>\n<thead>\n<tr>\n<th>客户端类型</th>\n<th>示例</th>\n<th>满足示例的客户端列表</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>单一主机</td>\n<td>192.168.10.10</td>\n<td>IP地址为192.168.10.10的主机</td>\n</tr>\n<tr>\n<td>指定网段</td>\n<td>192.168.10.</td>\n<td>IP段为192.168.10.0/24的主机</td>\n</tr>\n<tr>\n<td>指定网段</td>\n<td>192.168.10.0/255.255.255.0</td>\n<td>IP段为192.168.10.0/24的主机</td>\n</tr>\n<tr>\n<td>指定DNS后缀</td>\n<td>.linuxprobe.com</td>\n<td>所有DNS后缀为.linuxprobe.com的主机</td>\n</tr>\n<tr>\n<td>指定主机名称</td>\n<td><a href=\"http://www.linuxprobe.com/\">www.linuxprobe.com</a></td>\n<td>主机名称为<a href=\"http://www.linuxprobe.com的主机/\">www.linuxprobe.com的主机</a></td>\n</tr>\n<tr>\n<td>指定所有客户端</td>\n<td>ALL</td>\n<td>所有主机全部包括在内</td>\n</tr>\n</tbody></table>\n<h2 id=\"参考来源\"><a href=\"#参考来源\" class=\"headerlink\" title=\"参考来源\"></a>参考来源</h2><p>《Linux就该这么学》</p>\n","text":"来看看redhat的防火墙管理工具，基本的Linux都会使用的防火墙。这里Redhat 7 中新增了firewalld防火墙，之前版本中都是iptables，现在很多Linux也开始使用firewalld了。 防火墙管理工具所谓防火墙，就是用来隔绝内网和外网的，部署在内网和公网之...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"Linux学习","slug":"Linux学习","count":7,"path":"api/categories/Linux学习.json"}],"tags":[{"name":"Linux","slug":"Linux","count":11,"path":"api/tags/Linux.json"},{"name":"Redhat","slug":"Redhat","count":5,"path":"api/tags/Redhat.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%98%B2%E7%81%AB%E5%A2%99%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">防火墙管理工具</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#iptables\"><span class=\"toc-text\">iptables</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AD%96%E7%95%A5%E4%B8%8E%E8%A7%84%E5%88%99%E9%93%BE\"><span class=\"toc-text\">策略与规则链</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#firewalld\"><span class=\"toc-text\">firewalld</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CLI%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">CLI方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#GUI%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">GUI管理工具</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#TCP-Wrappers\"><span class=\"toc-text\">TCP Wrappers</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%9D%A5%E6%BA%90\"><span class=\"toc-text\">参考来源</span></a></li></ol>","author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"XCTF全国高校主题挑战赛华为云专场","uid":"debcb1ad3dee8b8ef571d1cc227ee9b4","slug":"XCTF全国高校主题挑战赛华为云专场","date":"2020-12-25T13:11:39.000Z","updated":"2021-07-07T06:24:07.262Z","comments":true,"path":"api/articles/XCTF全国高校主题挑战赛华为云专场.json","keywords":"A1andNS","cover":null,"text":"webshell_1考点：webshell 在首页上传一个jsp木马 jsp内容为 &lt;%if(“a1andns”.equals(request.getParameter(“pwd”))){ java.io.InputStreamin=Runtime.getRuntime()...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"CTF","slug":"CTF","count":42,"path":"api/categories/CTF.json"}],"tags":[{"name":"XCTF","slug":"XCTF","count":1,"path":"api/tags/XCTF.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"BUUOJ刷题记录2020-12-14-21","uid":"c9ff35e68b84eedc69746ce24f3be94d","slug":"BUUOJ刷题记录2020-12-14-21","date":"2020-12-14T08:21:58.000Z","updated":"2021-06-28T14:58:24.289Z","comments":true,"path":"api/articles/BUUOJ刷题记录2020-12-14-21.json","keywords":"A1andNS","cover":"https://gitee.com/A1andNS/blogimage/raw/master/img/3.png","text":"[WesternCTF2018]shrine考点 ：代码审计、ssti import flask import os app = flask.Flask(__name__) app.config['FLAG'] = os.environ.pop('FLAG') @ app.rou...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"CTF","slug":"CTF","count":42,"path":"api/categories/CTF.json"}],"tags":[{"name":"BUUOJ","slug":"BUUOJ","count":13,"path":"api/tags/BUUOJ.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}