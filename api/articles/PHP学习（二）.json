{"title":"PHP学习（二）","uid":"7accb6e3c1142903ce150ec097962cd3","slug":"PHP学习（二）","date":"2020-08-09T15:04:30.000Z","updated":"2020-08-26T09:10:20.000Z","comments":true,"path":"api/articles/PHP学习（二）.json","keywords":"A1andNS","cover":[],"content":"<h2 id=\"安装和配置PHP\"><a href=\"#安装和配置PHP\" class=\"headerlink\" title=\"安装和配置PHP\"></a>安装和配置PHP</h2><h3 id=\"安装PHP语言\"><a href=\"#安装PHP语言\" class=\"headerlink\" title=\"安装PHP语言\"></a>安装PHP语言</h3><p>PHP底层是C语言实现</p>\n<p>1、官网下载PHP安装包</p>\n<p>2、解压放到服务目录下就好了</p>\n<h3 id=\"PHP安装目录\"><a href=\"#PHP安装目录\" class=\"headerlink\" title=\"PHP安装目录\"></a>PHP安装目录</h3><p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200809231352.png\" alt=\"image-20200809231319136\"></p>\n<p>解析PHP的命令：<code>php -f xxxx.php</code></p>\n<h2 id=\"Apache加载PHP模块\"><a href=\"#Apache加载PHP模块\" class=\"headerlink\" title=\"Apache加载PHP模块\"></a>Apache加载PHP模块</h2><h3 id=\"1、Apache主配置文件中加载对应的PHP提供的模块\"><a href=\"#1、Apache主配置文件中加载对应的PHP提供的模块\" class=\"headerlink\" title=\"1、Apache主配置文件中加载对应的PHP提供的模块\"></a>1、Apache主配置文件中加载对应的PHP提供的模块</h3><p>LoadModule php_5_module PHP所提供的模块链接路径，我这PHPstudy的PHP目录下是没有相关模块文件的，所以就没有去试了，但是如果要试的话，最好下载PHP的THREAD SAFE版本比较好。</p>\n<p>在httpd.conf文件中加入LoadModule  php7_module ‘E:/phpstudy/extends/php/php7apache2_2.dll’即可，路径自己找好就好了。</p>\n<h3 id=\"2、Apache分配工作给PHP模块\"><a href=\"#2、Apache分配工作给PHP模块\" class=\"headerlink\" title=\"2、Apache分配工作给PHP模块\"></a>2、Apache分配工作给PHP模块</h3><p>如果还是PHP代码就交给PHP处理，.php文件就被交给PHP处理。在主配置文件中加入AddType application/x-httpd-php .php表示以.php结尾的文件给php处理。</p>\n<h3 id=\"3、php配置文件加载到Apache配置文件中\"><a href=\"#3、php配置文件加载到Apache配置文件中\" class=\"headerlink\" title=\"3、php配置文件加载到Apache配置文件中\"></a>3、php配置文件加载到Apache配置文件中</h3><p>在主配置文件中添加<code>PHPIniDir &#39;E:/PHPStudy/php7&#39;</code></p>\n<h2 id=\"PHP语法\"><a href=\"#PHP语法\" class=\"headerlink\" title=\"PHP语法\"></a>PHP语法</h2><h3 id=\"PHP基础语法\"><a href=\"#PHP基础语法\" class=\"headerlink\" title=\"PHP基础语法\"></a>PHP基础语法</h3><p>PHP脚本在服务器上执行，然后以HTML结果发送于浏览器。</p>\n<p>这是PHP的基础语法，以<code>&lt;?php</code>开头，以<code>?&gt;</code>结尾，默认后缀<code>.php</code>。PHP通常与HTML结合使用。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token comment\">//PHP代码</span>\n\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">&lt;!--以下为简单写的PHP+HTML页面,并且写了一个system函数，但是存在安全隐患--&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;this is a test page&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n    &lt;h1&gt;this is the first page&lt;&#x2F;h1&gt;\n    &lt;?php\n    echo &quot;Hello World!!!&quot;;\n    $a &#x3D; $_GET[&#39;a&#39;];\n    echo system($a);\n    ?&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>PHP的每一条代码都必须用<code>;</code>结尾。这个和C语言一样，分号是一种分隔符，用于把指令集区分开。这个作用在Linux和Windows系统command line下是一样的。</p>\n<p>PHP有两种输出文本的基本指令：echo和print，基本语言也接近于这两个。</p>\n<h3 id=\"PHP的注释\"><a href=\"#PHP的注释\" class=\"headerlink\" title=\"PHP的注释\"></a>PHP的注释</h3><p>每个语言都有注释但也不同，Python是<code>#</code>和<code>&#39;&#39;&#39;</code>,C是<code>//</code>和<code>/**/</code>，而PHP和C是一样的，单行用<code>//</code>，多行用<code>/**/</code>，这个倒是很容易就习惯，学了C的话。</p>\n<h2 id=\"PHP变量\"><a href=\"#PHP变量\" class=\"headerlink\" title=\"PHP变量\"></a>PHP变量</h2><p>不同语言对变量的规则略有不同，但是大体相同。</p>\n<ul>\n<li>变量以 $ 符号开始，后面跟着变量的名称</li>\n<li>变量名必须以字母或者下划线字符开始</li>\n<li>变量名只能包含字母数字字符以及下划线（A-z、0-9 和 _ ）</li>\n<li>变量名不能包含空格</li>\n<li>变量名是区分大小写的（$y 和 $Y 是两个不同的变量）</li>\n</ul>\n<p><strong>这里需要注意一点：PHP经常和HTML结合编写，但是HTML对大小写不敏感，PHP是对大小写敏感的。</strong></p>\n<h3 id=\"创建PHP变量\"><a href=\"#创建PHP变量\" class=\"headerlink\" title=\"创建PHP变量\"></a>创建PHP变量</h3><p>PHP变量没有声明语句，这和Python有点像，直接在第一次赋值是被创建。直接跳过，和Python写法一样，就是要加个<code>;</code>。</p>\n<h3 id=\"PHP是一门弱类型语言\"><a href=\"#PHP是一门弱类型语言\" class=\"headerlink\" title=\"PHP是一门弱类型语言\"></a>PHP是一门弱类型语言</h3><p>这就是为什么，PHP不需要声明变量，而是和Python一样直接赋值就ok了。而强类型编程语言中，我们必须在使用变量前声明变量类型和名称，例如C和JAVA。</p>\n<h3 id=\"PHP变量作用域\"><a href=\"#PHP变量作用域\" class=\"headerlink\" title=\"PHP变量作用域\"></a>PHP变量作用域</h3><p>变量的作用域是脚本中变量可被引用/使用的部分，就是一个可以调用的范围限制。</p>\n<p>PHP 有四种不同的变量作用域：</p>\n<ul>\n<li>local</li>\n<li>global</li>\n<li>static</li>\n<li>parameter</li>\n</ul>\n<h4 id=\"local-和-global作用域\"><a href=\"#local-和-global作用域\" class=\"headerlink\" title=\"local 和 global作用域\"></a>local 和 global作用域</h4><p>PHP函数内声明的变量只能在函数内部访问，是局部变量，如果要在函数中使用全局变量就要用到global来实现了。函数外定义的变量即为全局变量了。这个和其他语言也是一样的，全局和局部的关系，学过C也都知道了。</p>\n<pre class=\"line-numbers language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">&lt;?php\n$x&#x3D;5; &#x2F;&#x2F; 全局变量\n\nfunction myTest()\n&#123;\n    $y&#x3D;10; &#x2F;&#x2F; 局部变量\n    global $x; &#x2F;&#x2F;添加这一句才能在函数中成功调用全局变量$x\n    echo &quot;变量 x 为: $x&quot;;\n    echo &quot;&lt;br&gt;&quot;;\n    echo &quot;变量 y 为: $y&quot;;\n&#125;\n?&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>PHP将所有全局变量存储在一个叫$GLOBALS[index]的数组中。index保存变量的名称。这个数组可以在函数内部访问，也可以直接用来更新全局变量。</p>\n<pre class=\"line-numbers language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;this is a test page&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n    &lt;h1&gt;this is the first page&lt;&#x2F;h1&gt;\n    &lt;?php\n    $x&#x3D;5; &#x2F;&#x2F; 全局变量\n\n    function myTest()\n    &#123;\n        $y&#x3D;10; &#x2F;&#x2F; 局部变量\n        echo &quot;&lt;p&gt;测试函数内变量:&lt;p&gt;&quot;;\n        echo $GLOBALS[&#39;x&#39;]+$y;\n    &#125;\n\n    myTest();\n\n    echo &quot;&lt;p&gt;测试函数外变量:&lt;p&gt;&quot;;\n    echo &quot;变量 x 为: $x + $y&quot;;\n    ?&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200826160432.png\" alt=\"1\"></p>\n<p>$GLOBAL[index]数组的这种写法是可以成功在函数中调用全局变量的。</p>\n<h4 id=\"static作用域\"><a href=\"#static作用域\" class=\"headerlink\" title=\"static作用域\"></a>static作用域</h4><p>在PHP中当函数完成时，他的局部变量会被删除，如果希望某个局部变量不会自动杯删除，可以施一公static关键字来声明他，<strong>在第一次赋值（声明）时声明static关键字</strong>。之后每次调用此函数，函数中的static变量都会保留上一次被调用时的值。需要注意：变量依旧还是局部变量，没有发生本质改变。</p>\n<h4 id=\"参数作用域\"><a href=\"#参数作用域\" class=\"headerlink\" title=\"参数作用域\"></a>参数作用域</h4><p>参数作用域就是平时定义函数的时候，会有传参数进入函数的情况，这时候就是参数作用域起作用了,参数作为函数声明的一部分。</p>\n<p>大多数语言都是这样的，全局和局部是独立的两个部分，即使在函数中存在和全局变量名一样的局部变量，函数也是以局部域来看的，即以函数内的局部变量为准。除非用global修饰或者使用了$GLOBALS[]。</p>\n<h2 id=\"PHP-echo-and-print\"><a href=\"#PHP-echo-and-print\" class=\"headerlink\" title=\"PHP echo and print\"></a>PHP echo and print</h2><p>PHP的两个基本输出，在很多地方都可以看到，一个是echo，一个是print。他们两个肯定是有些区别的，echo可以输出一个或多个字符串，print只允许输出一个字符串，返回值总为1。</p>\n<p><strong>echo输出速度比print快，echo没有返回值，print有返回值1</strong></p>\n<h3 id=\"PHP-echo\"><a href=\"#PHP-echo\" class=\"headerlink\" title=\"PHP echo\"></a>PHP echo</h3><p>echo是一个语言结构，echo使用的时候可以带()也可以不带。即echo或echo()。</p>\n<p>前面我写了一个<code>echo &quot;这是函数第&quot;.&quot;$time&quot;.&quot;次执行&quot;;</code>，搞清楚echo的用法后，其实可以直接<code>echo &quot;这是函数第 $time 次执行&quot;;</code>这样。但是问题是什么呢，这个在输出的时候会在次字前面添加空格，如果$time与次字连在一次会有语法问题。所以最后输出是<code>这是函数第 1 次执行</code>，而原来拼接的效果是<code>这是函数第1次执行</code>。</p>\n<h3 id=\"PHP-print\"><a href=\"#PHP-print\" class=\"headerlink\" title=\"PHP print\"></a>PHP print</h3><p>print同样是一个语言结构，可以使用括号，也可以不使用括号：print或print()。</p>\n<p>用法和echo一样的，pic就不多说了。</p>\n","text":"安装和配置PHP安装PHP语言PHP底层是C语言实现 1、官网下载PHP安装包 2、解压放到服务目录下就好了 PHP安装目录 解析PHP的命令：php -f xxxx.php Apache加载PHP模块1、Apache主配置文件中加载对应的PHP提供的模块LoadModule p...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"PHP","slug":"PHP","count":7,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":8,"path":"api/tags/PHP.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AEPHP\"><span class=\"toc-text\">安装和配置PHP</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85PHP%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">安装PHP语言</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">PHP安装目录</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Apache%E5%8A%A0%E8%BD%BDPHP%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">Apache加载PHP模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81Apache%E4%B8%BB%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E5%8A%A0%E8%BD%BD%E5%AF%B9%E5%BA%94%E7%9A%84PHP%E6%8F%90%E4%BE%9B%E7%9A%84%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">1、Apache主配置文件中加载对应的PHP提供的模块</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81Apache%E5%88%86%E9%85%8D%E5%B7%A5%E4%BD%9C%E7%BB%99PHP%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">2、Apache分配工作给PHP模块</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81php%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8A%A0%E8%BD%BD%E5%88%B0Apache%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD\"><span class=\"toc-text\">3、php配置文件加载到Apache配置文件中</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">PHP语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">PHP基础语法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E7%9A%84%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">PHP的注释</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">PHP变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BAPHP%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">创建PHP变量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E6%98%AF%E4%B8%80%E9%97%A8%E5%BC%B1%E7%B1%BB%E5%9E%8B%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">PHP是一门弱类型语言</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E5%8F%98%E9%87%8F%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">PHP变量作用域</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#local-%E5%92%8C-global%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">local 和 global作用域</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#static%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">static作用域</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%82%E6%95%B0%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">参数作用域</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP-echo-and-print\"><span class=\"toc-text\">PHP echo and print</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-echo\"><span class=\"toc-text\">PHP echo</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-print\"><span class=\"toc-text\">PHP print</span></a></li></ol></li></ol>","author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"PHP学习(三)","uid":"baa430cea36dc29f733210bfed21d4b2","slug":"PHP学习-三","date":"2020-08-26T08:29:50.000Z","updated":"2020-08-31T12:11:36.000Z","comments":true,"path":"api/articles/PHP学习-三.json","keywords":"A1andNS","cover":null,"text":"PHP EOF(headoc)这是一种在命令行shell和程序语言perl、PHP等里定义一个字符串的方法 关键点 必须后接分号，否则编译通不过。 EOF 可以用任意其它字符代替，只需保证结束标识与开始标识一致。 结束标识必须顶格独自占一行(即必须从行首开始，前后不能衔接任何空白...","link":"","photos":[],"count_time":{"symbolsCount":321,"symbolsTime":"1 mins."},"categories":[{"name":"PHP","slug":"PHP","count":7,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":8,"path":"api/tags/PHP.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua+Nginx搭建WAF","uid":"bd839c268cb45c5c23698cd90b30a351","slug":"Lua-Nginx搭建WAF","date":"2020-08-08T11:06:40.000Z","updated":"2020-08-09T01:25:28.000Z","comments":true,"path":"api/articles/Lua-Nginx搭建WAF.json","keywords":"A1andNS","cover":[],"text":"搭建报告一、 实验内容（1） 实现一个Nginx+Lua的防火墙 （2） 独立搭建一个完整的环境 （3） 进行两种攻击sql攻击和xss （4） 拦截的效果展示 （5） 提交报告 二、 实验环境（1） Windows10主机、CentOS7虚拟机 （2） Nginx、Lua、Lu...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"蓝队","slug":"蓝队","count":1,"path":"api/categories/蓝队.json"}],"tags":[{"name":"蓝队","slug":"蓝队","count":1,"path":"api/tags/蓝队.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}