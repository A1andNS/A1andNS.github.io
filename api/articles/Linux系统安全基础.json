{"title":"Linux系统安全基础","uid":"f8c714347e52c45826a3bbbe606ba90e","slug":"Linux系统安全基础","date":"2020-03-09T07:52:19.000Z","updated":"2020-04-13T00:46:36.000Z","comments":true,"path":"api/articles/Linux系统安全基础.json","keywords":"A1andNS","cover":[],"content":"<h2 id=\"Linux系统概述\"><a href=\"#Linux系统概述\" class=\"headerlink\" title=\"Linux系统概述\"></a>Linux系统概述</h2><h3 id=\"1、历史\"><a href=\"#1、历史\" class=\"headerlink\" title=\"1、历史\"></a>1、历史</h3><p>Linux操作系统诞生于1991年，它是Unix的一种典型克隆系统。它是一个基于POSIX和Unix的多用户、多任务、支持多线程和多CPU的操作系统，继承了Unix以网络为核心的设计是想，也是一个性能稳定的多用户网络操作系统。由Linus Torvalds设计，在热心的支持者帮助下不断开发完善。开源、开放、免费是Linux的魅力所在，Linux还具有良好的可移植性。</p>\n<h3 id=\"2、内核简介\"><a href=\"#2、内核简介\" class=\"headerlink\" title=\"2、内核简介\"></a>2、内核简介</h3><p>Linux是一个一体化内核系统。</p>\n<p>“内核”指的是一个提供硬件抽象层、磁盘及文件系统控制、多任务等功能的系统软件。一个内核不是一个完整的操作系统。一套基于Linux内核的完整操作系统叫做Linux操作系统，或是GNU/Linux。设备驱动程序开源完全访问硬件，可以在系统运行时直接装载或卸载。</p>\n<p>内核是一个操作系统最重要的部分，Linux内核目前也是在不断的更新。因为内核也是会有很多漏洞和缺陷的，出于安全性内核版本应该引起注意。</p>\n<p>Linux内核编号形式：主版本号.次版本号.修订版本号</p>\n<p>较小的内核隐患和安全补丁被赋予了次小数点版本号，如2.6.11.1</p>\n<p>在Linux的终端中，查看本机内核信息的命令为：</p>\n<p><code>uname -a</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191211121100115.png\" alt=\"1\"></p>\n<p>加载内核模块的命令为<code>insmod filename</code></p>\n<p>删除内核模块的命令为<code>rmmod filename</code></p>\n<p>其中，filename为用户准备好了需要加入内核的模块文件，查看系统已经加载的内核模块如下图（比较多图里只有一部分）</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191211121119922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2MTM5MDQ1,size_16,color_FFFFFF,t_70\" alt=\"2\"></p>\n<h3 id=\"3、发行版本\"><a href=\"#3、发行版本\" class=\"headerlink\" title=\"3、发行版本\"></a>3、发行版本</h3><p>发行版本是真的挺多的，各种各样的，比较著名的3个：Fedora、SUSE、Debian。著名的Ubuntu就是Debian的下游，CentOS和Oracle Linux则是Fedora的下游。我用的Kali Linux就是基于Debian发展而来的。</p>\n<h3 id=\"4、文件系统\"><a href=\"#4、文件系统\" class=\"headerlink\" title=\"4、文件系统\"></a>4、文件系统</h3><p>Linux和Windows下的文件的组织结构不用，Linux不使用磁盘分区符号来访问文件系统，而是整个文件系统表示成树状结构，Linux系统没增加一个文件系统都会将其加入到这个树中。</p>\n<p>操作系统文件结构的开始，只有一个单独的顶级目录结构，叫根目录。所有的一切都是从根开始，用“/”表示，并且延申到子目录。</p>\n<p>DOS/Windows系统下的文件系统都是按照磁盘分区的概念分类，目录存在分区上。而Linux系统则是通过“挂载“方式把所有分区都放置在”根”下的各个目录里。我虚拟机里的Kali Linux的文件结构可以看下面。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/201912111212299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2MTM5MDQ1,size_16,color_FFFFFF,t_70\" alt=\"3\"></p>\n<p>还可以用<code>tree</code>命令来更加直观的显示文件目录的树状结构如下图。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191211121241898.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2MTM5MDQ1,size_16,color_FFFFFF,t_70\" alt=\"4\"></p>\n<p>由于Ubuntu系统不自带tree命令，我的kali Linux也没有tree命令，所以可以使用<code>apt-get install tree</code>（kali linux）进行安装或<code>sudo apt-get install tree</code>进行安装。</p>\n<h2 id=\"OpenSSH安全配置\"><a href=\"#OpenSSH安全配置\" class=\"headerlink\" title=\"OpenSSH安全配置\"></a>OpenSSH安全配置</h2><p>OpenSSH是安全Shell协议族（SSH）的一个免费版本。SSH协议族可以用来进行远程控件，或在计算机之间传送文件。而实现此功能的传统方式，如Telnet、RCP都是极不安全的，并且使用明文传送密码。OpenSSH提供了服务端后台程序和客户端工具，来实现机密数据，并且代替原来的类似服务。</p>\n<p>SSHD是一个典型的独立的守护进程，OpenSSH服务可以通过/etc/ssh/sshd_config文件配置。</p>\n<h3 id=\"1、禁止Root用户登录\"><a href=\"#1、禁止Root用户登录\" class=\"headerlink\" title=\"1、禁止Root用户登录\"></a>1、禁止Root用户登录</h3><p>只允许普通用户登录，设置如下。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#Authentication:\nLoginGraceTime 120\nPermitRootLogin no\nStrictModes yes<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2、限制SSH验证重试次数\"><a href=\"#2、限制SSH验证重试次数\" class=\"headerlink\" title=\"2、限制SSH验证重试次数\"></a>2、限制SSH验证重试次数</h3><p>超过5次Socket连接会断开，设置如下。</p>\n<p><code>MaxAuthTries 5</code></p>\n<h3 id=\"3、禁止证书登录\"><a href=\"#3、禁止证书登录\" class=\"headerlink\" title=\"3、禁止证书登录\"></a>3、禁止证书登录</h3><p>证书登录很安全，但是正常用户和权限用户都可以给系统安装一个证书到.ssh/authorized-keys文件里，随时进入系统。对此可以禁用证书登录</p>\n<p><code>PubkeyAuthenticationno</code></p>\n<h3 id=\"4、使用证书替代密码认证\"><a href=\"#4、使用证书替代密码认证\" class=\"headerlink\" title=\"4、使用证书替代密码认证\"></a>4、使用证书替代密码认证</h3><p>这个与上面讲的正好相反，只允许使用key文件登录</p>\n<p><code>PasswordAuthenticationno</code></p>\n<h3 id=\"5、图形窗口客户端记忆密码的问题\"><a href=\"#5、图形窗口客户端记忆密码的问题\" class=\"headerlink\" title=\"5、图形窗口客户端记忆密码的问题\"></a>5、图形窗口客户端记忆密码的问题</h3><p>当使用XShell、Xftp、WinSCP、SecureCRT、SecureFX等软件登录时，该软件都提供记住密码的功能，使下一吃在登录就可以不输入密码进入系统。这是很方便但是在设备丢失后，就会产生巨大的风险。可以进行如下设置。</p>\n<p><code>ChallengeResponseAuthentication yes</code></p>\n<h3 id=\"6、禁止SSH端口映射\"><a href=\"#6、禁止SSH端口映射\" class=\"headerlink\" title=\"6、禁止SSH端口映射\"></a>6、禁止SSH端口映射</h3><p><code>AllowTcpForwarding no</code></p>\n<h3 id=\"7、IP地址限制\"><a href=\"#7、IP地址限制\" class=\"headerlink\" title=\"7、IP地址限制\"></a>7、IP地址限制</h3><p>如果只希望特定IP地址的用户登录主机，如果只允许192.168.1.1和192.168.1.2访问登录，可以对/etc/host.allow进行修改：</p>\n<p><code>sshd:192.168.1.1 192.168.1.2</code></p>\n<p>如果希望禁止所有人访问主机，对/etc/hosts.deny修改，如下：</p>\n<p><code>sshd:ALL</code></p>\n<h2 id=\"Shell安全\"><a href=\"#Shell安全\" class=\"headerlink\" title=\"Shell安全\"></a>Shell安全</h2><h3 id=\"1、-history文件\"><a href=\"#1、-history文件\" class=\"headerlink\" title=\"1、.history文件\"></a>1、.history文件</h3><p>通过~/.bash_history文件记录系统管理员的操作记录，定制.bash_history格式。</p>\n<p>（1）以Root用户登录服务器，在/etc/profile.d/下新建一个文件history_command。</p>\n<p>（2）编辑刚才创建的文件，写入内容。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">export HISTFILE&#x3D;$HOME&#x2F;.bash_history\nexport HISTSIZE&#x3D;1200\nexport HISTFILESIZE&#x3D;1200\nexport HISTCONTROL&#x3D;ignoredups\nexport HISTTIMEFORMAT&#x3D;”&#39;whoami&#39; %F %T “\nshopt -s histappend\ntypeset -r HISTTIMEFORMAT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>（3）使用source/etc/profile.c/history_command，使其生效。</p>\n<h3 id=\"2、执行权限\"><a href=\"#2、执行权限\" class=\"headerlink\" title=\"2、执行权限\"></a>2、执行权限</h3><p>以数据库为例，从安全角度考虑，需要进行如下的更改。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#chown mysql:mysql&#x2F;usr&#x2F;bin&#x2F;mysql*\n#chown 700 &#x2F;usr&#x2F;bin&#x2F;mysql*<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>mysql用户是DBA专用用户，其他用户将不能执行mysql等命令。</p>\n<h2 id=\"权限管理和控制\"><a href=\"#权限管理和控制\" class=\"headerlink\" title=\"权限管理和控制\"></a>权限管理和控制</h2><h3 id=\"1、权限查看\"><a href=\"#1、权限查看\" class=\"headerlink\" title=\"1、权限查看\"></a>1、权限查看</h3><p>Linux系统中每一个文件和目录都有访问许可权限，通过其来确定谁可以以何种方式访问和操作文件或者目录。</p>\n<p>文件或目录的访问权限分为只读、只写、可执行3种。文件创建时，文件所有者自动拥有对该文件的读、写和可执行权限。</p>\n<p><code>-rwxrw-rw- 1 root root 24064 1月 1410:58 qq.exe</code>为例子</p>\n<p>看最左边，<code>-</code>表示不具有该权限，<code>r</code>为只读，<code>w</code>为写，<code>x</code>为可执行。第一个字符如果时<code>-</code>则表示这是一个非目录文件，如果是d，表示是一个目录，后面的字符每3个为一组，分别表示属主、组用户、其他用户的访问权限。可以看出qq.exe是一个普通文件，属主可以读、写、可执行，而组用户只有读和写权限，其他用户也是只有读和写权限。同时，qq.exe文件的所有者是root用户，属于root组用户。</p>\n<h3 id=\"2、管理控制\"><a href=\"#2、管理控制\" class=\"headerlink\" title=\"2、管理控制\"></a>2、管理控制</h3><p>可以使用chown命令来改变文件的所属用户和组，将指定文件的拥有者改为指定的用户或组。</p>\n<p>命令格式：chown[选项]用户或组文件，命令选项为一下选项：</p>\n<p>-R：递归改变指定目录及其下面的所有子目录和文件拥有者</p>\n<p>-v：显示chown命令所做的工作</p>\n<p>使用chown命令修改用户和组的如下：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191211121318549.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2MTM5MDQ1,size_16,color_FFFFFF,t_70\" alt=\"5\"></p>\n<p>使用chmod命令修改文件权限可以灵活更多，它支持数字设定权限，其中，读权限r对应数字4，写权限w对应2，执行权限x对应1,chmod使用如下</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191211121340633.png\" alt=\"6\"></p>\n<p>+x就是对所有的用户添加执行权限，使用u+x，指定文件的所有者增加执行权限，同理还用o+x，g+x。</p>\n<p>数字设定权限方法如下：<br>777对应所有rwx权限，444对应所有的r权限。<br><code>chmod 777 b</code>后得到如下结果<br><img src=\"https://img-blog.csdnimg.cn/20191211121422356.png\" alt=\"7\"><br>为了安全应该要尽量避免产生权限为777的文件，毕竟所有人都可以读、写、执行将会带来较大的安全威胁和风险。</p>\n<h2 id=\"文件系统安全\"><a href=\"#文件系统安全\" class=\"headerlink\" title=\"文件系统安全\"></a>文件系统安全</h2><p> Linux对于文件权限管理是完善和全面的，但是用户通常会在权限的设置上产生批漏，<br>下面对于文件系统的权限和安全做进一步说明。</p>\n<h3 id=\"1-锁定系统重要文件\"><a href=\"#1-锁定系统重要文件\" class=\"headerlink\" title=\"1.锁定系统重要文件\"></a>1.锁定系统重要文件</h3><p>系统运维人员有时候可能会遇到通过Root用户都不能修改或删除某个文件的情况，产生<br>这种情况的大部分原因可能是这个文件被锁定了。在Linux下锁定文件的命令是chattr,通过<br>这个命令可以修改ext2、ext3、ext4文件系统下文件属性，但是这个命令必须有超级用户Root<br>来执行。和这个命令对应的命令是lsattr,这个命令用来查询文件属性。<br>通过chatr命令修改文件或目录的文件属性能够提高系统的安全性，下面简单介绍下<br>chattr和lsattr两个命令的用法。<br>lsattr用来查询文件属性，用法比较简单，其语法格式如下。<br>Isattr [-RVadIpv] [文件]<br>常用参数如下所示。<br>-a:列出目录中的所有文件，包括以.开头的文件。<br>-d:显示指定目录的属性。<br>-R:以递归的方式列出目录下所有文件及子目录以及属性值。<br>-v:显示文件或目录版本。<br>chattr命令的语法格式如下。<br>chattr [-RV] [-v version] [mode]文件或目录。<br>主要参数含义如下。<br>-R:递归修改所有的文件及子目录。<br>-V:详细显示修改内容，并打印输出。<br>其中，mode部分用来控制文件的属性，常用参数如下所示。<br>+:在原有参数设定基础上，追加参数。<br>-:在原有参数设定基础上，移除参数。<br>=:更新为指定参数。</p>\n<p>a:即append,设定该参数后,只能向文件中添加数据，而不能删除。常用于服务器日志安全文件，只有Root用户才能设置这个属性。<br>c:即compresse 设定文件是否经压缩后再存储。读取时需要经过自动解压操作。<br>i:即immutable， 设定文件不能被修改、 删除、重命名、设定链接等， 同时不能写入或<br>新增内容。 这个参数对于文件系统的安全设置有极大帮助。<br>s:安全删除文件或目录，即文件被删除后硬盘空间被全部收回。<br>u:与s参数相反，当设定为u时，系统会保留其数据块以便以后能够恢复删除这个文件。<br>这些参数中，最常用到的是a和i，参数a常用于服务器日志文件安全设定，而参数i更为严<br>格，不允许对文件进行任何操作，即使是Root用户。<br>在Linux系统中，如果一个用户以Root的权限登录或某个进程以Root的权限运行，那么它的使用权限就不再有任何的限制了。因此，攻击者通过远程或本地攻击手段获得了系统的Root权限将是一个灾难。 在这种情况下，文件系统将是保护系统安全的最后一道防线， 合理的属性设置可以最大限度地减小攻击者对系统的破坏程度，通过chattr命令锁定系统些重要的文件或目录，是保护文件系统安全最直接、最有效的手段。<br>对一些重要的目录和文件可以加上“i” 属性，常见的文件和目录如下所示。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">root@kali:~&#x2F; chattr -R +i &#x2F;bin &#x2F;boot &#x2F;lib &#x2F;sbin\nroot@kali:~&#x2F; chattr -R +I &#x2F;usr&#x2F;bin &#x2F;usr&#x2F;include &#x2F;usr&#x2F;lib &#x2F;usr&#x2F;sbin\nroot@kali:~&#x2F; chattr +i&#x2F;etc&#x2F;passwd\nroot@kali:~&#x2F; chattr +i&#x2F;etc&#x2F;shadow\nroot@kali:~&#x2F; chattr +i&#x2F;etc&#x2F;hosts\nroot@kali:~&#x2F; chattr +i&#x2F;ect&#x2F;resolv.conf\nroot@kali:~&#x2F; chattr +i&#x2F;etc&#x2F;fstab\nroot@kali:~&#x2F; chattr +i&#x2F;ect&#x2F;sudoers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>对一些重要的日志文件可以加上“a”属性，如下所示。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">root@kali:~&#x2F; chattr +a &#x2F;var&#x2F;log&#x2F;messages\nroot@kali:~&#x2F; chattr +a &#x2F;var&#x2F;log&#x2F;wtmp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>对重要的文件进行加锁，虽然能够提高服务器的安全性，但是也会带来一些不便。 例如，在软件的安装、升级可能需要去掉有关目录和文件的immutable属性和append-only属性，同时，对日志文件设置了append-only属性，可能会使日志轮换(logrotate)无法进行。因此，在使用chattr命令前，需要结合服务器的应用环境来权衡是否需要设置immutable属性和append-only属性。</p>\n<p>另外，虽然通过chattr命令修改文件属性能够提高文件系统的安全性，但是它并不适合所有的目录。chattr 命令不能保护/、/dev、 /tmp、 /var 等目录。<br>根目录不能有不可修改属性，因为如果根目录具有不可修改属性，那么系统根本无法工作: /dev在启动时，syslog 需要删除并重新建立/dev/log套接字设备，如果设置了不可修改属性，那么可能出问题;/tmp目录会有很多应用程序和系统程序需要在这个目录下建立临时文件，也不能设置不可修改属性; /var 是系统和程序的日志目录，如果设置为不可修改属性，那么系统写日志将无法进行，所以也不能通过chattr 命令保护。</p>\n<h3 id=\"2-文件权限检查和修改\"><a href=\"#2-文件权限检查和修改\" class=\"headerlink\" title=\"2.文件权限检查和修改\"></a>2.文件权限检查和修改</h3><p>系统中如果有不正确的权限设置，可能会危及整个系统的安全，下面列举查找系统不安全权限的方法。</p>\n<p> (1)查找系统中任何用户都有写权限的文件或目录，查找文件，如下所示。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">root@kali:~# find&#x2F; -type f perm -2 -0 perm -20 | xargs ls -al<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>查找目录，如下所示。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">root@kali:~# find &#x2F; -type d -perm -2 -o perm -20 | xargs 1s -ld<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>(2)查找系统中所有含“s”位的程序。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find&#x2F;-type f-perm -4000 -o -perm -2000 -print | xargs ls -al<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>含有“s”位权限的程序对系统安全威胁很大，通过查找系统中所有具有“s”位权限的程序，可以把某些不必要的“s”位程序去掉，这样可以防止用户滥用权限或提升权限的可能性。<br>(3)检查系统中所有suid及sgid文件。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find&#x2F; -user root -perm -2000 -print -exec md5sum &#123;&#125; \\;\nfind&#x2F; -user root -perm -4000 -print -exec md5sum &#123;&#125; \\;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>将检查的结果保存到文件中，可在以后的系统检查中作为参考。<br>(4)检查系统中没有属主的文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find&#x2F; -nouser -o -nogroup<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>没有属主的孤儿文件比较危险，往往成为黑客利用的工具，因此，找到这些文件后，要么删除掉，要么修改文件的属主，使其处于安全状态。</p>\n<h2 id=\"iptables配置\"><a href=\"#iptables配置\" class=\"headerlink\" title=\"iptables配置\"></a>iptables配置</h2><p> iptables是用来设置、维护和检查Linux内核的IP分组过滤规则的。作为Linux下的一款防火墙，它的功能十分强大，它有3个表，每个表内有规则链。<br>(1) filter 是默认的表，包含了内建的链INPUT (处理进入的分组)、FORWARD (处理通过的分组)和OUTPUT (处理本地生成的分组)。<br>(2)nat表被查询时表示遇到了产生新的连接的分组，由3个内建的链构成:PREROUTING(修改到来的分组）、OUIPUT (修改路由之前本地的分组) POSTROUTING (修改准备出去的分组）。<br>(3 )mangle表用来对指定的分组进行修改。它有2个内建规则: PREROUTING (修改路由之前进入的分组)和OUTPUT (修改路由之前本地的分组）。下面简单介绍ipables的常用配置。</p>\n<h3 id=\"1-查看iptables规则\"><a href=\"#1-查看iptables规则\" class=\"headerlink\" title=\"1.查看iptables规则\"></a>1.查看iptables规则</h3><p>查看当前的iptables策略，使用iptables -L命令，默认查看的是flter表的内容，如下。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191211121740844.png\" alt=\"7\"></p>\n<h3 id=\"2、设置chain策略\"><a href=\"#2、设置chain策略\" class=\"headerlink\" title=\"2、设置chain策略\"></a>2、设置chain策略</h3><p>对于filter表，默认的chain策略为ACCEPT, 可以通过以下命令修改chain 的策略。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">root@kali:~# iptables -P INPUT DROP\nroot@kali:~# iptables -P FORWARD DROP\nroot@kali:~# iptbales -P OUTPUT DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>以上命令配置将接收、转发和发出分组均丢弃，施行比较严格的分组管理。由于接收和<br>发分组均被设置为丢弃，当进一步配置其他规则的时候，需要注意针对INPUT和OUTPUT<br>分别配置，当然，如果信任本机器往外发分组，上面第 3条规则可不必配置。</p>\n<h3 id=\"3-清空已有规则\"><a href=\"#3-清空已有规则\" class=\"headerlink\" title=\"3.清空已有规则\"></a>3.清空已有规则</h3><p>可以用以下规则来清空已有的规则。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">root@kali:~# iptables -F<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h3 id=\"4-网口转发规则\"><a href=\"#4-网口转发规则\" class=\"headerlink\" title=\"4.网口转发规则\"></a>4.网口转发规则</h3><p>对于用作防火墙或网关的服务器，一个网口连接到公网，其他网口的分组转发到该网口<br>实现内网向公网通信，假设ethO连接内网，ethl 连接公网，配置规则如下。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">root@kali:~# iptables -A FORWARD -i eth0 -0 ethl -j ACCEPT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h3 id=\"5-端口转发规则\"><a href=\"#5-端口转发规则\" class=\"headerlink\" title=\"5.端口转发规则\"></a>5.端口转发规则</h3><p>命令将888端口的分组转发到22端口，因而通过888端口也可进行SSH连接。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">root@kali:~# iptables -t nat A PREROUTING ptep d 192 168.1.1 dport 888 1 DNAT -to 192. 168.1.1:22<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"6、DoS攻击防范\"><a href=\"#6、DoS攻击防范\" class=\"headerlink\" title=\"6、DoS攻击防范\"></a>6、DoS攻击防范</h3><p>利用拓展模块limit，还可以配置iptables规则，实现DoS攻击防范，如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">root@kali:~# iptables -A INPUT -p tcp -dport 80 -m limit -limit 25&#x2F;minute --limit-burst 100 -j ACCEPT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>–limit 25/minute 指示每分钟限制最大连接数为25 。</p>\n<p>–limit-burst 100 指示当总连接数超过100时，启动limit/minute限制。</p>\n<h2 id=\"常见的安全策略\"><a href=\"#常见的安全策略\" class=\"headerlink\" title=\"常见的安全策略\"></a>常见的安全策略</h2><p> Linux操作系统下有如下常用的安全策略。<br>密码长度、session超时时间、删除不用的账号和组，限制Root用户直接Telnet或rlogin、<br>SSHD登录。<br>检查是否存在除Root之外UID为0的用户，确保Root用户的系统路径中不包含父目录，<br>在非必要的情况下，不应包含组权限为777的目录。<br>检查操作系统Linux用户umask设置，检查重要目录和文件的权限，禁止除Root之外的<br>用户su操作，查找系统中任何人都有写权限的目录。<br>查找系统中没有属主的文件，查找系统中的隐藏文件，判断日志与审计是否合规，登录<br>超时设置，禁用不必要的服务。</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><p>[1]网络空间安全实战基础.陈铁民.北京.2018.2</p>\n","text":"Linux系统概述1、历史Linux操作系统诞生于1991年，它是Unix的一种典型克隆系统。它是一个基于POSIX和Unix的多用户、多任务、支持多线程和多CPU的操作系统，继承了Unix以网络为核心的设计是想，也是一个性能稳定的多用户网络操作系统。由Linus Torvald...","link":"","photos":[],"count_time":{"symbolsCount":"8k","symbolsTime":"7 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":36,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"Linux","slug":"Linux","count":11,"path":"api/tags/Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Linux%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">Linux系统概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%8E%86%E5%8F%B2\"><span class=\"toc-text\">1、历史</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%86%85%E6%A0%B8%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">2、内核简介</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%8F%91%E8%A1%8C%E7%89%88%E6%9C%AC\"><span class=\"toc-text\">3、发行版本</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4%E3%80%81%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">4、文件系统</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#OpenSSH%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">OpenSSH安全配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E7%A6%81%E6%AD%A2Root%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">1、禁止Root用户登录</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E9%99%90%E5%88%B6SSH%E9%AA%8C%E8%AF%81%E9%87%8D%E8%AF%95%E6%AC%A1%E6%95%B0\"><span class=\"toc-text\">2、限制SSH验证重试次数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81%E7%A6%81%E6%AD%A2%E8%AF%81%E4%B9%A6%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">3、禁止证书登录</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4%E3%80%81%E4%BD%BF%E7%94%A8%E8%AF%81%E4%B9%A6%E6%9B%BF%E4%BB%A3%E5%AF%86%E7%A0%81%E8%AE%A4%E8%AF%81\"><span class=\"toc-text\">4、使用证书替代密码认证</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5%E3%80%81%E5%9B%BE%E5%BD%A2%E7%AA%97%E5%8F%A3%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AE%B0%E5%BF%86%E5%AF%86%E7%A0%81%E7%9A%84%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">5、图形窗口客户端记忆密码的问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6%E3%80%81%E7%A6%81%E6%AD%A2SSH%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84\"><span class=\"toc-text\">6、禁止SSH端口映射</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7%E3%80%81IP%E5%9C%B0%E5%9D%80%E9%99%90%E5%88%B6\"><span class=\"toc-text\">7、IP地址限制</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Shell%E5%AE%89%E5%85%A8\"><span class=\"toc-text\">Shell安全</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81-history%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">1、.history文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E6%89%A7%E8%A1%8C%E6%9D%83%E9%99%90\"><span class=\"toc-text\">2、执行权限</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%92%8C%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">权限管理和控制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E6%9D%83%E9%99%90%E6%9F%A5%E7%9C%8B\"><span class=\"toc-text\">1、权限查看</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E7%AE%A1%E7%90%86%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">2、管理控制</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8\"><span class=\"toc-text\">文件系统安全</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%94%81%E5%AE%9A%E7%B3%BB%E7%BB%9F%E9%87%8D%E8%A6%81%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">1.锁定系统重要文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E6%A3%80%E6%9F%A5%E5%92%8C%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">2.文件权限检查和修改</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#iptables%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">iptables配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%9F%A5%E7%9C%8Biptables%E8%A7%84%E5%88%99\"><span class=\"toc-text\">1.查看iptables规则</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E8%AE%BE%E7%BD%AEchain%E7%AD%96%E7%95%A5\"><span class=\"toc-text\">2、设置chain策略</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%B8%85%E7%A9%BA%E5%B7%B2%E6%9C%89%E8%A7%84%E5%88%99\"><span class=\"toc-text\">3.清空已有规则</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E7%BD%91%E5%8F%A3%E8%BD%AC%E5%8F%91%E8%A7%84%E5%88%99\"><span class=\"toc-text\">4.网口转发规则</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E8%A7%84%E5%88%99\"><span class=\"toc-text\">5.端口转发规则</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6%E3%80%81DoS%E6%94%BB%E5%87%BB%E9%98%B2%E8%8C%83\"><span class=\"toc-text\">6、DoS攻击防范</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E8%A7%81%E7%9A%84%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5\"><span class=\"toc-text\">常见的安全策略</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\"><span class=\"toc-text\">参考文献</span></a></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"密码安全之公钥密码、散列算法、数字签名","uid":"e2abbcc65a824b1fa9ae0ab1c5718bf6","slug":"密码安全之公钥密码、散列算法、数字签名","date":"2020-03-09T07:54:15.000Z","updated":"2020-04-13T00:47:20.000Z","comments":true,"path":"api/articles/密码安全之公钥密码、散列算法、数字签名.json","keywords":"A1andNS","cover":null,"text":"密码安全之公钥密码、散列算法、数字签名上期文章密码安全之古典密码、对称密码链接：https://blog.csdn.net/qq_26139045/article/details/103153172密码开篇文章古典密码与现代密码的算法分类结构逻辑图：https://blog.cs...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":36,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"Crypto","slug":"Crypto","count":4,"path":"api/tags/Crypto.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"SQL注入简单入门","uid":"301fa19ea5e03cee262a69d587c44e7a","slug":"SQL注入简单入门","date":"2020-03-09T07:51:08.000Z","updated":"2020-04-13T00:46:44.000Z","comments":true,"path":"api/articles/SQL注入简单入门.json","keywords":"A1andNS","cover":[],"text":"写在前面谈到SQL注入，那么自然和数据库有很大的关系。先说数据库，数据库大致可以分为Access数据库、MySQL数据库、SQLServer数据库、Oracle数据库等。Access数据库是比较早期的应用于Web应用的数据库。但是近几年Access数据库的使用再逐渐地减少，这是因...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":36,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"},{"name":"SQL注入","slug":"SQL注入","count":3,"path":"api/tags/SQL注入.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}