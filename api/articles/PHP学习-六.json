{"title":"PHP学习(六)","uid":"f788d8271a603c16b39ea0a6ab3ddb7a","slug":"PHP学习-六","date":"2020-09-02T01:20:54.000Z","updated":"2020-09-02T15:59:18.000Z","comments":true,"path":"api/articles/PHP学习-六.json","keywords":"A1andNS","cover":null,"content":"<h2 id=\"PHP数组排序\"><a href=\"#PHP数组排序\" class=\"headerlink\" title=\"PHP数组排序\"></a>PHP数组排序</h2><h3 id=\"PHP-数组排序函数\"><a href=\"#PHP-数组排序函数\" class=\"headerlink\" title=\"PHP - 数组排序函数\"></a>PHP - 数组排序函数</h3><p>在本章中，我们将一一介绍下列 PHP 数组排序函数：</p>\n<ul>\n<li>sort() - 对数组进行升序排列</li>\n<li>rsort() - 对数组进行降序排列</li>\n<li>asort() - 根据关联数组的值，对数组进行升序排列</li>\n<li>ksort() - 根据关联数组的键，对数组进行升序排列</li>\n<li>arsort() - 根据关联数组的值，对数组进行降序排列</li>\n<li>krsort() - 根据关联数组的键，对数组进行降序排列</li>\n</ul>\n<p>还是挺好记的，规律在哪里，就是多几个字母。</p>\n<h4 id=\"用法：\"><a href=\"#用法：\" class=\"headerlink\" title=\"用法：\"></a>用法：</h4><p>函数名(数组名)；例如：<code>sort($array);</code></p>\n<h2 id=\"PHP超级全局变量\"><a href=\"#PHP超级全局变量\" class=\"headerlink\" title=\"PHP超级全局变量\"></a>PHP超级全局变量</h2><h3 id=\"PHP超级全局变量-1\"><a href=\"#PHP超级全局变量-1\" class=\"headerlink\" title=\"PHP超级全局变量\"></a>PHP超级全局变量</h3><p>PHP 超级全局变量列表:</p>\n<ul>\n<li>$GLOBALS</li>\n<li>$_SERVER</li>\n<li>$_REQUEST</li>\n<li>$_POST</li>\n<li>$_GET</li>\n<li>$_FILES</li>\n<li>$_ENV</li>\n<li>$_COOKIE</li>\n<li>$_SESSION</li>\n</ul>\n<h3 id=\"PHP-GLOBALS\"><a href=\"#PHP-GLOBALS\" class=\"headerlink\" title=\"PHP $GLOBALS\"></a>PHP $GLOBALS</h3><p>$GLOBALS是PHP的一个超级全局变量组，在一个PHP脚本的全部作用域中都可以访问。$GLOBALS是一个包含了全部变量的全局组合数组。变量的名字就是数组的键。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$x</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$y</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Z'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'x'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'y'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$Z</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"PHP-SERVER\"><a href=\"#PHP-SERVER\" class=\"headerlink\" title=\"PHP $_SERVER\"></a>PHP $_SERVER</h3><p>$_SERVER 是一个包含了诸如头信息(header)、路径(path)、以及脚本位置(script locations)等等信息的数组。</p>\n<p>下表列出了所有 $_SERVER 变量中的重要元素:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">元素/代码</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$_SERVER[‘PHP_SELF’]</td>\n<td align=\"left\">当前执行脚本的文件名，与 document root 有关。例如，在地址为 <a href=\"http://example.com/test.php/foo.bar\">http://example.com/test.php/foo.bar</a> 的脚本中使用 $<em>SERVER[‘PHP_SELF’] 将得到 /test.php/foo.bar。__FILE</em>_ 常量包含当前(例如包含)文件的完整路径和文件名。 从 PHP 4.3.0 版本开始，如果 PHP 以命令行模式运行，这个变量将包含脚本名。之前的版本该变量不可用。</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘GATEWAY_INTERFACE’]</td>\n<td align=\"left\">服务器使用的 CGI 规范的版本；例如，”CGI/1.1”。</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘SERVER_ADDR’]</td>\n<td align=\"left\">当前运行脚本所在的服务器的 IP 地址。</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘SERVER_NAME’]</td>\n<td align=\"left\">当前运行脚本所在的服务器的主机名。如果脚本运行于虚拟主机中，该名称是由那个虚拟主机所设置的值决定。(如: <a href=\"http://www.example.com/\">www.example.com</a>)</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘SERVER_SOFTWARE’]</td>\n<td align=\"left\">服务器标识字符串，在响应请求时的头信息中给出。 (如：Apache/2.2.24)</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘SERVER_PROTOCOL’]</td>\n<td align=\"left\">请求页面时通信协议的名称和版本。例如，”HTTP/1.0”。</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘REQUEST_METHOD’]</td>\n<td align=\"left\">访问页面使用的请求方法；例如，”GET”, “HEAD”，”POST”，”PUT”。</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘REQUEST_TIME’]</td>\n<td align=\"left\">请求开始时的时间戳。从 PHP 5.1.0 起可用。 (如：1377687496)</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘QUERY_STRING’]</td>\n<td align=\"left\">query string（查询字符串），如果有的话，通过它进行页面访问。</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘HTTP_ACCEPT’]</td>\n<td align=\"left\">当前请求头中 Accept: 项的内容，如果存在的话。</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘HTTP_ACCEPT_CHARSET’]</td>\n<td align=\"left\">当前请求头中 Accept-Charset: 项的内容，如果存在的话。例如：”iso-8859-1,*,utf-8”。</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘HTTP_HOST’]</td>\n<td align=\"left\">当前请求头中 Host: 项的内容，如果存在的话。</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘HTTP_REFERER’]</td>\n<td align=\"left\">引导用户代理到当前页的前一页的地址（如果存在）。由 user agent 设置决定。并不是所有的用户代理都会设置该项，有的还提供了修改 HTTP_REFERER 的功能。简言之，该值并不可信。)</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘HTTPS’]</td>\n<td align=\"left\">如果脚本是通过 HTTPS 协议被访问，则被设为一个非空的值。</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘REMOTE_ADDR’]</td>\n<td align=\"left\">浏览当前页面的用户的 IP 地址。</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘REMOTE_HOST’]</td>\n<td align=\"left\">浏览当前页面的用户的主机名。DNS 反向解析不依赖于用户的 REMOTE_ADDR。</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘REMOTE_PORT’]</td>\n<td align=\"left\">用户机器上连接到 Web 服务器所使用的端口号。</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘SCRIPT_FILENAME’]</td>\n<td align=\"left\">当前执行脚本的绝对路径。</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘SERVER_ADMIN’]</td>\n<td align=\"left\">该值指明了 Apache 服务器配置文件中的 SERVER_ADMIN 参数。如果脚本运行在一个虚拟主机上，则该值是那个虚拟主机的值。(如：<a href=\"mailto:&#x73;&#111;&#109;&#101;&#x6f;&#110;&#101;&#64;&#x65;&#120;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#46;&#x63;&#x6f;&#x6d;\">&#x73;&#111;&#109;&#101;&#x6f;&#110;&#101;&#64;&#x65;&#120;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#46;&#x63;&#x6f;&#x6d;</a>)</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘SERVER_PORT’]</td>\n<td align=\"left\">Web 服务器使用的端口。默认值为 “80”。如果使用 SSL 安全连接，则这个值为用户设置的 HTTP 端口。</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘SERVER_SIGNATURE’]</td>\n<td align=\"left\">包含了服务器版本和虚拟主机名的字符串。</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘PATH_TRANSLATED’]</td>\n<td align=\"left\">当前脚本所在文件系统（非文档根目录）的基本路径。这是在服务器进行虚拟到真实路径的映像后的结果。</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘SCRIPT_NAME’]</td>\n<td align=\"left\">包含当前脚本的路径。这在页面需要指向自己时非常有用。<strong>FILE</strong> 常量包含当前脚本(例如包含文件)的完整路径和文件名。</td>\n</tr>\n<tr>\n<td align=\"left\">$_SERVER[‘SCRIPT_URI’]</td>\n<td align=\"left\">URI 用来指定要访问的页面。例如 “/index.html”。</td>\n</tr>\n</tbody></table>\n<h3 id=\"PHP-REQUEST\"><a href=\"#PHP-REQUEST\" class=\"headerlink\" title=\"PHP $_REQUEST\"></a>PHP $_REQUEST</h3><p>用于收集HTML表单提交的数据。</p>\n<pre class=\"line-numbers language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">&lt;html&gt;\n&lt;body&gt;\n \n&lt;form method&#x3D;&quot;post&quot; action&#x3D;&quot;&lt;?php echo $_SERVER[&#39;PHP_SELF&#39;];?&gt;&quot;&gt;\nName: &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;fname&quot;&gt;\n&lt;input type&#x3D;&quot;submit&quot;&gt;\n&lt;&#x2F;form&gt;\n \n&lt;?php \n$name &#x3D; $_REQUEST[&#39;fname&#39;]; \necho $name; \n?&gt;\n \n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"PHP-POST\"><a href=\"#PHP-POST\" class=\"headerlink\" title=\"PHP $_POST\"></a>PHP $_POST</h3><p>这个被广泛应用于收集表单数据，在HTML form标签的指定属性：”method=post”</p>\n<pre class=\"line-numbers language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">&lt;html&gt;\n&lt;body&gt;\n \n&lt;form method&#x3D;&quot;post&quot; action&#x3D;&quot;&lt;?php echo $_SERVER[&#39;PHP_SELF&#39;];?&gt;&quot;&gt;\nName: &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;fname&quot;&gt;\n&lt;input type&#x3D;&quot;submit&quot;&gt;\n&lt;&#x2F;form&gt;\n \n&lt;?php \n$name &#x3D; $_POST[&#39;fname&#39;]; \necho $name; \n?&gt;\n \n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"PHP-GET\"><a href=\"#PHP-GET\" class=\"headerlink\" title=\"PHP $_GET\"></a>PHP $_GET</h3><p>也被广泛用于收集表单数据，在HTML form标签的指定属性：”method=get”</p>\n<p>$_GET也可以收集URL中发送的数据。</p>\n<p>用法：<code>$test = $GET[&quot;test&quot;];</code></p>\n<h2 id=\"PHP循环\"><a href=\"#PHP循环\" class=\"headerlink\" title=\"PHP循环\"></a>PHP循环</h2><p>PHP中提供了以下的循环语句：</p>\n<ul>\n<li><strong>while</strong> - 只要指定的条件成立，则循环执行代码块</li>\n<li><strong>do…while</strong> - 首先执行一次代码块，然后在指定的条件成立时重复这个循环</li>\n<li><strong>for</strong> - 循环执行代码块指定的次数</li>\n<li><strong>foreach</strong> - 根据数组中每个元素来循环代码块</li>\n</ul>\n<h3 id=\"while循环\"><a href=\"#while循环\" class=\"headerlink\" title=\"while循环\"></a>while循环</h3><p>while还是那个while每个语言基本都有，也都一样用法。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>条件<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t要执行的代码；\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"do…while语句\"><a href=\"#do…while语句\" class=\"headerlink\" title=\"do…while语句\"></a>do…while语句</h3><p>此语句会至少执行一次代码，然后检查条件，只要条件成立就会重复进行。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">do</span>\n<span class=\"token punctuation\">&#123;</span>\n\t要执行的代码；\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>条件<span class=\"token punctuation\">)</span>；<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"for循环\"><a href=\"#for循环\" class=\"headerlink\" title=\"for循环\"></a>for循环</h3><p>这个和C一样的写法：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>初始值；条件；增量<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    要执行的代码；\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"foreach循环\"><a href=\"#foreach循环\" class=\"headerlink\" title=\"foreach循环\"></a>foreach循环</h3><p>foreach用于遍历数组</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$array</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    要执行的代码；\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"PHP函数\"><a href=\"#PHP函数\" class=\"headerlink\" title=\"PHP函数\"></a>PHP函数</h2><p>PHP提供超过1000个内建函数</p>\n<h3 id=\"创建PHP函数\"><a href=\"#创建PHP函数\" class=\"headerlink\" title=\"创建PHP函数\"></a>创建PHP函数</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">functionName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 要执行的代码</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>PHP 函数准则：</p>\n<ul>\n<li>函数的名称应该提示出它的功能</li>\n<li>函数名称以字母或下划线开头（不能以数字开头）</li>\n</ul>\n<h3 id=\"参数、返回值\"><a href=\"#参数、返回值\" class=\"headerlink\" title=\"参数、返回值\"></a>参数、返回值</h3><p>这个和Python基本是一样的。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$y</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token variable\">$sum</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$x</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$y</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token keyword\">return</span> <span class=\"token variable\">$sum</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t\n\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"sum is:\"</span> <span class=\"token operator\">.</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"PHP魔术常量\"><a href=\"#PHP魔术常量\" class=\"headerlink\" title=\"PHP魔术常量\"></a>PHP魔术常量</h2><p>PHP向它运行的任何脚本提供了大量的预定义常量。</p>\n<p>不过很多常量都是由不同的扩展库定义的，只有在加载了这些扩展库时才会出现，或者动态加载后，或者在编译时已经包括进去了。</p>\n<p>有八个魔术常量它们的值随着它们在代码中的位置改变而改变。</p>\n<h3 id=\"LINE\"><a href=\"#LINE\" class=\"headerlink\" title=\"__LINE__\"></a>__LINE__</h3><p>它表示文件中当前行号</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'这是第'</span> <span class=\"token operator\">.</span> <span class=\"token constant\">__LINE__</span> <span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'行'</span>；\n<span class=\"token delimiter important\">?></span></span>\n//输出结果：这是第2行<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"FILE\"><a href=\"#FILE\" class=\"headerlink\" title=\"_FILE_\"></a>_<em>FILE</em>_</h3><p>文件的完整路径和文件名。如果用在被包含文件，就会返回被包含文件名。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'该文件位于'</span> <span class=\"token operator\">.</span> <span class=\"token constant\">__FILE__</span> <span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span>\n//该文件位于\\xx\\xxx\\index.php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"DIR\"><a href=\"#DIR\" class=\"headerlink\" title=\"_DIR_\"></a>_<em>DIR</em>_</h3><p>文件所在目录。如果被用在被包含文件中，就返回被包含文件所在目录。它相当于dirname(__FILE__)，除了根目录，其他都不会包含末尾的斜杠。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'该文件位于'</span> <span class=\"token operator\">.</span> <span class=\"token constant\">__DIR__</span> <span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span>\n//该文件位于\\xx\\xxx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"FUNCTION\"><a href=\"#FUNCTION\" class=\"headerlink\" title=\"_FUNCTION_\"></a>_<em>FUNCTION</em>_</h3><p>函数名称。返回该函数被定义时的名字。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'函数名为'</span><span class=\"token operator\">.</span> <span class=\"token constant\">__FUNCTION__</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span>\n//输出为：函数名为test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"CLASS\"><a href=\"#CLASS\" class=\"headerlink\" title=\"_CLASS_\"></a>_<em>CLASS</em>_</h3><p>类的名称。返回该类被定义时的名字。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">test</span><span class=\"token punctuation\">&#123;</span>\n    \t<span class=\"token keyword\">function</span> <span class=\"token function\">_print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    \t\t<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'类名：'</span> <span class=\"token operator\">.</span> <span class=\"token constant\">__CLASS__</span><span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    \t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"函数名为：\"</span> <span class=\"token operator\">.</span> <span class=\"token constant\">__FUNCTION__</span> <span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token variable\">$t</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$t</span><span class=\"token operator\">-></span><span class=\"token function\">_print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span>\n/*输出结果    \n类名为：test\n函数名为：_print\n*/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"TRAIT\"><a href=\"#TRAIT\" class=\"headerlink\" title=\"_TRAIT_\"></a>_<em>TRAIT</em>_</h3><p>Trait的名字，PHP从5.4开始，实现了代码复用的一个方法，称为trait。Trait名包括其被声明的作用区域。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Hello\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\t\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">trait</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword static-context\">parent</span><span class=\"token operator\">::</span><span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"world!\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">C</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">use</span> <span class=\"token package\">B</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$o</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">C</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$0</span><span class=\"token operator\">-></span><span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span>\n// Hello World!<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"METHOD\"><a href=\"#METHOD\" class=\"headerlink\" title=\"_METHOD_\"></a>_<em>METHOD</em>_</h3><p>返回类方法定义时的名字。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    \t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"函数名：\"</span> <span class=\"token operator\">.</span> <span class=\"token constant\">__METHOD__</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span>\n//函数名为test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"NAMESPACE\"><a href=\"#NAMESPACE\" class=\"headerlink\" title=\"_NAMESPACE_\"></a>_<em>NAMESPACE</em>_</h3><p>当前命名空间的名称(去核大小写)。此常量在编译时定义的。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token keyword\">namespace</span> <span class=\"token package\">MyProject</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'命名空间为：'</span> <span class=\"token operator\">.</span> <span class=\"token constant\">__NAMESPACE__</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span>\n//命名空间为：MyProject<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n","text":"PHP数组排序PHP - 数组排序函数在本章中，我们将一一介绍下列 PHP 数组排序函数： sort() - 对数组进行升序排列 rsort() - 对数组进行降序排列 asort() - 根据关联数组的值，对数组进行升序排列 ksort() - 根据关联数组的键，对数组进行升序...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"PHP","slug":"PHP","count":7,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":8,"path":"api/tags/PHP.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">PHP数组排序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">PHP - 数组排序函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">用法：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E8%B6%85%E7%BA%A7%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">PHP超级全局变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E8%B6%85%E7%BA%A7%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F-1\"><span class=\"toc-text\">PHP超级全局变量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-GLOBALS\"><span class=\"toc-text\">PHP $GLOBALS</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-SERVER\"><span class=\"toc-text\">PHP $_SERVER</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-REQUEST\"><span class=\"toc-text\">PHP $_REQUEST</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-POST\"><span class=\"toc-text\">PHP $_POST</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-GET\"><span class=\"toc-text\">PHP $_GET</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">PHP循环</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#while%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">while循环</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#do%E2%80%A6while%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">do…while语句</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#for%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">for循环</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#foreach%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">foreach循环</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">PHP函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BAPHP%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">创建PHP函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E6%95%B0%E3%80%81%E8%BF%94%E5%9B%9E%E5%80%BC\"><span class=\"toc-text\">参数、返回值</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E9%AD%94%E6%9C%AF%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">PHP魔术常量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#LINE\"><span class=\"toc-text\">__LINE__</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#FILE\"><span class=\"toc-text\">_FILE_</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DIR\"><span class=\"toc-text\">_DIR_</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#FUNCTION\"><span class=\"toc-text\">_FUNCTION_</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CLASS\"><span class=\"toc-text\">_CLASS_</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#TRAIT\"><span class=\"toc-text\">_TRAIT_</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#METHOD\"><span class=\"toc-text\">_METHOD_</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#NAMESPACE\"><span class=\"toc-text\">_NAMESPACE_</span></a></li></ol></li></ol>","author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"PHP学习(七)","uid":"b2b1874642f5ccef369c939a5b309ee0","slug":"PHP学习-七","date":"2020-09-03T02:54:29.000Z","updated":"2020-09-03T15:33:42.000Z","comments":true,"path":"api/articles/PHP学习-七.json","keywords":"A1andNS","cover":null,"text":"PHP命名空间PHP 命名空间可以解决以下两类问题： 用户编写的代码与PHP内部的类/函数/常量或第三方类/函数/常量之间的名字冲突。 为很长的标识符名称(通常是为了缓解第一类问题而定义的)创建一个别名（或简短）的名称，提高源代码的可读性。 定义命名空间命名空间通过关键字name...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"PHP","slug":"PHP","count":7,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":8,"path":"api/tags/PHP.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"PHP学习(五)","uid":"e46c728e6baeec6ace92d418c82481b9","slug":"PHP学习-五","date":"2020-09-01T09:03:26.000Z","updated":"2020-09-01T16:01:54.000Z","comments":true,"path":"api/articles/PHP学习-五.json","keywords":"A1andNS","cover":null,"text":"PHP字符串变量来看看字符串操作函数和运算符 PHP并置运算符在PHP中，只有一个字符串运算符。 并置运算符(.)用于把两个字符串连接起来。 我之前也用过，例如 &lt;?php $s1 = \"I am\"; $s2 = \"a boy\"; echo $s1.\" \".$s2; ?> ...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"PHP","slug":"PHP","count":7,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":8,"path":"api/tags/PHP.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}