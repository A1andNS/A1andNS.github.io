{"title":"Flask框架学习(二)","uid":"68cdd39de211787f0d193b4d136b8041","slug":"Flask框架学习-二","date":"2021-03-01T04:07:21.000Z","updated":"2021-04-21T16:00:11.353Z","comments":true,"path":"api/articles/Flask框架学习-二.json","keywords":"A1andNS","cover":null,"content":"<h2 id=\"Flask小应用\"><a href=\"#Flask小应用\" class=\"headerlink\" title=\"Flask小应用\"></a>Flask小应用</h2><p>最简单的Flask小程序就是hello world了，下面用flask写一个hello world：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">hello_world</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello World'</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Flask类的一个对象是我们的<strong>WSGI</strong>应用程序。Flask构造函数使用<strong>当前模块（__name __）</strong>的名称作为参数。</p>\n<p>Flask类的**route()**函数是一个装饰器，它告诉应用程序哪个URL应该调用相关的函数。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span>rule<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#rule 参数表示与该函数的URL绑定。</span>\n<span class=\"token comment\">#options 是要转发给基础Rule对象的参数列表。</span>\napp<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> debug<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#host:表示要监听的主机名，默认是127.0.0.1。如果要让服务器在外部可以使用就要设置为0.0.0.0</span>\n<span class=\"token comment\">#port:默认为使用5000，也可以按照需求自定义端口</span>\n<span class=\"token comment\">#debug:默认为False，如果设置为True，则提供调试信息</span>\n<span class=\"token comment\">#options:要转发到底层的Werkzeug服务器</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果程序还在开发调试过程中，可以开启调试模式，即设置debug为True，这样如果代码修改，服务器将会auto reload。</p>\n<h2 id=\"Flask路由\"><a href=\"#Flask路由\" class=\"headerlink\" title=\"Flask路由\"></a>Flask路由</h2><p>现在Web框架使用路由技术来帮助用户记住应用程序URL。可以直接访问所需的页面，而无需从主页导航。上面也提到了route()装饰器用于将URL绑定到函数。除了使用route来绑定路由和函数，还可以使用add_url_rule()来进行绑定。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">hello_word</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token string\">'hello world'</span>\napp<span class=\"token punctuation\">.</span>add_url_rule<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">,</span> hello_world<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#与下方写法目的上一样</span>\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/hello'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">hello_world</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'hello world'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Flask变量规则\"><a href=\"#Flask变量规则\" class=\"headerlink\" title=\"Flask变量规则\"></a>Flask变量规则</h2><p>通过向规则参数添加变量部分，可以动态构建URL。此变量部分标记为<code>&lt;variable-name&gt; </code>。它作为关键字参数传递给与规则相关联的函数。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/hello/&lt;name>'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">hello_name</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello %s!'</span> <span class=\"token operator\">%</span> name\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>debug <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果在URL访问<a href=\"http://127.0.0.1:5000/hello/A1andNS\">http://127.0.0.1:5000/hello/A1andNS</a></p>\n<p>浏览器将会输出：Hello A1andNS！</p>\n<p>这里的变量部分默认是str类型，当然也有其他的类型是可以用的。例如int、float、path类型都是可以的。而要接收这些类型的变量，见下方实例：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/blog/&lt;int:postID>'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">show_blog</span><span class=\"token punctuation\">(</span>postID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Blog Number $d'</span> <span class=\"token operator\">%</span> postID\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Flask的URL规则基于<strong>Werkzeug</strong>的路由模块。这确保形成的URL是唯一的，并且基于Apache规定的先例。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#Code 1:</span>\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/flask'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">hello_flask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello Flask'</span>\n<span class=\"token comment\">#Code 2:</span>\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/flask/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">hello_flask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello Flask'</span>\n<span class=\"token comment\">#这两种路由规则看着相同实际不同，Code1中的规则，让我们在浏览器中只有访问http://127.0.0.1:5000/flask才能成功，如果访问http://127.0.0.1:5000/flask/则会出现404 Not Found错误，但是如果是/flask/的写法，则是规范的URL，/flask或/flask/都是可以访问的。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Flask-URL构建\"><a href=\"#Flask-URL构建\" class=\"headerlink\" title=\"Flask URL构建\"></a><strong>Flask URL构建</strong></h2><p>**url_for()**函数对于动态构建特定函数的URL非常有用。该函数接受函数的名称作为第一个参数，以及一个或多个关键字参数，每个参数对应于URL的变量部分。</p>\n<p>以下脚本演示了如何使用**url_for()**函数：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> redirect<span class=\"token punctuation\">,</span> url_for\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/admin'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">hello_admin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello Admin'</span>\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/guest/&lt;guest>'</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">def</span> hello_guest<span class=\"token punctuation\">(</span>guest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello %s as Guest'</span> <span class=\"token operator\">%</span> guest\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/user/&lt;name>'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">hello_user</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">if</span> name <span class=\"token operator\">==</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>url_for<span class=\"token punctuation\">(</span><span class=\"token string\">'hello_admin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>url_for<span class=\"token punctuation\">(</span><span class=\"token string\">'hello_guest'</span><span class=\"token punctuation\">,</span>guest <span class=\"token operator\">=</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n   app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>debug <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>上述脚本有一个函数**user(name)**，它接受来自URL的参数的值。</p>\n<p>**User()<strong>函数检查接收的参数是否与</strong>‘admin’<strong>匹配。如果匹配，则使用</strong>url_for()<strong>将应用程序重定向到</strong>hello_admin()<strong>函数，否则重定向到将接收的参数作为guest参数传递给它的</strong>hello_guest()**函数。</p>\n<p>打开浏览器并输入URL - <strong><a href=\"http://localhost:5000/hello/admin\">http://localhost:5000/user/admin</a></strong></p>\n<p>浏览器中的应用程序响应是：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Hello Admin<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在浏览器中输入以下URL - <strong><a href=\"http://localhost:5000/hello/mvl\">http://localhost:5000/user/mvl</a></strong></p>\n<p>应用程序响应现在更改为：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Hello mvl as Guest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"Flask-HTTP方法\"><a href=\"#Flask-HTTP方法\" class=\"headerlink\" title=\"Flask HTTP方法\"></a>Flask HTTP方法</h2><p>Http协议是万维网中数据通信的基础。在该协议中定义了从指定URL检索数据的不同方法。</p>\n<p>下表总结了不同的http方法：</p>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法与描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td><strong>GET</strong>以未加密的形式将数据发送到服务器。最常见的方法。</td>\n</tr>\n<tr>\n<td>2</td>\n<td><strong>HEAD</strong>和GET方法相同，但没有响应体。</td>\n</tr>\n<tr>\n<td>3</td>\n<td><strong>POST</strong>用于将HTML表单数据发送到服务器。POST方法接收的数据不由服务器缓存。</td>\n</tr>\n<tr>\n<td>4</td>\n<td><strong>PUT</strong>用上传的内容替换目标资源的所有当前表示。</td>\n</tr>\n<tr>\n<td>5</td>\n<td><strong>DELETE</strong> 删除由URL给出的目标资源的所有当前表示。</td>\n</tr>\n</tbody></table>\n<p>Flask路由默认响应GET请求，如果需要添加其他的请求方式，可以通过为route()装饰器提供方法参数来更改。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这样就可以响应POST类型和GET类型两种类型的请求了。</p>\n<p>对于接受POST类型和GET类型传递的参数，则可以使用到两个方法。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#GET:</span>\nuser <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'nm'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#POST:</span>\nuser <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">(</span><span class=\"token string\">'nm'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Flask模板\"><a href=\"#Flask模板\" class=\"headerlink\" title=\"Flask模板\"></a>Flask模板</h2><p>实际上,视图函数有两个作用:</p>\n<ul>\n<li>处理业务逻辑</li>\n<li>返回响应内容</li>\n</ul>\n<p>在大型应用中,把业务逻辑和表现内容放在一起,会增加代码的复杂度和维护成本.</p>\n<ul>\n<li>模板其实是一个包含响应文本的文件,其中用占位符(变量)表示动态部分,告诉模板引擎其具体的值需要从使用的数据中获取</li>\n<li>使用真实值替换变量,再返回最终得到的字符串,这个过程称为’渲染’</li>\n<li>Flask 是使用 Jinja2 这个模板引擎来渲染模板</li>\n</ul>\n<p>使用模板的好处</p>\n<ul>\n<li>视图函数只负责业务逻辑和数据处理(业务逻辑方面)</li>\n<li>而模板则取到视图函数的数据结果进行展示(视图展示方面)</li>\n<li>代码结构清晰,耦合度低</li>\n</ul>\n<h3 id=\"模板基本使用\"><a href=\"#模板基本使用\" class=\"headerlink\" title=\"模板基本使用\"></a>模板基本使用</h3><p>在项目下创建templates文件加，用于存放所有的模板文件，并在目录下创建模板文件html文件。</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\ncontent\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>创建视图函数，将模板内容来进行渲染返回</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> render_template\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">'hello.html'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"模板变量\"><a href=\"#模板变量\" class=\"headerlink\" title=\"模板变量\"></a>模板变量</h3><p>代码中传入字符串，列表，字典到模板中</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> render_template\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 往模板中传入的数据</span>\n    my_str <span class=\"token operator\">=</span> <span class=\"token string\">'Hello Word'</span>\n    my_int <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n    my_array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span>\n    my_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'xiaoming'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">18</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">'hello.html'</span><span class=\"token punctuation\">,</span>\n                           my_str<span class=\"token operator\">=</span>my_str<span class=\"token punctuation\">,</span>\n                           my_int<span class=\"token operator\">=</span>my_int<span class=\"token punctuation\">,</span>\n                           my_array<span class=\"token operator\">=</span>my_array<span class=\"token punctuation\">,</span>\n                           my_dict<span class=\"token operator\">=</span>my_dict\n                           <span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>模板中代码</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  content\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>&#123;&#123; my_str &#125;&#125;\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>&#123;&#123; my_int &#125;&#125;\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>&#123;&#123; my_array &#125;&#125;\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>&#123;&#123; my_dict &#125;&#125;\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Flask静态文件\"><a href=\"#Flask静态文件\" class=\"headerlink\" title=\"Flask静态文件\"></a>Flask静态文件</h2><p>Web应用程序通常需要静态文件，例如<strong>javascript</strong>文件或支持网页显示的<strong>CSS</strong>文件。通常，配置Web服务器并为您提供这些服务，但在开发过程中，这些文件是从您的包或模块旁边的<em>static</em>文件夹中提供，它将在应用程序的**/static**中提供。</p>\n<p>下面就是从/static中获取hello.js脚本的方式。</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> <span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> \n         <span class=\"token attr-name\">src</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> <span class=\"token punctuation\">\"</span>&#123;&#123; url_for(<span class=\"token punctuation\">'</span>static<span class=\"token punctuation\">'</span>, filename = <span class=\"token punctuation\">'</span>hello.js<span class=\"token punctuation\">'</span>) &#125;&#125;<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n   \n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> <span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onclick</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> <span class=\"token punctuation\">\"</span>sayHello()<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> <span class=\"token punctuation\">\"</span>Say Hello<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n   \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Flask-Request对象\"><a href=\"#Flask-Request对象\" class=\"headerlink\" title=\"Flask Request对象\"></a>Flask Request对象</h2><p>来自客户端网页的数据作为全局请求对象发送到服务器。为了处理请求数据，应该从Flask模块导入。</p>\n<p>Request对象的重要属性如下所列：</p>\n<ul>\n<li><strong>Form</strong> - 它是一个字典对象，包含表单参数及其值的键和值对。</li>\n<li><strong>args</strong> - 解析查询字符串的内容，它是问号（？）之后的URL的一部分。</li>\n<li><strong>Cookies</strong> - 保存Cookie名称和值的字典对象。</li>\n<li><strong>files</strong> - 与上传文件有关的数据。</li>\n<li><strong>method</strong> - 当前请求方法。</li>\n</ul>\n<h2 id=\"Flask-将表单数据发送到模板\"><a href=\"#Flask-将表单数据发送到模板\" class=\"headerlink\" title=\"Flask 将表单数据发送到模板\"></a>Flask 将表单数据发送到模板</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/result'</span><span class=\"token punctuation\">,</span>methods <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>method <span class=\"token operator\">==</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">:</span>\n      result <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>form\n      <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">\"result.html\"</span><span class=\"token punctuation\">,</span>result <span class=\"token operator\">=</span> result<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>result.html:</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token name\">doctype</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span> <span class=\"token attr-name\">border</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> 1</span><span class=\"token punctuation\">></span></span>\n     &#123;% for key, value in result.items() %&#125;\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span> &#123;&#123; key &#125;&#125; <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span> &#123;&#123; value &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n &#123;% endfor %&#125;\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Flask-Cookies\"><a href=\"#Flask-Cookies\" class=\"headerlink\" title=\"Flask Cookies\"></a>Flask Cookies</h2><p>Cookie以文本文件的形式存储在客户端的计算机上。其目的是记住和跟踪与客户使用相关的数据，以获得更好的访问者体验和网站统计信息。</p>\n<p><strong>Request对象</strong>包含Cookie的属性。它是所有cookie变量及其对应值的字典对象，客户端已传输。除此之外，cookie还存储其网站的到期时间，路径和域名。</p>\n<p>在Flask中，对cookie的处理步骤为：</p>\n<h3 id=\"1-设置cookie：\"><a href=\"#1-设置cookie：\" class=\"headerlink\" title=\"1.设置cookie：\"></a>1.设置cookie：</h3><p>  设置cookie,默认有效期是临时cookie,浏览器关闭就失效</p>\n<p>  可以通过 max_age 设置有效期， 单位是秒</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">resp <span class=\"token operator\">=</span> make_response<span class=\"token punctuation\">(</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 设置响应体</span>\nresp<span class=\"token punctuation\">.</span>set_cookie<span class=\"token punctuation\">(</span><span class=\"token string\">\"A1andNS\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A1andNS\"</span><span class=\"token punctuation\">,</span> max_age<span class=\"token operator\">=</span><span class=\"token number\">3600</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-获取cookie\"><a href=\"#2-获取cookie\" class=\"headerlink\" title=\"2.获取cookie\"></a>2.获取cookie</h3><p>  获取cookie，通过request.cookies的方式， 返回的是一个字典，可以获取字典里的相应的值</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">cookie_1 <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>cookies<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"A1andNS\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"3-删除cookie\"><a href=\"#3-删除cookie\" class=\"headerlink\" title=\"3.删除cookie\"></a>3.删除cookie</h3><p>  这里的删除只是让cookie过期，并不是直接删除cookie</p>\n<p>  删除cookie，通过delete_cookie()的方式， 里面是cookie的名字</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">resp <span class=\"token operator\">=</span> make_response<span class=\"token punctuation\">(</span><span class=\"token string\">\"del success\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 设置响应体</span>\nresp<span class=\"token punctuation\">.</span>delete_cookie<span class=\"token punctuation\">(</span><span class=\"token string\">\"A1andNS\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>w3cschool实例：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> make_response<span class=\"token punctuation\">,</span> request\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/set_cookies\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">set_cookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    resp <span class=\"token operator\">=</span> make_response<span class=\"token punctuation\">(</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">)</span>\n    resp<span class=\"token punctuation\">.</span>set_cookie<span class=\"token punctuation\">(</span><span class=\"token string\">\"w3cshool\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w3cshool\"</span><span class=\"token punctuation\">,</span>max_age<span class=\"token operator\">=</span><span class=\"token number\">3600</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> resp\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/get_cookies\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_cookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cookie_1 <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>cookies<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"w3cshool\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 获取名字为Itcast_1对应cookie的值</span>\n    <span class=\"token keyword\">return</span> cookie_1\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/delete_cookies\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">delete_cookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    resp <span class=\"token operator\">=</span> make_response<span class=\"token punctuation\">(</span><span class=\"token string\">\"del success\"</span><span class=\"token punctuation\">)</span>\n    resp<span class=\"token punctuation\">.</span>delete_cookie<span class=\"token punctuation\">(</span><span class=\"token string\">\"w3cshool\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> resp\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>debug<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Flask会话\"><a href=\"#Flask会话\" class=\"headerlink\" title=\"Flask会话\"></a>Flask会话</h2><p>与Cookie不同，<strong>Session（会话）</strong>数据存储在服务器上。会话是客户端登录到服务器并注销服务器的时间间隔。需要在该会话中保存的数据会存储在服务器上的临时目录中。</p>\n<p>为每个客户端的会话分配<strong>会话ID</strong>。会话数据存储在cookie的顶部，服务器以加密方式对其进行签名。对于此加密，Flask应用程序需要一个定义的<strong>SECRET_KEY</strong>。</p>\n<p>Session对象也是一个字典对象，包含会话变量和关联值的键值对。</p>\n<p>例如，要设置一个**’username’**会话变量，请使用以下语句：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Session[‘username’] &#x3D; ’admin’<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>要释放会话变量，请使用**pop()**方法。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">session.pop(&#39;username&#39;, None)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>W3Cschool实例代码：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask\n\n<span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> render_template\n\n<span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> request\n\n<span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> make_response\n\n<span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> session<span class=\"token punctuation\">,</span> redirect<span class=\"token punctuation\">,</span> url_for<span class=\"token punctuation\">,</span> escape<span class=\"token punctuation\">,</span> request\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span>secret_key <span class=\"token operator\">=</span> <span class=\"token string\">'fkdjsafjdkfdlkjfadskjfadskljdsfklj'</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token string\">'username'</span> <span class=\"token keyword\">in</span> session<span class=\"token punctuation\">:</span>\n\n        username <span class=\"token operator\">=</span> session<span class=\"token punctuation\">[</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">]</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'登录用户名是:'</span> <span class=\"token operator\">+</span> username <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;br>'</span> <span class=\"token operator\">+</span> \\\n\n                 <span class=\"token string\">\"&lt;b>&lt;a href = '/logout'>点击这里注销&lt;/a>&lt;/b>\"</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"您暂未登录， &lt;br>&lt;a href = '/login'>&lt;/b>\"</span> <span class=\"token operator\">+</span> \\\n\n         <span class=\"token string\">\"点击这里登录&lt;/b>&lt;/a>\"</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span> methods <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>method <span class=\"token operator\">==</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">:</span>\n\n        session<span class=\"token punctuation\">[</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">[</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">]</span>\n\n        <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>url_for<span class=\"token punctuation\">(</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token triple-quoted-string string\">'''\n\n   &lt;form action = \"\" method = \"post\">\n\n      &lt;p>&lt;input type =\"text\" name =\"username\"/>&lt;/p>\n\n      &lt;p>&lt;input type =\"submit\" value =\"登录\"/>&lt;/p>\n\n   &lt;/form>\n\n   '''</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/logout'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">logout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n   <span class=\"token comment\"># remove the username from the session if it is there</span>\n\n   session<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n\n   <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>url_for<span class=\"token punctuation\">(</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n\n    app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>debug <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Flask重定向和错误\"><a href=\"#Flask重定向和错误\" class=\"headerlink\" title=\"Flask重定向和错误\"></a>Flask重定向和错误</h2><p>Flask类有一个**redirect()**函数。调用时，它返回一个响应对象，并将用户重定向到具有指定状态代码的另一个目标位置。</p>\n<p>**redirect()**函数的原型如下：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">Flask<span class=\"token punctuation\">.</span>redirect<span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">,</span> statuscode<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在上述函数中：</p>\n<ul>\n<li><p><strong>location</strong>参数是应该重定向响应的URL。</p>\n</li>\n<li><p><strong>statuscode</strong>发送到浏览器标头，默认为302。</p>\n</li>\n<li><p><strong>response</strong>参数用于实例化响应。</p>\n<p>以下状态代码已标准化：</p>\n<ul>\n<li>HTTP_300_MULTIPLE_CHOICES</li>\n<li>HTTP_301_MOVED_PERMANENTLY</li>\n<li>HTTP_302_FOUND</li>\n<li>HTTP_303_SEE_OTHER</li>\n<li>HTTP_304_NOT_MODIFIED</li>\n<li>HTTP_305_USE_PROXY</li>\n<li>HTTP_306_RESERVED</li>\n<li>HTTP_307_TEMPORARY_REDIRECT</li>\n</ul>\n<p><strong>默认状态</strong>代码为<strong>302</strong>，表示**’found’**。</p>\n</li>\n</ul>\n<p>Flask类具有带有错误代码的**abort()**函数。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Flask.abort(code)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>Code</strong>参数采用以下值之一：</p>\n<ul>\n<li><strong>400</strong> - 用于错误请求</li>\n<li><strong>401</strong> - 用于未身份验证的</li>\n<li><strong>403</strong> - Forbidden</li>\n<li><strong>404</strong> - 未找到</li>\n<li><strong>406</strong> - 表示不接受</li>\n<li><strong>415</strong> - 用于不支持的媒体类型</li>\n<li><strong>429</strong> - 请求过多</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>method <span class=\"token operator\">==</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">[</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'admin'</span> <span class=\"token punctuation\">:</span>\n         <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>url_for<span class=\"token punctuation\">(</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n         abort<span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>url_for<span class=\"token punctuation\">(</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Flask消息闪现\"><a href=\"#Flask消息闪现\" class=\"headerlink\" title=\"Flask消息闪现\"></a>Flask消息闪现</h2><p>一个好的基于 GUI 的应用程序会向用户提供有关交互的反馈。例如，桌面应用程序使用对话框或消息框，JavaScript 使用警报用于类似目的。</p>\n<p>在 Flask Web 应用程序中生成这样的信息性消息很容易。Flask 框架的闪现系统可以在一个视图中创建消息，并在名为 <strong>next</strong> 的视图函数中呈现它。</p>\n<p>Flask 模块包含 <strong>flash()</strong> 方法。它将消息传递给下一个请求，该请求通常是一个模板。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">flash<span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> category<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>其中，</p>\n<ul>\n<li><strong>message</strong> 参数是要闪现的实际消息。</li>\n<li><strong>category</strong> 参数是可选的。它可以是“error”，“info”或“warning”。</li>\n</ul>\n<p>模板调用 **get_flashed_messages()**。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">get_flashed_messages(with_categories, category_filter)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>两个参数都是可选的。如果接收到的消息具有类别，则第一个参数是元组。第二个参数仅用于显示特定消息。</p>\n<h2 id=\"Flask-文件上传\"><a href=\"#Flask-文件上传\" class=\"headerlink\" title=\"Flask 文件上传\"></a>Flask 文件上传</h2><p>在 Flask 中处理文件上传非常简单。它需要一个 HTML 表单，其 <code>enctype</code> 属性设置为“<code>multipart / form-data”</code>，将文件发布到 URL。URL 处理程序从 <code>request.files[]</code> 对象中提取文件，并将其保存到所需的位置。</p>\n<p>每个上传的文件首先会保存在服务器上的临时位置，然后将其实际保存到它的最终位置。目标文件的名称可以是硬编码的，也可以从 <code>request.files[file] </code>对象的<code>filename</code>属性中获取。但是，建议使用 <code>secure_filename()</code> 函数获取它的安全版本。</p>\n<p>可以在 Flask 对象的配置设置中定义默认上传文件夹的路径和上传文件的最大大小。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">app.config[‘UPLOAD_FOLDER’] 定义上传文件夹的路径 app.config[‘MAX_CONTENT_LENGTH’] 指定要上传的文件的最大大小（以字节为单位）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>例如</p>\n<p>编写upload.html:</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>File Upload<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://localhost:5000/uploader<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>POST<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">enctype</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>multipart/form-data<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">accept</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.jpg,.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>结合一下python后端来接收和保存文件</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/uploader'</span><span class=\"token punctuation\">,</span> methods <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">uploader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>method <span class=\"token operator\">==</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">:</span>\n      f <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">]</span>\n      f<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'UPLOAD_FOLDER'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>secure_filename<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'file uploaded successfully'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Flask扩展\"><a href=\"#Flask扩展\" class=\"headerlink\" title=\"Flask扩展\"></a>Flask扩展</h2><p>Flask通常被称为微框架，因为核心功能包括基于<strong>Werkzeug</strong>的WSGI和路由以及基于<strong>Jinja2</strong>的模板引擎。此外，Flask框架还支持cookie和会话，以及<strong>JSON</strong>，静态文件等Web帮助程序。显然，这不足以开发完整的Web应用程序。而Flask扩展就具备这样的功能<strong>。</strong>Flask扩展为Flask框架提供了可扩展性。</p>\n<p>有大量的Flask扩展可用。Flask扩展是一个Python模块，它向Flask应用程序添加了特定类型的支持。Flask Extension Registry（Flask扩展注册表）是一个可用的扩展目录。可以通过<strong>pip</strong>实用程序下载所需的扩展名。</p>\n<p>重要的Flask扩展：</p>\n<ul>\n<li><strong>Flask Mail</strong> - 为Flask应用程序提供SMTP接口</li>\n<li><strong>Flask WTF</strong> - 添加WTForms的渲染和验证</li>\n<li><strong>Flask SQLAlchemy</strong> - 为Flask应用程序添加SQLAlchemy支持</li>\n<li><strong>Flask Sijax</strong> - Sijax的接口 - Python/jQuery库，使AJAX易于在Web应用程序中使用</li>\n</ul>\n<p>每种类型的扩展通常提供有关其用法的大量文档。由于扩展是一个Python模块，因此需要导入它才能使用它。Flask扩展名通常命名为flask-foo。导入的操作如下：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask_foo <span class=\"token keyword\">import</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> function<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>flask 0.7后还可以使用：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask<span class=\"token punctuation\">.</span>ext <span class=\"token keyword\">import</span> foo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>对于这中用法，需要激活兼容性模块，可以用过运行flaskext_compat.py来安装：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> flaskext compat\nflaskext_compat<span class=\"token punctuation\">.</span>activete<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">from</span> flask<span class=\"token punctuation\">.</span>etx <span class=\"token keyword\">import</span> foo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"学习参考资料\"><a href=\"#学习参考资料\" class=\"headerlink\" title=\"学习参考资料\"></a>学习参考资料</h2><p>[1] <a href=\"https://www.w3cschool.cn/flask/\">https://www.w3cschool.cn/flask/</a> W3Cschool教程</p>\n","text":"Flask小应用最简单的Flask小程序就是hello world了，下面用flask写一个hello world： from flask import Flask app = Flask(__name__) @app.route('/') def hello_world(): ...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"Python学习","slug":"Python学习","count":19,"path":"api/categories/Python学习.json"}],"tags":[{"name":"Flask","slug":"Flask","count":2,"path":"api/tags/Flask.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Flask%E5%B0%8F%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">Flask小应用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Flask%E8%B7%AF%E7%94%B1\"><span class=\"toc-text\">Flask路由</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Flask%E5%8F%98%E9%87%8F%E8%A7%84%E5%88%99\"><span class=\"toc-text\">Flask变量规则</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Flask-URL%E6%9E%84%E5%BB%BA\"><span class=\"toc-text\">Flask URL构建</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Flask-HTTP%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">Flask HTTP方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Flask%E6%A8%A1%E6%9D%BF\"><span class=\"toc-text\">Flask模板</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E6%9D%BF%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">模板基本使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E6%9D%BF%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">模板变量</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Flask%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">Flask静态文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Flask-Request%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">Flask Request对象</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Flask-%E5%B0%86%E8%A1%A8%E5%8D%95%E6%95%B0%E6%8D%AE%E5%8F%91%E9%80%81%E5%88%B0%E6%A8%A1%E6%9D%BF\"><span class=\"toc-text\">Flask 将表单数据发送到模板</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Flask-Cookies\"><span class=\"toc-text\">Flask Cookies</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E8%AE%BE%E7%BD%AEcookie%EF%BC%9A\"><span class=\"toc-text\">1.设置cookie：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E8%8E%B7%E5%8F%96cookie\"><span class=\"toc-text\">2.获取cookie</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%88%A0%E9%99%A4cookie\"><span class=\"toc-text\">3.删除cookie</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Flask%E4%BC%9A%E8%AF%9D\"><span class=\"toc-text\">Flask会话</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Flask%E9%87%8D%E5%AE%9A%E5%90%91%E5%92%8C%E9%94%99%E8%AF%AF\"><span class=\"toc-text\">Flask重定向和错误</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Flask%E6%B6%88%E6%81%AF%E9%97%AA%E7%8E%B0\"><span class=\"toc-text\">Flask消息闪现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Flask-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0\"><span class=\"toc-text\">Flask 文件上传</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Flask%E6%89%A9%E5%B1%95\"><span class=\"toc-text\">Flask扩展</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%B9%A0%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\"><span class=\"toc-text\">学习参考资料</span></a></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Linux Shortcut Maker","uid":"de5be025e70b749bc5a62bb8d97cf520","slug":"Deepin-Shotcut-Maker","date":"2021-04-06T14:33:25.000Z","updated":"2021-04-14T11:30:37.280Z","comments":true,"path":"api/articles/Deepin-Shotcut-Maker.json","keywords":"A1andNS","cover":[],"text":"ProfileI have writen a blog about how to create a shortcut in Linux. The way to create a .desktop file was introduced by me in that blog art...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"资源教程","slug":"资源教程","count":7,"path":"api/categories/资源教程.json"}],"tags":[{"name":"Python","slug":"Python","count":23,"path":"api/tags/Python.json"},{"name":"Deepin","slug":"Deepin","count":2,"path":"api/tags/Deepin.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Python之pickle库学习","uid":"c480346b91894d7a42d60e2db7bccc10","slug":"Python之pickle库学习","date":"2021-02-03T01:23:23.000Z","updated":"2021-06-28T14:41:40.238Z","comments":true,"path":"api/articles/Python之pickle库学习.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200323233608.png","text":"前言以下内容主要是基于Python3的，Python2环境下序列化的用法和以下类似，但是序列化生成的结果与Python3环境下是不同的。Python 2的pickle内容从实例三开始。 什么是pickle库 Python标准库，只支持python的基本数据类型。 可以处理复杂的序...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"Python学习","slug":"Python学习","count":19,"path":"api/categories/Python学习.json"}],"tags":[{"name":"Python","slug":"Python","count":23,"path":"api/tags/Python.json"},{"name":"pickle","slug":"pickle","count":1,"path":"api/tags/pickle.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}