{"title":"Lua+Nginx搭建WAF","uid":"bd839c268cb45c5c23698cd90b30a351","slug":"Lua-Nginx搭建WAF","date":"2020-08-08T11:06:40.000Z","updated":"2020-08-09T01:25:28.000Z","comments":true,"path":"api/articles/Lua-Nginx搭建WAF.json","keywords":"A1andNS","cover":[],"content":"<h2 id=\"搭建报告\"><a href=\"#搭建报告\" class=\"headerlink\" title=\"搭建报告\"></a>搭建报告</h2><h3 id=\"一、-实验内容\"><a href=\"#一、-实验内容\" class=\"headerlink\" title=\"一、  实验内容\"></a>一、  实验内容</h3><p>（1） 实现一个Nginx+Lua的防火墙</p>\n<p>（2） 独立搭建一个完整的环境</p>\n<p>（3） 进行两种攻击sql攻击和xss</p>\n<p>（4） 拦截的效果展示</p>\n<p>（5） 提交报告</p>\n<h3 id=\"二、-实验环境\"><a href=\"#二、-实验环境\" class=\"headerlink\" title=\"二、  实验环境\"></a>二、  实验环境</h3><p>（1） Windows10主机、CentOS7虚拟机</p>\n<p>（2） Nginx、Lua、LuaJIT、ngx_devel_kit-0.3.1、lua-nginx-module-0.10.15</p>\n<h3 id=\"三、-环境搭建\"><a href=\"#三、-环境搭建\" class=\"headerlink\" title=\"三、  环境搭建\"></a>三、  环境搭建</h3><p><strong>Nginx:</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>–module:</strong></p>\n<p><code>ngx_devel_kit-0.3.1</code><strong>、</strong><code>lua-nginx-module-0.10.15</code></p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200809001808.png\" alt=\"1\"></p>\n<p><strong>Lua:</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200809001818.png\" alt=\"13\"></p>\n<p><strong>LuaJIT:</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200809001823.png\" alt=\"14\"></p>\n<p><strong>WAF:</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200809001830.png\" alt=\"15\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200809001832.png\" alt=\"16\"></p>\n<h3 id=\"四、-实验步骤\"><a href=\"#四、-实验步骤\" class=\"headerlink\" title=\"四、  实验步骤\"></a>四、  实验步骤</h3><h4 id=\"1、-下载、编译、安装nginx\"><a href=\"#1、-下载、编译、安装nginx\" class=\"headerlink\" title=\"1、   下载、编译、安装nginx\"></a>1、   下载、编译、安装nginx</h4><p>第一步是要安装好需要的编译环境。</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">yum <span class=\"token function\">install</span> gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel -y<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>接着就下载nginx的tar.gz包，在包所在目录使用tar命令解压包，进入nginx目录中，执行编译操作（注意应该在root权限下执行./configure操作。然后编译安装（make &amp;&amp; make install）。</p>\n<h4 id=\"2、-配置systemctl\"><a href=\"#2、-配置systemctl\" class=\"headerlink\" title=\"2、   配置systemctl\"></a>2、   配置systemctl</h4><p>因为CentOS7开始就使用systemctl了，所以用它来添加自定义系统服务。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Vim &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;nginx.service,编辑内容为：\n\n[Unit]\n\nDescription&#x3D;nginx - high performance web server\n\nDocumentation&#x3D;http:&#x2F;&#x2F;nginx.org&#x2F;en&#x2F;docs&#x2F;\n\nAfter&#x3D;network-online.target remote-fs.target nss-lookup.target\n\nWants&#x3D;network-online.target\n\n \n\n[Service]\n\nType&#x3D;forking\n\nPIDFile&#x3D;&#x2F;var&#x2F;run&#x2F;nginx.pid\n\nExecStart&#x3D;&#x2F;usr&#x2F;sbin&#x2F;nginx -c &#x2F;etc&#x2F;nginx&#x2F;nginx.conf\n\nExecReload&#x3D;&#x2F;bin&#x2F;kill -s HUP $MAINPID\n\nExecStop&#x3D;&#x2F;bin&#x2F;kill -s TERM $MAINPID\n\n \n\n[Install]\n\nWantedBy&#x3D;multi-user.target\n\nVim &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;nginx-debug.service,编辑为：\n\n[Unit]\n\nDescription&#x3D;nginx - high performance web server\n\nDocumentation&#x3D;http:&#x2F;&#x2F;nginx.org&#x2F;en&#x2F;docs&#x2F;\n\nAfter&#x3D;network-online.target remote-fs.target nss-lookup.target\n\nWants&#x3D;network-online.target\n\n \n\n[Service]\n\nType&#x3D;forking\n\nPIDFile&#x3D;&#x2F;var&#x2F;run&#x2F;nginx.pid\n\nExecStart&#x3D;&#x2F;usr&#x2F;sbin&#x2F;nginx-debug -c &#x2F;etc&#x2F;nginx&#x2F;nginx.conf\n\nExecReload&#x3D;&#x2F;bin&#x2F;kill -s HUP $MAINPID\n\nExecStop&#x3D;&#x2F;bin&#x2F;kill -s TERM $MAINPID\n\n \n\n[Install]\n\nWantedBy&#x3D;multi-user.target<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>编辑结束后重载一下systemctl：systemctl daemon-reload</p>\n<h4 id=\"3、-放行端口\"><a href=\"#3、-放行端口\" class=\"headerlink\" title=\"3、   放行端口\"></a>3、   放行端口</h4><p><code>firewall-cmd –-zone=public –-add-port=80/tcp –permanent</code>来放行80端口，这样才能正常访问web。</p>\n<p>接着使用<code>firewall-cmd –-reload</code>，重载防火墙，让规则生效。</p>\n<h4 id=\"4、-设置开机启动\"><a href=\"#4、-设置开机启动\" class=\"headerlink\" title=\"4、   设置开机启动\"></a>4、   设置开机启动</h4><p><code>systemctl enable nginx</code>这样就可以开机自启nginx服务了。</p>\n<p><code>useradd -s /sbin/nologin -M nginx</code>这一步很重要，没做后面可能会遇到报错情况。</p>\n<p><code>systemctl start nginx</code>这样就启动了nginx服务。</p>\n<p>想要确认服务启动，可以通过<code>ps -aux | grep nginx</code>来查询进程，进程中有我们要的nginx就ok了。</p>\n<h4 id=\"5、-下载、编译、安装Lua模块\"><a href=\"#5、-下载、编译、安装Lua模块\" class=\"headerlink\" title=\"5、   下载、编译、安装Lua模块\"></a>5、   下载、编译、安装Lua模块</h4><p><code>Yum install lua lua-devel -y</code>首先安装所需要的库。</p>\n<p>接着就去下载、编译、安装LuaJIT：</p>\n<p><code>make install PREFIX=/usr/local/LuaJIT </code> //编译安装</p>\n<p>为它添加环境变量：</p>\n<p><code>export LUAJIT_LIB=/usr/local/LuaJIT/lib</code></p>\n<p><code>export LUAJIT_INC=/usr/local/LuaJIT/include/luajit-2.0</code></p>\n<p>加载lua库岛ld.so.conf文件里：</p>\n<p><code>echo &quot;/usr/local/LuaJIT/lib&quot; &gt;&gt; /etc/ld.so.conf</code></p>\n<p>确认添加进去后执行ldconfig，加载入缓存。</p>\n<p>下载<code>ngx_devel_kit</code> 和 <code>lua-nginx-module``模块，在nginx解压文件中重新编译安装一下。</code></p>\n<p>在root模式下，向配置命令中加入<code>--add-module=../ngx_devel_kit-0.3.1 --add-module=../lua-nginx-module-0.10.15</code>既可以添加相关模块。<br>之后就是一样的<code>make &amp;&amp; make install</code>。<br>稍微验证一下Lua模块是否工作就可以了。</p>\n<h4 id=\"6、-防火墙搭建\"><a href=\"#6、-防火墙搭建\" class=\"headerlink\" title=\"6、   防火墙搭建\"></a>6、   防火墙搭建</h4><p>使用了github仓库里的一个开源<code>ngx_lua_waf</code>项目。项目地址：<code>https://github.com/loveshell/ngx_lua_waf</code>使用git克隆到本地，通过mv命令移到nginx的waf目录下。<br>下面就开始对waf进行必要配置，配置config.lua文件，开启CCDeny等选项，设置日志保存路径。<br>在nginx.config文件里配置http下内容，添加</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">lua_package_path &quot;&#x2F;etc&#x2F;nginx&#x2F;waf&#x2F;?.lua&quot;;\nlua_shared_dict limit 10m;\ninit_by_lua_file &#x2F;etc&#x2F;nginx&#x2F;waf&#x2F;init.lua;\naccess_by_lua_file &#x2F;etc&#x2F;nginx&#x2F;waf&#x2F;waf.lua;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>配置语法检查<code>nginx -t -c /etc/nginx/nginx.conf</code><br>然后重载配置<code>nginx -s reload -c /etc/nginx/nginx.conf</code><br>但是有时候并不会生效，还需要<code>systemctl restart nginx</code>才行。<br>配置防火墙过滤规则，到wafconf目录下配置相应的args、url、post、whitelist、user-agent等文件中添加规则即可。</p>\n<p>配置语法检查<code>nginx -t -c /etc/nginx/nginx.conf</code><br>然后重载配置<code>nginx -s reload -c /etc/nginx/nginx.conf</code><br>但是有时候并不会生效，还需要systemctl restart nginx才行。<br>配置防火墙过滤规则，到wafconf目录下配置相应的args、url、post、whitelist、user-agent等文件中添加规则即可。</p>\n<h3 id=\"五、-拦截效果\"><a href=\"#五、-拦截效果\" class=\"headerlink\" title=\"五、  拦截效果\"></a>五、  拦截效果</h3><h4 id=\"（1）-SQL注入\"><a href=\"#（1）-SQL注入\" class=\"headerlink\" title=\"（1） SQL注入\"></a>（1） SQL注入</h4><h5 id=\"1-浏览器\"><a href=\"#1-浏览器\" class=\"headerlink\" title=\"1)浏览器\"></a>1)浏览器</h5><p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200809001839.png\" alt=\"2\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200809001852.png\" alt=\"3\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200809001844.png\" alt=\"4\"></p>\n<h5 id=\"2）服务器log\"><a href=\"#2）服务器log\" class=\"headerlink\" title=\"2）服务器log\"></a>2）服务器log</h5><p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200809001913.png\" alt=\"5\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200809001919.png\" alt=\"6\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200809001921.png\" alt=\"7\"></p>\n<h4 id=\"（2）-XSS\"><a href=\"#（2）-XSS\" class=\"headerlink\" title=\"（2） XSS\"></a>（2） XSS</h4><h5 id=\"1）浏览器：\"><a href=\"#1）浏览器：\" class=\"headerlink\" title=\"1）浏览器：\"></a>1）浏览器：</h5><p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200809001929.png\" alt=\"8\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200809002251.png\" alt=\"9\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200809002309.png\" alt=\"10\"></p>\n<h5 id=\"2）服务器log：\"><a href=\"#2）服务器log：\" class=\"headerlink\" title=\"2）服务器log：\"></a>2）服务器log：</h5><p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200809002315.png\" alt=\"11\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo@latest/img/20200809002317.png\" alt=\"12\"></p>\n<h3 id=\"参考链接：\"><a href=\"#参考链接：\" class=\"headerlink\" title=\"参考链接：\"></a>参考链接：</h3><p><a href=\"https://www.cnblogs.com/dotnetcrazy/p/11306202.html#_map16\">https://www.cnblogs.com/dotnetcrazy/p/11306202.html#_map16</a></p>\n","text":"搭建报告一、 实验内容（1） 实现一个Nginx+Lua的防火墙 （2） 独立搭建一个完整的环境 （3） 进行两种攻击sql攻击和xss （4） 拦截的效果展示 （5） 提交报告 二、 实验环境（1） Windows10主机、CentOS7虚拟机 （2） Nginx、Lua、Lu...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"蓝队","slug":"蓝队","count":1,"path":"api/categories/蓝队.json"}],"tags":[{"name":"蓝队","slug":"蓝队","count":1,"path":"api/tags/蓝队.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%90%AD%E5%BB%BA%E6%8A%A5%E5%91%8A\"><span class=\"toc-text\">搭建报告</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81-%E5%AE%9E%E9%AA%8C%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">一、  实验内容</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81-%E5%AE%9E%E9%AA%8C%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">二、  实验环境</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">三、  环境搭建</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81-%E5%AE%9E%E9%AA%8C%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">四、  实验步骤</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81-%E4%B8%8B%E8%BD%BD%E3%80%81%E7%BC%96%E8%AF%91%E3%80%81%E5%AE%89%E8%A3%85nginx\"><span class=\"toc-text\">1、   下载、编译、安装nginx</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81-%E9%85%8D%E7%BD%AEsystemctl\"><span class=\"toc-text\">2、   配置systemctl</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3%E3%80%81-%E6%94%BE%E8%A1%8C%E7%AB%AF%E5%8F%A3\"><span class=\"toc-text\">3、   放行端口</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4%E3%80%81-%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8\"><span class=\"toc-text\">4、   设置开机启动</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5%E3%80%81-%E4%B8%8B%E8%BD%BD%E3%80%81%E7%BC%96%E8%AF%91%E3%80%81%E5%AE%89%E8%A3%85Lua%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">5、   下载、编译、安装Lua模块</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6%E3%80%81-%E9%98%B2%E7%81%AB%E5%A2%99%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">6、   防火墙搭建</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81-%E6%8B%A6%E6%88%AA%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">五、  拦截效果</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EF%BC%881%EF%BC%89-SQL%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">（1） SQL注入</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-%E6%B5%8F%E8%A7%88%E5%99%A8\"><span class=\"toc-text\">1)浏览器</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%EF%BC%89%E6%9C%8D%E5%8A%A1%E5%99%A8log\"><span class=\"toc-text\">2）服务器log</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EF%BC%882%EF%BC%89-XSS\"><span class=\"toc-text\">（2） XSS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%EF%BC%89%E6%B5%8F%E8%A7%88%E5%99%A8%EF%BC%9A\"><span class=\"toc-text\">1）浏览器：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%EF%BC%89%E6%9C%8D%E5%8A%A1%E5%99%A8log%EF%BC%9A\"><span class=\"toc-text\">2）服务器log：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5%EF%BC%9A\"><span class=\"toc-text\">参考链接：</span></a></li></ol></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"PHP学习（二）","uid":"7accb6e3c1142903ce150ec097962cd3","slug":"PHP学习（二）","date":"2020-08-09T15:04:30.000Z","updated":"2020-08-26T09:10:20.000Z","comments":true,"path":"api/articles/PHP学习（二）.json","keywords":"A1andNS","cover":[],"text":"安装和配置PHP安装PHP语言PHP底层是C语言实现 1、官网下载PHP安装包 2、解压放到服务目录下就好了 PHP安装目录 解析PHP的命令：php -f xxxx.php Apache加载PHP模块1、Apache主配置文件中加载对应的PHP提供的模块LoadModule p...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"PHP","slug":"PHP","count":7,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":8,"path":"api/tags/PHP.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"PHP学习（一）","uid":"a391b63f847545ca1acc39698f975b5f","slug":"PHP学习（一）","date":"2020-08-08T06:28:34.000Z","updated":"2020-08-26T08:31:10.000Z","comments":true,"path":"api/articles/PHP学习（一）.json","keywords":"A1andNS","cover":[],"text":"先学习的pyhton，PHP落下了，虽然大体上看得懂，还是觉得不太稳，所以整体学习一下。 什么是PHP？ PHP（全称：PHP：Hypertext Preprocessor，即”PHP：超文本预处理器”）是一种通用开源脚本语言。 PHP 脚本在服务器上执行。 PHP 可免费下载使...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"PHP","slug":"PHP","count":7,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":8,"path":"api/tags/PHP.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}