{"title":"PHP学习(五)","uid":"e46c728e6baeec6ace92d418c82481b9","slug":"PHP学习-五","date":"2020-09-01T09:03:26.000Z","updated":"2020-09-01T16:01:54.000Z","comments":true,"path":"api/articles/PHP学习-五.json","keywords":"A1andNS","cover":null,"content":"<h2 id=\"PHP字符串变量\"><a href=\"#PHP字符串变量\" class=\"headerlink\" title=\"PHP字符串变量\"></a>PHP字符串变量</h2><p>来看看字符串操作函数和运算符</p>\n<h3 id=\"PHP并置运算符\"><a href=\"#PHP并置运算符\" class=\"headerlink\" title=\"PHP并置运算符\"></a>PHP并置运算符</h3><p>在PHP中，只有一个字符串运算符。</p>\n<p>并置运算符(.)用于把两个字符串连接起来。</p>\n<p>我之前也用过，例如</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n  <span class=\"token variable\">$s1</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"I am\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token variable\">$s2</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"a boy\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">echo</span> <span class=\"token variable\">$s1</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$s2</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span>\n//输出结果应该为I am a boy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这就是用来实现字符串拼接。</p>\n<h3 id=\"PHP的strlen-函数\"><a href=\"#PHP的strlen-函数\" class=\"headerlink\" title=\"PHP的strlen()函数\"></a>PHP的strlen()函数</h3><p>如果在某些情况下可以知道字符串的长度，将会为后面的工作起到重要作用。</p>\n<p><code>strlen()</code>函数返回字符串的长度(单位是字节数)</p>\n<p>用法：strlen($txt)或strlen(“xxxxxxx”)</p>\n<h3 id=\"PHP的strpos-函数\"><a href=\"#PHP的strpos-函数\" class=\"headerlink\" title=\"PHP的strpos()函数\"></a>PHP的strpos()函数</h3><p>strpos()函数用于在字符串内查找一个字符或一段指定的文本。</p>\n<p>如果在字符串中存在指定字符或文本，就会返回第一个匹配的字符位置。如果未找到匹配，则返回FALSE</p>\n<p>下面的实例在字符串”Hello world!”中查找文本”world”:</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Hello world!\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>在上面的实例中，字符串world的位置是6</p>\n<p>这是两个常见的函数，其他函数就要去查一查了</p>\n<h3 id=\"PHP运算符\"><a href=\"#PHP运算符\" class=\"headerlink\" title=\"PHP运算符\"></a>PHP运算符</h3><p>赋值运算符=用于给变量赋值</p>\n<p>算术运算符+用于把值加在一起</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">运算符</th>\n<th align=\"left\">名称</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">实例</th>\n<th align=\"left\">结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">x + y</td>\n<td align=\"left\">加</td>\n<td align=\"left\">x 和 y 的和</td>\n<td align=\"left\">2 + 2</td>\n<td align=\"left\">4</td>\n</tr>\n<tr>\n<td align=\"left\">x - y</td>\n<td align=\"left\">减</td>\n<td align=\"left\">x 和 y 的差</td>\n<td align=\"left\">5 - 2</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\">x * y</td>\n<td align=\"left\">乘</td>\n<td align=\"left\">x 和 y 的积</td>\n<td align=\"left\">5 * 2</td>\n<td align=\"left\">10</td>\n</tr>\n<tr>\n<td align=\"left\">x / y</td>\n<td align=\"left\">除</td>\n<td align=\"left\">x 和 y 的商</td>\n<td align=\"left\">15 / 5</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\">x % y</td>\n<td align=\"left\">模（除法的余数）</td>\n<td align=\"left\">x 除以 y 的余数</td>\n<td align=\"left\">5 % 2 10 % 8 10 % 2</td>\n<td align=\"left\">1 2 0</td>\n</tr>\n<tr>\n<td align=\"left\">- x</td>\n<td align=\"left\">取反</td>\n<td align=\"left\">x 取反</td>\n<td align=\"left\"><code>&lt;?php $x =2; echo -$x; ?&gt;</code></td>\n<td align=\"left\">-2</td>\n</tr>\n<tr>\n<td align=\"left\">a . b</td>\n<td align=\"left\">并置</td>\n<td align=\"left\">连接两个字符串</td>\n<td align=\"left\">“Hi” . “Ha”</td>\n<td align=\"left\">HiHa</td>\n</tr>\n</tbody></table>\n<h3 id=\"PHP赋值运算符\"><a href=\"#PHP赋值运算符\" class=\"headerlink\" title=\"PHP赋值运算符\"></a>PHP赋值运算符</h3><table>\n<thead>\n<tr>\n<th align=\"left\">运算符</th>\n<th align=\"left\">等同于</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">x = y</td>\n<td align=\"left\">x = y</td>\n<td align=\"left\">左操作数被设置为右侧表达式的值</td>\n</tr>\n<tr>\n<td align=\"left\">x += y</td>\n<td align=\"left\">x = x + y</td>\n<td align=\"left\">加</td>\n</tr>\n<tr>\n<td align=\"left\">x -= y</td>\n<td align=\"left\">x = x - y</td>\n<td align=\"left\">减</td>\n</tr>\n<tr>\n<td align=\"left\">x *= y</td>\n<td align=\"left\">x = x * y</td>\n<td align=\"left\">乘</td>\n</tr>\n<tr>\n<td align=\"left\">x /= y</td>\n<td align=\"left\">x = x / y</td>\n<td align=\"left\">除</td>\n</tr>\n<tr>\n<td align=\"left\">x %= y</td>\n<td align=\"left\">x = x % y</td>\n<td align=\"left\">模（除法的余数）</td>\n</tr>\n<tr>\n<td align=\"left\">a .= b</td>\n<td align=\"left\">a = a . b</td>\n<td align=\"left\">连接两个字符串</td>\n</tr>\n</tbody></table>\n<h3 id=\"PHP-递增-递减运算符\"><a href=\"#PHP-递增-递减运算符\" class=\"headerlink\" title=\"PHP 递增/递减运算符\"></a>PHP 递增/递减运算符</h3><table>\n<thead>\n<tr>\n<th align=\"left\">运算符</th>\n<th align=\"left\">名称</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">++ x</td>\n<td align=\"left\">预递增</td>\n<td align=\"left\">x 加 1，然后返回 x</td>\n</tr>\n<tr>\n<td align=\"left\">x ++</td>\n<td align=\"left\">后递增</td>\n<td align=\"left\">返回 x，然后 x 加 1</td>\n</tr>\n<tr>\n<td align=\"left\">– x</td>\n<td align=\"left\">预递减</td>\n<td align=\"left\">x 减 1，然后返回 x</td>\n</tr>\n<tr>\n<td align=\"left\">x –</td>\n<td align=\"left\">后递减</td>\n<td align=\"left\">返回 x，然后 x 减 1</td>\n</tr>\n</tbody></table>\n<h3 id=\"PHP比较运算符\"><a href=\"#PHP比较运算符\" class=\"headerlink\" title=\"PHP比较运算符\"></a>PHP比较运算符</h3><table>\n<thead>\n<tr>\n<th align=\"left\">运算符</th>\n<th align=\"left\">名称</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">x == y</td>\n<td align=\"left\">等于</td>\n<td align=\"left\">如果 x 等于 y，则返回 true</td>\n<td align=\"left\">5==8 返回 false</td>\n</tr>\n<tr>\n<td align=\"left\">x === y</td>\n<td align=\"left\">绝对等于</td>\n<td align=\"left\">如果 x 等于 y，且它们类型相同，则返回 true</td>\n<td align=\"left\">5===”5” 返回 false</td>\n</tr>\n<tr>\n<td align=\"left\">x != y</td>\n<td align=\"left\">不等于</td>\n<td align=\"left\">如果 x 不等于 y，则返回 true</td>\n<td align=\"left\">5!=8 返回 true</td>\n</tr>\n<tr>\n<td align=\"left\">x &lt;&gt; y</td>\n<td align=\"left\">不等于</td>\n<td align=\"left\">如果 x 不等于 y，则返回 true</td>\n<td align=\"left\">5&lt;&gt;8 返回 true</td>\n</tr>\n<tr>\n<td align=\"left\">x !== y</td>\n<td align=\"left\">绝对不等于</td>\n<td align=\"left\">如果 x 不等于 y，或它们类型不相同，则返回 true</td>\n<td align=\"left\">5!==”5” 返回 true</td>\n</tr>\n<tr>\n<td align=\"left\">x &gt; y</td>\n<td align=\"left\">大于</td>\n<td align=\"left\">如果 x 大于 y，则返回 true</td>\n<td align=\"left\">5&gt;8 返回 false</td>\n</tr>\n<tr>\n<td align=\"left\">x &lt; y</td>\n<td align=\"left\">小于</td>\n<td align=\"left\">如果 x 小于 y，则返回 true</td>\n<td align=\"left\">5&lt;8 返回 true</td>\n</tr>\n<tr>\n<td align=\"left\">x &gt;= y</td>\n<td align=\"left\">大于等于</td>\n<td align=\"left\">如果 x 大于或者等于 y，则返回 true</td>\n<td align=\"left\">5&gt;=8 返回 false</td>\n</tr>\n<tr>\n<td align=\"left\">x &lt;= y</td>\n<td align=\"left\">小于等于</td>\n<td align=\"left\">如果 x 小于或者等于 y，则返回 true</td>\n<td align=\"left\">5&lt;=8 返回 true</td>\n</tr>\n</tbody></table>\n<h3 id=\"PHP-逻辑运算符\"><a href=\"#PHP-逻辑运算符\" class=\"headerlink\" title=\"PHP 逻辑运算符\"></a>PHP 逻辑运算符</h3><table>\n<thead>\n<tr>\n<th align=\"left\">运算符</th>\n<th align=\"left\">名称</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">x and y</td>\n<td align=\"left\">与</td>\n<td align=\"left\">如果 x 和 y 都为 true，则返回 true</td>\n<td align=\"left\">x=6 y=3 (x &lt; 10 and y &gt; 1) 返回 true</td>\n</tr>\n<tr>\n<td align=\"left\">x or y</td>\n<td align=\"left\">或</td>\n<td align=\"left\">如果 x 和 y 至少有一个为 true，则返回 true</td>\n<td align=\"left\">x=6 y=3 (x==6 or y==5) 返回 true</td>\n</tr>\n<tr>\n<td align=\"left\">x xor y</td>\n<td align=\"left\">异或</td>\n<td align=\"left\">如果 x 和 y 有且仅有一个为 true，则返回 true</td>\n<td align=\"left\">x=6 y=3 (x==6 xor y==3) 返回 false</td>\n</tr>\n<tr>\n<td align=\"left\">x &amp;&amp; y</td>\n<td align=\"left\">与</td>\n<td align=\"left\">如果 x 和 y 都为 true，则返回 true</td>\n<td align=\"left\">x=6 y=3 (x &lt; 10 &amp;&amp; y &gt; 1) 返回 true</td>\n</tr>\n<tr>\n<td align=\"left\">x || y</td>\n<td align=\"left\">或</td>\n<td align=\"left\">如果 x 和 y 至少有一个为 true，则返回 true</td>\n<td align=\"left\">x=6 y=3 (x==5 || y==5) 返回 false</td>\n</tr>\n<tr>\n<td align=\"left\">! x</td>\n<td align=\"left\">非</td>\n<td align=\"left\">如果 x 不为 true，则返回 true</td>\n<td align=\"left\">x=6 y=3 !(x==y) 返回 true</td>\n</tr>\n</tbody></table>\n<p>&amp;&amp;和and是一样的，||和or是一样的，效果一样，这两种基本上其他语言的写法也是在此之中，但是优先级不一样。</p>\n<p>优先级：&amp;&amp; &gt; = &gt; and</p>\n<p>|| &gt; = &gt; or</p>\n<h3 id=\"PHP-数组运算符\"><a href=\"#PHP-数组运算符\" class=\"headerlink\" title=\"PHP 数组运算符\"></a>PHP 数组运算符</h3><table>\n<thead>\n<tr>\n<th align=\"left\">运算符</th>\n<th align=\"left\">名称</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">x + y</td>\n<td align=\"left\">集合</td>\n<td align=\"left\">x 和 y 的集合</td>\n</tr>\n<tr>\n<td align=\"left\">x == y</td>\n<td align=\"left\">相等</td>\n<td align=\"left\">如果 x 和 y 具有相同的键/值对，则返回 true</td>\n</tr>\n<tr>\n<td align=\"left\">x === y</td>\n<td align=\"left\">恒等</td>\n<td align=\"left\">如果 x 和 y 具有相同的键/值对，且顺序相同类型相同，则返回 true</td>\n</tr>\n<tr>\n<td align=\"left\">x != y</td>\n<td align=\"left\">不相等</td>\n<td align=\"left\">如果 x 不等于 y，则返回 true</td>\n</tr>\n<tr>\n<td align=\"left\">x &lt;&gt; y</td>\n<td align=\"left\">不相等</td>\n<td align=\"left\">如果 x 不等于 y，则返回 true</td>\n</tr>\n<tr>\n<td align=\"left\">x !== y</td>\n<td align=\"left\">不恒等</td>\n<td align=\"left\">如果 x 不等于 y，则返回 true</td>\n</tr>\n</tbody></table>\n<p>！=和&lt;&gt;是起到同等作用的，都是不等于，<code>&lt;&gt;</code>还是第一次看见。</p>\n<h3 id=\"三元运算符\"><a href=\"#三元运算符\" class=\"headerlink\" title=\"三元运算符\"></a>三元运算符</h3><h4 id=\"语法格式\"><a href=\"#语法格式\" class=\"headerlink\" title=\"语法格式\"></a>语法格式</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">(expr1) ? (expr2) : (expr3) <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>对 expr1 求值为 TRUE 时的值为 expr2，在 expr1 求值为 FALSE 时的值为 expr3。和c语言中的有点像。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token variable\">$test</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$username</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$test</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token variable\">$test</span><span class=\"token punctuation\">:</span><span class=\"token string single-quoted-string\">'nobody'</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>PHP7+版本多了一个NULL合并运算符<code>??</code></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\t<span class=\"token comment\">// 如果 $_GET['user'] 不存在返回 'nobody'，否则返回 $_GET['user'] 的值</span>\n\t<span class=\"token variable\">$username</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">??</span> <span class=\"token string single-quoted-string\">'nobody'</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 类似的三元运算符</span>\n\t<span class=\"token variable\">$username</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> <span class=\"token string single-quoted-string\">'nobody'</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"组合比较符\"><a href=\"#组合比较符\" class=\"headerlink\" title=\"组合比较符\"></a>组合比较符</h3><p>只有PHP7+才支持组合比较符，又称为太空船操作符，符号是<code>&lt;=&gt;</code>。组合比较运算符可以轻松实现两个变量的比较。</p>\n<p>用法：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$a</span> <span class=\"token operator\">&lt;=></span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>解析如下：</p>\n<ul>\n<li>如果 <strong>$a &gt; $b</strong>, 则 <strong>$c</strong> 的值为 <strong>1</strong>。</li>\n<li>如果 <strong>$a == $b</strong>, 则 <strong>$c</strong> 的值为 <strong>0</strong>。</li>\n<li>如果 <strong>$a &lt; $b</strong>, 则 <strong>$c</strong> 的值为 <strong>-1</strong>。</li>\n</ul>\n<h2 id=\"PHP-if-else语句\"><a href=\"#PHP-if-else语句\" class=\"headerlink\" title=\"PHP if-else语句\"></a>PHP if-else语句</h2><h3 id=\"PHP-if语句\"><a href=\"#PHP-if语句\" class=\"headerlink\" title=\"PHP-if语句\"></a>PHP-if语句</h3><pre class=\"line-numbers language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">if(条件)\n&#123;\n    条件成立时要执行的代码；\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>和其他语言都一样。</p>\n<h3 id=\"PHP-if…else语句\"><a href=\"#PHP-if…else语句\" class=\"headerlink\" title=\"PHP-if…else语句\"></a>PHP-if…else语句</h3><pre class=\"line-numbers language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">if(条件)\n&#123;\n\t条件成立时执行的代码；\n&#125;\nelse\n&#123;\n\t条件不成立时执行的代码；\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"PHP-if…elseif…else语句\"><a href=\"#PHP-if…elseif…else语句\" class=\"headerlink\" title=\"PHP-if…elseif…else语句\"></a>PHP-if…elseif…else语句</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>语句<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> 条件成立时执行的代码；\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span>条件<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">elseif</span>条件成立时执行的代码；\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span>\n<span class=\"token punctuation\">&#123;</span>\n\t条件不成立是执行的代码；    \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"PHP-Switch语句\"><a href=\"#PHP-Switch语句\" class=\"headerlink\" title=\"PHP Switch语句\"></a>PHP Switch语句</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token argument-name\">lebel1</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"lebel1_is_true\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token argument-name\">lebel2</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"lebel2_is_true\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"lebel1_and_lebel2_are_all_false\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这个语句和其他语言也是一样的。</p>\n<h2 id=\"PHP数组\"><a href=\"#PHP数组\" class=\"headerlink\" title=\"PHP数组\"></a>PHP数组</h2><p>在PHP中创建数组使用的是array()函数</p>\n<p>在 PHP 中，有三种类型的数组：</p>\n<ul>\n<li><strong>数值数组</strong> - 带有数字 ID 键的数组</li>\n<li><strong>关联数组</strong> - 带有指定的键的数组，每个键关联一个值</li>\n<li><strong>多维数组</strong> - 包含一个或多个数组的数组</li>\n</ul>\n<h3 id=\"PHP数值数组\"><a href=\"#PHP数值数组\" class=\"headerlink\" title=\"PHP数值数组\"></a>PHP数值数组</h3><ul>\n<li>自动分配ID：$cars=array(‘BWM’,’Toyota’,’Volvo’);</li>\n<li>手动分配ID：</li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$cars</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"BWM\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cars</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"Toyota\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cars</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"Volvo\"</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"获取数组的长度-count-函数\"><a href=\"#获取数组的长度-count-函数\" class=\"headerlink\" title=\"获取数组的长度-count()函数\"></a>获取数组的长度-count()函数</h3><p>count()函数用于返回数组的长度(元素的数量)：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">&lt;</span>？<span class=\"token class-name type-declaration\">php</span>\n    <span class=\"token variable\">$cars</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"BWM\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"Benz\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"Volvo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cars</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>之前有看到字符串长度用，strlen()来获取。</p>\n<h3 id=\"遍历数值数组\"><a href=\"#遍历数值数组\" class=\"headerlink\" title=\"遍历数值数组\"></a>遍历数值数组</h3><p>使用for循环来实现:</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token variable\">$cars</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"BWM\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"Toyota\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"Volvo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$arraylenth</span> <span class=\"token operator\">=</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cars</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$x</span><span class=\"token operator\">&lt;</span><span class=\"token variable\">$arraylenth</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$x</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$cars</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br>\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"PHP关联数组\"><a href=\"#PHP关联数组\" class=\"headerlink\" title=\"PHP关联数组\"></a>PHP关联数组</h3><p>关联数组是使用您分配给数组的指定的键的数组。</p>\n<p><code>$age=array(&quot;Peter&quot;=&gt;&quot;35&quot;,&quot;Ben&quot;=&gt;&quot;37&quot;,&quot;Joe&quot;=&quot;43&quot;);</code></p>\n<p>这种就是关联数组的写法了，前面为键后面为值。</p>\n<h3 id=\"遍历关联数组\"><a href=\"#遍历关联数组\" class=\"headerlink\" title=\"遍历关联数组\"></a>遍历关联数组</h3><p>遍历使用foreach()函数。</p>\n<pre class=\"line-numbers language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">&lt;?php\n    $age &#x3D; array(&quot;Peter&quot;&#x3D;&gt;&quot;35&quot;,&quot;Ben&quot;&#x3D;&gt;&quot;37&quot;,&quot;Joe&quot;&#x3D;&gt;&quot;43&quot;);\n\tforeach( $age as $x&#x3D;&gt;$x_value)\n    &#123;\n        echo &quot;key&#x3D;&quot; . $x .&quot;value&#x3D;&quot; . $x_value;\n        echo &lt;br&gt;;\n    &#125;\n?&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","text":"PHP字符串变量来看看字符串操作函数和运算符 PHP并置运算符在PHP中，只有一个字符串运算符。 并置运算符(.)用于把两个字符串连接起来。 我之前也用过，例如 &lt;?php $s1 = \"I am\"; $s2 = \"a boy\"; echo $s1.\" \".$s2; ?> ...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"PHP","slug":"PHP","count":7,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":8,"path":"api/tags/PHP.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">PHP字符串变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E5%B9%B6%E7%BD%AE%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">PHP并置运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E7%9A%84strlen-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">PHP的strlen()函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E7%9A%84strpos-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">PHP的strpos()函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">PHP运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">PHP赋值运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-%E9%80%92%E5%A2%9E-%E9%80%92%E5%87%8F%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">PHP 递增&#x2F;递减运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">PHP比较运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">PHP 逻辑运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-%E6%95%B0%E7%BB%84%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">PHP 数组运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E5%85%83%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">三元运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">语法格式</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%84%E5%90%88%E6%AF%94%E8%BE%83%E7%AC%A6\"><span class=\"toc-text\">组合比较符</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP-if-else%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">PHP if-else语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-if%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">PHP-if语句</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-if%E2%80%A6else%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">PHP-if…else语句</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-if%E2%80%A6elseif%E2%80%A6else%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">PHP-if…elseif…else语句</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP-Switch%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">PHP Switch语句</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">PHP数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E6%95%B0%E5%80%BC%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">PHP数值数组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E6%95%B0%E7%BB%84%E7%9A%84%E9%95%BF%E5%BA%A6-count-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">获取数组的长度-count()函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%81%8D%E5%8E%86%E6%95%B0%E5%80%BC%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">遍历数值数组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E5%85%B3%E8%81%94%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">PHP关联数组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%81%8D%E5%8E%86%E5%85%B3%E8%81%94%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">遍历关联数组</span></a></li></ol></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"PHP学习(六)","uid":"f788d8271a603c16b39ea0a6ab3ddb7a","slug":"PHP学习-六","date":"2020-09-02T01:20:54.000Z","updated":"2020-09-02T15:59:18.000Z","comments":true,"path":"api/articles/PHP学习-六.json","keywords":"A1andNS","cover":null,"text":"PHP数组排序PHP - 数组排序函数在本章中，我们将一一介绍下列 PHP 数组排序函数： sort() - 对数组进行升序排列 rsort() - 对数组进行降序排列 asort() - 根据关联数组的值，对数组进行升序排列 ksort() - 根据关联数组的键，对数组进行升序...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"PHP","slug":"PHP","count":7,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":8,"path":"api/tags/PHP.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"PHP学习(四)","uid":"0e6a582945fdbc93fa2d76153b4ed629","slug":"PHP学习-四","date":"2020-08-31T13:11:18.000Z","updated":"2020-09-01T09:09:54.000Z","comments":true,"path":"api/articles/PHP学习-四.json","keywords":"A1andNS","cover":null,"text":"今天继续 PHP数据类型String（字符串）, Integer（整型）, Float（浮点型）, Boolean（布尔型）, Array（数组）, Object（对象）, NULL（空值）。 PHP字符串可以把任何文本放在单引号和双引号，一个字符串就是一串字符的序列，”Hell...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"PHP","slug":"PHP","count":7,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":8,"path":"api/tags/PHP.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}