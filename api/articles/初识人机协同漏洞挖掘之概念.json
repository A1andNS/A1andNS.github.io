{"title":"初识人机协同漏洞挖掘之概念","uid":"42e9f92a9641d13b1a38a01b1f926568","slug":"初识人机协同漏洞挖掘之概念","date":"2021-08-14T03:27:21.000Z","updated":"2021-08-26T06:16:23.000Z","comments":true,"path":"api/articles/初识人机协同漏洞挖掘之概念.json","keywords":"A1andNS","cover":"https://gitee.com/A1andNS/blogimage/raw/master/img/20210826113558.png","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>近日，有幸可以看到一份关于人机协同探索软件安全的资料，这份资料是在2018年4月19日由DARPA公开发布，各种行业都有人机协同的出现，有的是human-robot,有的是human-mathine，而这种人机协同（human-computer）用于漏洞挖掘的概念很新颖。</p>\n<h1 id=\"漏洞挖掘方式对比\"><a href=\"#漏洞挖掘方式对比\" class=\"headerlink\" title=\"漏洞挖掘方式对比\"></a>漏洞挖掘方式对比</h1><p>在这份资料的开头就直接给出了一个不同漏洞挖掘方法的比较图，也是十分形象和符合现实情况了。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210814222756.png\" alt=\"image-20210814114051402\"></p>\n<p>从上图中，我们可以看出<strong>human对于漏洞挖掘速度和准确性都是low</strong>，现实情况是什么呢？其实真是如此，人工进行漏洞挖掘其需要大量的时间付出，漏洞的发现速度自然是low的，而准确性很多时候也是low的，例如在一个复杂系统中，人工发现一个异常点后，往往需要跟进到上下文中去进行判断其是否可以利用，是否存在相应漏洞，但是正由于系统的复杂性人工判断时也会存在误判，从而往往时花费了大量时间，但是最终却产出较低。</p>\n<p>由此人类开始借助computer的力量了，我们开发了各种自动化工具，来辅助我们进行代码审计和漏洞发现，自动化工具利用的计算机的高计算能力，在漏洞发现的速度上是远高于人类的。但是同时又产生了一个问题，<strong>无论什么自动化工具，终究是按照人类为其制定的规则进行运作，在判断漏洞是否存在上依旧会出现大量误判的情况，可以认为其主要解决了了发现速度慢的问题，但准确性的问题依旧存在。</strong></p>\n<p>而人机协同实验表明，在漏洞挖掘速度提升的同时，也能够提高准确性，这是结合了计算机的高运算能力和人类的认知思维的结果。而最后的CHESS，也就是本文提出的Computer and Human Exploring Software Security，则是兼具高速度和高准确度。</p>\n<p>而目前研究的主要方向应该也是集中于<strong>利用人机协同方法来提高漏洞挖掘速度和准确度</strong>，降低漏扫设备的误报率应该也是大家的普遍共识了。速度高的问题利用computer来进行批量检测就可以较好满足，所以如何提高准确度是一个核心问题，人机协同的人要如何参与到这个过程中去，并且与计算机更加合理的进行配合，以可以<strong>将人类的思维认知能力结合入现有的漏洞扫描或挖掘系统中去</strong>。</p>\n<h1 id=\"CHESS方法\"><a href=\"#CHESS方法\" class=\"headerlink\" title=\"CHESS方法\"></a>CHESS方法</h1><p>接下来看看DARPA提出的CHESS方法，这是DARPA的人机协同方案，有一个流程图如下：</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210814222825.png\" alt=\"image-20210814130717741\"></p>\n<p>其实从这张图中可以看出human和automation之间协同的部分应该是集中在了Context Processor，也就是我们前面说到的上下文问题，人类挖掘漏洞一般都需要跟进到<strong>上下文</strong>中来考虑，而computer则是以一种静态规则库为主。这一点，中文paper中南京大学的一篇硕士论文就探讨了这个问题，她是对基于java的静态漏洞扫描器的升级改造，可以说是融入了上下文处理这个环节，使得人机协同工作，她的研究表明通过人机协同方式确实能够降低误报率，即提升准确性，并且根据其陈述，这个研究成果已经应用于其所在企业。</p>\n<p>但是CHESS也存在着诸多挑战，作者文章后面就逐一讲述了各个环节中的挑战和可能的解决方法。</p>\n<h2 id=\"TA1-Human-Collaboration\"><a href=\"#TA1-Human-Collaboration\" class=\"headerlink\" title=\"TA1 Human Collaboration\"></a>TA1 Human Collaboration</h2><p>例如在TA1中，就存在：1. 如何去标识和生成一个信息差距代表来传达给人类。2. 如何捕获和处理人类通过推理产生思维。说到底就是人机协同过程中，人如何参与的问题。人机之间如何实现沟通和交互，机器如何表达出人类可以去理解的信息，机器如何去理解人类做出的处理和反应。作者给出的第一个问题的可能答案是使用控制流程图、统一建模语言图或循环活动的希尔伯特曲线。第二个问题的则是使用注释/标签集合、仪表化的程序交互或人类心理模型分析。</p>\n<p>TA1理想状态下，需要实现的过程就是计算机生成人类可以理解的代表性信息，然后由人类来与计算机交互并传达人类的认知和反馈给计算机，计算机也需要将人类反馈的信息转换为漏洞挖掘系统格式，人机之间的交互是较少障碍的情况。当然还有一些愿景需要实现：1.优化人机交互方式。2. 拓展协作能力，不一定是1:1的人机协作。3.降低使用者门槛，利于技术推广，亦可产生更好的效果。4.应该逐渐向着减少人类认知参与比例的方向发展，让人类解放出来，只参与对机器而言较难判断的问题。</p>\n<h2 id=\"TA2-Vulnerability-Discovery\"><a href=\"#TA2-Vulnerability-Discovery\" class=\"headerlink\" title=\"TA2 Vulnerability Discovery\"></a>TA2 Vulnerability Discovery</h2><p>TA2中，作者列出了三大挑战，第一个是确定发现漏洞类别所需要的信息，第二个是引用CRS技术来对新的和现有的表示进行拓展和推理，第三个是开发新的漏洞检测技术来利用人类提供的认知。</p>\n<p>其需要实现的过程就是分析源代码和二进制文件的潜在漏洞，并且识别出源码和二进制文件中不确定的区域和自动分析中的其他障碍，再去识别漏洞的目标种类，最后生成一份漏洞证明和补丁。这个工作很重要，因为它以机器的手段解决了大多数问题，留下无法处理的问题再交由人类来协同工作。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210814222828.png\" alt=\"image-20210814171555372\"></p>\n<h2 id=\"TA3-Voice-of-the-Offense\"><a href=\"#TA3-Voice-of-the-Offense\" class=\"headerlink\" title=\"TA3 Voice of the Offense\"></a>TA3 Voice of the Offense</h2><p>TA3中，作者也列出了两个挑战，第一个是开发可拓展到1M+复杂性的挑战性问题。第二个是确保挑战性问题可以代表所需的漏洞类别。这里作者给出的解决方案是前者使用大规模自动化漏洞添加模块，后者使用漏洞测试集合，例如Juliet，CGC，OSS-FUZZ等或者是公共N-day漏洞数据库。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210814222831.png\" alt=\"image-20210814171624614\"></p>\n<p>开发具有所有所需类别漏洞和拓展到10k至1M+复杂度的挑战性问题，然后开发一个源码补丁给每一个挑战性问题漏洞，开发一个二进制补丁给每一个挑战性问题漏洞，再为每一类漏洞创建一份漏洞证明规范，开发一个PoV给每一个挑战性问题漏洞。</p>\n<p>这个环节需要确保挑战集合覆盖所有漏洞类别，拓展挑战集合以可以代表大型且复杂的代码库。这是为了保证它能够处理足够多的漏洞类别，从而提高效率。</p>\n<h2 id=\"TA4-Control-Team\"><a href=\"#TA4-Control-Team\" class=\"headerlink\" title=\"TA4 Control Team\"></a>TA4 Control Team</h2><p>在TA4中，作者列出了两个主要任务，第一个就是创建一个专家级黑客性能基线来应对TA3的挑战问题。第二个是确保CHESS R&amp;D团队了解软件逆向工程和利用的前沿技术。</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210814222835.png\" alt=\"image-20210814193615123\"></p>\n<p>一个优秀的系统，肯定是要使用最先进的工具来发现TA3中开发的源码和二进制挑战问题。根据提供的漏洞证明范本来为每一个发现的漏洞生成报告。并且也要在评估期间去收集反馈，以供后续审查。确认控制团队和CHESS系统之间的不同和冲突的评估效果。</p>\n<h2 id=\"TA5-Integration，Test-and-Evaluation\"><a href=\"#TA5-Integration，Test-and-Evaluation\" class=\"headerlink\" title=\"TA5 Integration，Test and Evaluation\"></a>TA5 Integration，Test and Evaluation</h2><p>在TA5中，有两个主要任务，第一个将TA1和TA2的技术和工艺集成到一个平台中，用于评估和过渡。TA5其实就是TA1+TA2，因为二者是紧密联系的，TA2中对漏洞进行发现，发现后可能出现计算机无法判断的情况，这个是否就要交给TA1中的human来进行处理了，由human来提供一个反馈从而实现人机协同。</p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p>[1]. Computers and Humans Exploring Software Security, Mr. Dustin Fraze</p>\n","text":"前言近日，有幸可以看到一份关于人机协同探索软件安全的资料，这份资料是在2018年4月19日由DARPA公开发布，各种行业都有人机协同的出现，有的是human-robot,有的是human-mathine，而这种人机协同（human-computer）用于漏洞挖掘的概念很新颖。 漏...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":36,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"漏洞挖掘","slug":"漏洞挖掘","count":2,"path":"api/tags/漏洞挖掘.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%96%B9%E5%BC%8F%E5%AF%B9%E6%AF%94\"><span class=\"toc-text\">漏洞挖掘方式对比</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#CHESS%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">CHESS方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#TA1-Human-Collaboration\"><span class=\"toc-text\">TA1 Human Collaboration</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#TA2-Vulnerability-Discovery\"><span class=\"toc-text\">TA2 Vulnerability Discovery</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#TA3-Voice-of-the-Offense\"><span class=\"toc-text\">TA3 Voice of the Offense</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#TA4-Control-Team\"><span class=\"toc-text\">TA4 Control Team</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#TA5-Integration%EF%BC%8CTest-and-Evaluation\"><span class=\"toc-text\">TA5 Integration，Test and Evaluation</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\"><span class=\"toc-text\">参考文献</span></a></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Blockchain Security入门笔记","uid":"268a3b6bf1055fd03ee61fb9fcbc2807","slug":"Blockchain-Security入门笔记","date":"2021-08-24T15:49:18.000Z","updated":"2021-09-23T10:45:24.000Z","comments":true,"path":"api/articles/Blockchain-Security入门笔记.json","keywords":"A1andNS","cover":"https://gitee.com/A1andNS/blogimage/raw/master/img/20210826113139.jpeg","text":"Blockchain入门必须从相关名词开始入手。 钱包WalletWallet是一个管理私钥的工具，通常包含一个软件客户端，允许使用者通过钱包检查、存储、交易持有的数字货币。这是一个重要的设施和入口。关于钱包的攻击主要集中再钓鱼和第三方hijack，这意味着钱包持有者需要提高安全...","link":"","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":36,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"区块链","slug":"区块链","count":2,"path":"api/tags/区块链.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Node-RED任意文件读取漏洞CVE-2021-3223","uid":"0754deaddc45dd81af7f6220591fd3dc","slug":"Node-RED任意文件读取漏洞CVE-2021-3223","date":"2021-08-08T14:17:23.000Z","updated":"2021-08-09T02:20:26.000Z","comments":true,"path":"api/articles/Node-RED任意文件读取漏洞CVE-2021-3223.json","keywords":"A1andNS","cover":"https://gitee.com/A1andNS/blogimage/raw/master/img/20210721205645.png","text":"背景知识 Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways. It provides ...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"漏洞复现","slug":"漏洞复现","count":4,"path":"api/categories/漏洞复现.json"}],"tags":[{"name":"漏洞复现","slug":"漏洞复现","count":6,"path":"api/tags/漏洞复现.json"},{"name":"任意文件","slug":"任意文件","count":1,"path":"api/tags/任意文件.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}