{"title":"PHP学习(四)","uid":"0e6a582945fdbc93fa2d76153b4ed629","slug":"PHP学习-四","date":"2020-08-31T13:11:18.000Z","updated":"2020-09-01T09:09:54.000Z","comments":true,"path":"api/articles/PHP学习-四.json","keywords":"A1andNS","cover":null,"content":"<p>今天继续</p>\n<h2 id=\"PHP数据类型\"><a href=\"#PHP数据类型\" class=\"headerlink\" title=\"PHP数据类型\"></a>PHP数据类型</h2><p>String（字符串）, Integer（整型）, Float（浮点型）, Boolean（布尔型）, Array（数组）, Object（对象）, NULL（空值）。</p>\n<h3 id=\"PHP字符串\"><a href=\"#PHP字符串\" class=\"headerlink\" title=\"PHP字符串\"></a>PHP字符串</h3><p>可以把任何文本放在单引号和双引号，一个字符串就是一串字符的序列，”Hello world”或’Hello world’</p>\n<h3 id=\"PHP整型\"><a href=\"#PHP整型\" class=\"headerlink\" title=\"PHP整型\"></a>PHP整型</h3><p>整数规则:</p>\n<ul>\n<li>整数必须至少有一个数字 (0-9)</li>\n<li>整数不能包含逗号或空格</li>\n<li>整数是没有小数点的</li>\n<li>整数可以是正数或负数</li>\n<li>整型可以用三种格式来指定：十进制， 十六进制（ 以 0x 为前缀）或八进制（前缀为 0）。</li>\n</ul>\n<pre class=\"line-numbers language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;这是一个数据类型查询网站&lt;&#x2F;title&gt;\n    &lt;&#x2F;head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;下面看回显：&lt;&#x2F;h1&gt;\n        &lt;?php\n        \t$x &#x3D; 1234; &#x2F;&#x2F;正整数\n        \tvar_dump($x);\n        \techo &#39;&lt;br&gt;&#39;;\n        \t$y &#x3D; -1234; &#x2F;&#x2F;负整数\n        \tvar_dump($y);\n        \techo &#39;&lt;br&gt;&#39;;\n        \t$z &#x3D; 0x8c; &#x2F;&#x2F;16进制数\n        \tvar_dump($z);\n        \techo &#x3D; &#39;&lt;br&gt;&#39;;\n        \t$k &#x3D; 047; &#x2F;&#x2F;8进制数\n        \tvar_dump($k);\n\t\t\t&#x2F;&#x2F;如果想要知道变量的数据类型和值，可以用var_dump()函数\n    \t?&gt;\n    &lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"PHP浮点型\"><a href=\"#PHP浮点型\" class=\"headerlink\" title=\"PHP浮点型\"></a>PHP浮点型</h3><p>和其他语言基本一样，就是有小数部分的或者指数形式的。</p>\n<h3 id=\"PHP布尔型\"><a href=\"#PHP布尔型\" class=\"headerlink\" title=\"PHP布尔型\"></a>PHP布尔型</h3><p>也是和大家一样的TRUE或FALSE两种。</p>\n<h3 id=\"PHP数组\"><a href=\"#PHP数组\" class=\"headerlink\" title=\"PHP数组\"></a>PHP数组</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token variable\">$name</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Alan\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"Ben\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"Alice\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"PHP对象\"><a href=\"#PHP对象\" class=\"headerlink\" title=\"PHP对象\"></a>PHP对象</h3><p>在PHP中，对象必须声明。首先你必须使用class声明类对象，类是可以包含属性和方法的结构。然后我们在类中定义数据类型，然后在实例化的类中使用数据类型。</p>\n<p>这个就是面向对象编程的东西，之前写过java的面向对象写法，感觉PHP也差不多。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Car</span>\n\t<span class=\"token punctuation\">&#123;</span>\n    \t<span class=\"token keyword\">var</span> <span class=\"token variable\">$color</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token keyword\">var</span> <span class=\"token variable\">$brand</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token keyword\">function</span> <span class=\"token function\">_construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$color</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"red\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$brand</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"BWM\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">color</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$color</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">brand</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$brand</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    \t<span class=\"token keyword\">function</span> <span class=\"token function\">whatColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">color</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//this关键字就是指向当前对象实例的指针，不指向任何其他对象或类。在Java里是写成this.color</span>\n        <span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"PHP-NULL值\"><a href=\"#PHP-NULL值\" class=\"headerlink\" title=\"PHP NULL值\"></a>PHP NULL值</h3><p>NULL值表示变量没有值，NULL就是数据类型为NULL的值。NULL 值指明一个变量是否为空值。 同样可用于数据空值和NULL值的区别。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token variable\">$x</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"Hello World\"</span>\n    <span class=\"token variable\">$x</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//清空变量数据</span>\n\t<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"PHP类型比较\"><a href=\"#PHP类型比较\" class=\"headerlink\" title=\"PHP类型比较\"></a>PHP类型比较</h2><p>虽然PHP是弱类型语言，但也需要明白变量类型及它们的意义，因为我们经常需要对PHP变量进行比较，包含松散和严格比较。</p>\n<ul>\n<li>松散比较：使用两个等号 <strong>==</strong> 比较，只比较值，不比较类型。</li>\n<li>严格比较：用三个等号 <strong>===</strong> 比较，除了比较值，也比较类型。</li>\n</ul>\n<p>“123”是一个字符串，123是一个整数。FALSE是一个布尔值，而”false”是一个字符串。</p>\n<p>例如42==”42”成立,因为这只是数值上的比较，42===”42”不成立，因为42和”42”的类型不同。</p>\n<p>0==false，0==null，false==null，”0”==false，””==false，””==null</p>\n<h2 id=\"PHP常量\"><a href=\"#PHP常量\" class=\"headerlink\" title=\"PHP常量\"></a>PHP常量</h2><p>常量是一个简单值的标识符。该值在脚本中不能改变。一个常量由英文字母、下划线、和数字组成，但是数字不能作为首字母出现。<strong>常量在整个脚本中都可以用。</strong></p>\n<h3 id=\"设置PHP常量\"><a href=\"#设置PHP常量\" class=\"headerlink\" title=\"设置PHP常量\"></a>设置PHP常量</h3><p>使用define()函数来设置PHP常量。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword type-declaration\">bool</span> <span class=\"token function\">define </span><span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$name</span> <span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$value</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">bool</span> <span class=\"token variable\">$case_insensitive</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>该函数有三个参数:</p>\n<ul>\n<li><strong>name：</strong>必选参数，常量名称，即标志符。</li>\n<li><strong>value：</strong>必选参数，常量的值。</li>\n<li><strong>case_insensitive</strong> ：可选参数，如果设置为 TRUE，该常量则大小写不敏感。默认是大小写敏感的。</li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// 区分大小写的常量名,没有设置case_insensitive参数</span>\n<span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"GREETING\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"欢迎访问a1andns.github.io\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token constant\">GREETING</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 输出 \"a1andns.github.io\"</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;br>'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> greeting<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 输出 \"greeting\"</span>\n<span class=\"token delimiter important\">?></span></span>\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// 不区分大小写的常量名，设置case_insensitive参数为true</span>\n<span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"GREETING\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"欢迎访问 Runoob.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> greeting<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 输出 \"欢迎访问 Runoob.com\"</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>常量是全局的，在外部和内部都可以直接调用</strong></p>\n","text":"今天继续 PHP数据类型String（字符串）, Integer（整型）, Float（浮点型）, Boolean（布尔型）, Array（数组）, Object（对象）, NULL（空值）。 PHP字符串可以把任何文本放在单引号和双引号，一个字符串就是一串字符的序列，”Hell...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"PHP","slug":"PHP","count":7,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":8,"path":"api/tags/PHP.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">PHP数据类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E5%AD%97%E7%AC%A6%E4%B8%B2\"><span class=\"toc-text\">PHP字符串</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E6%95%B4%E5%9E%8B\"><span class=\"toc-text\">PHP整型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E6%B5%AE%E7%82%B9%E5%9E%8B\"><span class=\"toc-text\">PHP浮点型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E5%B8%83%E5%B0%94%E5%9E%8B\"><span class=\"toc-text\">PHP布尔型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">PHP数组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">PHP对象</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-NULL%E5%80%BC\"><span class=\"toc-text\">PHP NULL值</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">PHP类型比较</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">PHP常量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AEPHP%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">设置PHP常量</span></a></li></ol></li></ol>","author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"PHP学习(五)","uid":"e46c728e6baeec6ace92d418c82481b9","slug":"PHP学习-五","date":"2020-09-01T09:03:26.000Z","updated":"2020-09-01T16:01:54.000Z","comments":true,"path":"api/articles/PHP学习-五.json","keywords":"A1andNS","cover":null,"text":"PHP字符串变量来看看字符串操作函数和运算符 PHP并置运算符在PHP中，只有一个字符串运算符。 并置运算符(.)用于把两个字符串连接起来。 我之前也用过，例如 &lt;?php $s1 = \"I am\"; $s2 = \"a boy\"; echo $s1.\" \".$s2; ?> ...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"PHP","slug":"PHP","count":7,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":8,"path":"api/tags/PHP.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"数组内元素循环右移k位","uid":"9cc4e1ca2693b071a7fc6321af0c5a32","slug":"数组内元素循环右移k位","date":"2020-08-31T10:33:07.000Z","updated":"2020-08-31T10:52:30.000Z","comments":true,"path":"api/articles/数组内元素循环右移k位.json","keywords":"A1andNS","cover":"https://www.runoob.com/wp-content/uploads/2015/01/cpp-mini-logo.png","text":"问题内容用来将数组a[n]的每个元素都循环地右移k 位，这里1≤k≤n 以下为自写解决方案，写了挺久的，太久没有摸C了，底下的可能不够高明： #include &lt;iostream&gt; using namespace std; &#x2F;*&#x3D;&#x3D;&#x...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"C++","slug":"C","count":1,"path":"api/categories/C.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":3,"path":"api/tags/数据结构.json"},{"name":"C++","slug":"C","count":2,"path":"api/tags/C.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}