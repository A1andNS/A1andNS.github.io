{"title":"Python安全编程小练习1","uid":"be2246345f6d978ee51c96274fe19c7f","slug":"Python安全编程小练习1","date":"2021-04-10T15:42:19.000Z","updated":"2021-06-28T14:41:11.625Z","comments":true,"path":"api/articles/Python安全编程小练习1.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200323233608.png","content":"<p>最近在看MS08067实验室出的《Python安全攻防》一书，故而有此系列记录学习和练习情况。</p>\n<h1 id=\"基于Socket库的聊天程序\"><a href=\"#基于Socket库的聊天程序\" class=\"headerlink\" title=\"基于Socket库的聊天程序\"></a>基于Socket库的聊天程序</h1><p>socket库之前也有接触过，第一次接触这个库实在做一个课程设计的时候，但是为了设计一个端口扫描器使用了socket库，所以这里再次遇到就不会那么陌生了。关于这个聊天程序，首先就是需要一个客户端和一个服务器端，由客户端发起连接到服务器端，从而建立一个链路来实现两台设备之间的通讯。 </p>\n<h2 id=\"Client\"><a href=\"#Client\" class=\"headerlink\" title=\"Client\"></a>Client</h2><p>下面是客户端的源代码，使用try-except-else结构来实现异常处理：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># coding=UTF-8</span>\n<span class=\"token comment\"># author: A1andNS</span>\n<span class=\"token keyword\">import</span> socket\n<span class=\"token keyword\">import</span> sys\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">client</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    host <span class=\"token operator\">=</span> host\n    port <span class=\"token operator\">=</span> <span class=\"token number\">6666</span>\n    s <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        s<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Server has some problem!\"</span><span class=\"token punctuation\">)</span>\n        sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n            c <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myself:'</span><span class=\"token punctuation\">)</span>\n            s<span class=\"token punctuation\">.</span>sendall<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            data <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\n            data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>host <span class=\"token operator\">+</span> <span class=\"token string\">\":\"</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> c<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'bye'</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n        s<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    Host <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入对方的IP地址:\"</span><span class=\"token punctuation\">)</span>\n    client<span class=\"token punctuation\">(</span>Host<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Server\"><a href=\"#Server\" class=\"headerlink\" title=\"Server\"></a>Server</h2><p>下面是服务器端的源代码：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># coding=UTF-8</span>\n<span class=\"token comment\"># author: A1andNS</span>\n<span class=\"token keyword\">import</span> socket\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">Server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    host <span class=\"token operator\">=</span> <span class=\"token string\">\"0.0.0.0\"</span>\n    port <span class=\"token operator\">=</span> <span class=\"token number\">6666</span>\n    s <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">)</span>\n    s<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    s<span class=\"token punctuation\">.</span>listen<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Listening at port 6666\"</span><span class=\"token punctuation\">)</span>\n    conn<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>accept<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Connect by: '</span><span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        data <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\n        data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> data<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Received message: '</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n        m <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Myself:\"</span><span class=\"token punctuation\">)</span>\n        conn<span class=\"token punctuation\">.</span>sendall<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> m<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'bye'</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n    conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    s<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    Server<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"运行截图\"><a href=\"#运行截图\" class=\"headerlink\" title=\"运行截图\"></a>运行截图</h2><p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/2021-04-11%2000-13-11%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png\" alt=\"通讯截图\"></p>\n<p>这就是一个简单的聊天程序，通过调用socket库来建立一个通讯连接，然后分别发送信息和接受信息。</p>\n<h1 id=\"DNS信息搜集小工具\"><a href=\"#DNS信息搜集小工具\" class=\"headerlink\" title=\"DNS信息搜集小工具\"></a>DNS信息搜集小工具</h1><p>DNS可用用于查询不少的信息，例如解析到IIP地址，whois查询等，这些都会为我们带来一些信息搜集上的帮助。通过Python现成的一些第三方库就可用实现一个简单的DNS小工具了，这里主要使用socket库和whois库来实现，辅助以time库和re库，主要也就两个功能一个是域名解析，一个是whois查询，由前者来实现，后者的工作主要是适当的延时以便于发现不同的IP地址，标准化域名以避免解析是报错。那么下面就看一下代码吧：</p>\n<h2 id=\"Source-Code：\"><a href=\"#Source-Code：\" class=\"headerlink\" title=\"Source Code：\"></a>Source Code：</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># coding=UTF-8</span>\n<span class=\"token comment\"># author: A1andNS</span>\n<span class=\"token keyword\">import</span> socket\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">from</span> whois <span class=\"token keyword\">import</span> whois\n\n\n<span class=\"token comment\"># 匹配域名</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">comp</span><span class=\"token punctuation\">(</span>old_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pattern <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'([a-z-]*[.]+)+[a-z]+'</span><span class=\"token punctuation\">,</span> re<span class=\"token punctuation\">.</span>I<span class=\"token punctuation\">)</span>\n    name_temp <span class=\"token operator\">=</span> pattern<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span>old_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> name_temp\n\n\n<span class=\"token comment\"># 查询ip</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">to_ip</span><span class=\"token punctuation\">(</span>new_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ips <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+]Domain Name: \"</span> <span class=\"token operator\">+</span> new_name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"==========IP Address==========\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        ip <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>gethostbyname<span class=\"token punctuation\">(</span>new_name<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> ip <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> ips<span class=\"token punctuation\">:</span>\n            ips<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+]IP Address: \"</span> <span class=\"token operator\">+</span> ip<span class=\"token punctuation\">)</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># whois查询</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">to_whois</span><span class=\"token punctuation\">(</span>new_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=============Whois============\"</span><span class=\"token punctuation\">)</span>\n    data <span class=\"token operator\">=</span> whois<span class=\"token punctuation\">(</span>new_name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+]\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\": \"</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> i <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'name_servers'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'status'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                    l <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+]'</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token string\">' '</span> <span class=\"token operator\">*</span> l<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> j<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\";\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">';'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">logo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">' ____  _   _ ____    _____           _  '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'|  _ \\| \\ | / ___|  |_   _|__   ___ | |___ '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'| | | |  \\| \\___ \\    | |/ _ \\ / _ \\| / __|'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'| | | |  \\| \\___ \\    | |/ _ \\ / _ \\| / __|'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'|____/|_| \\_|____/    |_|\\___/ \\___/|_|___/'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    logo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter domain name:\"</span><span class=\"token punctuation\">)</span>\n    name <span class=\"token operator\">=</span> comp<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># print(name)</span>\n    to_ip<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n    to_whois<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这个应该是很简单了，应该大家也很容易就看懂了，为了风格统一和观看体验，我就多用了很多print语句，来稍微调整一下UI。下面看效果图：</p>\n<h2 id=\"运行截图-1\"><a href=\"#运行截图-1\" class=\"headerlink\" title=\"运行截图\"></a>运行截图</h2><p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/2021-04-10%2023-38-20%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png\" alt=\"运行截图\"></p>\n<p>通过分析运行结果，可用搜集到一些有用的信息，例如公司名称，地址、域名注册商等等，例如上面这个例子，它的whois信息就非常全面了。</p>\n<p>好了今天的小练习就到此结束了，该系列将会不定期更新。</p>\n","text":"最近在看MS08067实验室出的《Python安全攻防》一书，故而有此系列记录学习和练习情况。 基于Socket库的聊天程序socket库之前也有接触过，第一次接触这个库实在做一个课程设计的时候，但是为了设计一个端口扫描器使用了socket库，所以这里再次遇到就不会那么陌生了。关...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"Python学习","slug":"Python学习","count":19,"path":"api/categories/Python学习.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"Python","slug":"Python","count":23,"path":"api/tags/Python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E4%BA%8ESocket%E5%BA%93%E7%9A%84%E8%81%8A%E5%A4%A9%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">基于Socket库的聊天程序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Client\"><span class=\"toc-text\">Client</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Server\"><span class=\"toc-text\">Server</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E6%88%AA%E5%9B%BE\"><span class=\"toc-text\">运行截图</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#DNS%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86%E5%B0%8F%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">DNS信息搜集小工具</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Source-Code%EF%BC%9A\"><span class=\"toc-text\">Source Code：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E6%88%AA%E5%9B%BE-1\"><span class=\"toc-text\">运行截图</span></a></li></ol></li></ol>","author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Python安全编程小练习2","uid":"04eae79709b48ea326c448f0846fb5ce","slug":"Python安全编程小练习2","date":"2021-04-14T11:32:47.000Z","updated":"2021-06-28T14:41:16.106Z","comments":true,"path":"api/articles/Python安全编程小练习2.json","keywords":"A1andNS","cover":"https://cdn.jsdelivr.net/gh/A1andNS/picgo/img/20200323233608.png","text":"今天继续，来看看子域名挖掘和邮件爬取，今天涉及的两者都是对网络爬虫的深入应用，从而实现信息搜集目的。并且因为是利用爬虫来爬取搜索引擎的信息，所以直接面临的就是百度等网站的反爬虫保护，而我们要实现工具的使用就需要绕过这些保护。 前期准备就按照书上的来，我们也来看看必应搜索(http...","link":"","photos":[],"count_time":{"symbolsCount":"7.7k","symbolsTime":"7 mins."},"categories":[{"name":"Python学习","slug":"Python学习","count":19,"path":"api/categories/Python学习.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":32,"path":"api/tags/网络安全.json"},{"name":"Python","slug":"Python","count":23,"path":"api/tags/Python.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Linux Shortcut Maker","uid":"de5be025e70b749bc5a62bb8d97cf520","slug":"Deepin-Shotcut-Maker","date":"2021-04-06T14:33:25.000Z","updated":"2021-04-14T11:30:37.280Z","comments":true,"path":"api/articles/Deepin-Shotcut-Maker.json","keywords":"A1andNS","cover":[],"text":"ProfileI have writen a blog about how to create a shortcut in Linux. The way to create a .desktop file was introduced by me in that blog art...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"资源教程","slug":"资源教程","count":7,"path":"api/categories/资源教程.json"}],"tags":[{"name":"Python","slug":"Python","count":23,"path":"api/tags/Python.json"},{"name":"Deepin","slug":"Deepin","count":2,"path":"api/tags/Deepin.json"}],"author":{"name":"A1andNS","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}